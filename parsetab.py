
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR COMMA COMPARISON CTECHAR CTEFLOAT CTEINT CTESTRING DECREMENT DIFFERENT DIVIDE DO ELSE EQUALS FLOAT FOR GREATERHANOREQUAL GREATERTHAN ID IF INCREMENT INT LEFTBRACKET LEFTPARENTHESIS LEFTSQRBRACKET LESSTHAN LESSTHANOREQUAL MAIN MINUS MOD MODULE MULTIPLY OR PLUS PLUSEQUALS PROGRAM READ RETURN RIGHTBRACKET RIGHTPARENTHESIS RIGHTSQRBRACKET SEMICOLON SUBSTRACTEQUALS THEN TO VAR VOID WHILE WRITE\n    program : PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block\n            | PROGRAM ID SEMICOLON funciones MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block\n            | PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block\n    \n    vars : VAR vars_list\n    \n    vars_list : data_type decl_ids_list SEMICOLON vars_list\n              | data_type decl_ids_list SEMICOLON funciones\n              | data_type decl_ids_list SEMICOLON\n    \n    data_type : INT\n              | FLOAT\n              | CHAR\n    \n    decl_ids_list : id_declar COMMA decl_ids_list\n                  | id_declar\n    \n    id_declar : ID dimen_declara dimen_declara\n              | ID dimen_declara\n              | ID\n    \n    dimen_declara : LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET\n    \n    funcvoid : VOID MODULE ID parameters vars block\n             | VOID MODULE ID parameters block\n    \n    funcreturn : data_type MODULE ID parameters vars block\n               | data_type MODULE ID parameters block\n    \n    funciones : funcvoid funciones\n            | funcreturn funciones\n            | funcvoid\n            | funcreturn\n    \n    parameters : LEFTPARENTHESIS parameters_list RIGHTPARENTHESIS\n               | LEFTPARENTHESIS RIGHTPARENTHESIS\n    \n    parameters_list : data_type id_declar COMMA parameters_list\n                    | data_type id_declar\n    \n    block : LEFTBRACKET statutes_list RIGHTBRACKET\n          | LEFTBRACKET RIGHTBRACKET\n    \n    statute : asignation\n            | reading\n            | writing\n            | decision\n            | loop\n            | function_call SEMICOLON\n    \n    statutes_list : statute statutes_list\n                  | statute\n    \n    asignation : id_dimensions EQUALS expresion SEMICOLON\n               | id_dimensions PLUSEQUALS expresion SEMICOLON\n               | id_dimensions SUBSTRACTEQUALS expresion SEMICOLON\n               | id_dimensions INCREMENT SEMICOLON\n               | id_dimensions DECREMENT SEMICOLON\n    \n    expresion_list : expresion COMMA expresion_list\n                   | expresion\n    \n    function_call : ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS\n    \n    ids_list : id_dimensions COMMA ids_list\n             | id_dimensions\n    \n    reading : READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON\n    \n    writing : WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON\n    \n    writing_list : CTESTRING COMMA writing_list\n                 | expresion COMMA writing_list\n                 | CTESTRING\n                 | expresion\n    \n    decision : IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block\n             | IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block\n    \n    loop : conditional block\n         | non_conditional block\n    \n    conditional : WHILE LEFTPARENTHESIS expresion RIGHTPARENTHESIS DO\n    \n    non_conditional : FOR ID EQUALS exp TO exp DO\n    \n    expresion : exp comparators exp\n              | exp\n    \n    comparators : COMPARISON\n                | GREATERHANOREQUAL\n                | LESSTHANOREQUAL\n                | GREATERTHAN\n                | LESSTHAN\n                | DIFFERENT\n                | OR\n                | AND\n    \n    exp : term exp_operator exp\n        | term\n    \n    exp_operator : PLUS\n                 | MINUS\n    \n    term : factor term_operator term\n         | factor\n    \n    term_operator : MULTIPLY\n                  | DIVIDE\n                  | MOD\n    \n    factor : LEFTPARENTHESIS expresion RIGHTPARENTHESIS\n           | exp_operator opt_value\n           | opt_value\n    \n    id_dimensions : ID exp_dimension exp_dimension\n                   | ID exp_dimension\n                   | ID\n    \n    exp_dimension : LEFTSQRBRACKET expresion RIGHTSQRBRACKET\n    \n    opt_value : CTEINT\n              | CTEFLOAT\n              | CTECHAR\n              | function_call\n              | id_dimensions\n    '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,34,44,46,63,77,],[0,-3,-1,-30,-2,-29,]),'ID':([2,13,14,15,20,23,24,35,38,46,47,48,49,50,51,52,62,64,74,77,79,80,81,82,85,86,87,88,89,90,92,93,104,106,108,109,116,117,130,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,149,150,152,154,155,158,167,169,175,176,180,],[3,-8,-9,-10,30,31,32,60,30,-30,60,-31,-32,-33,-34,-35,94,30,30,-29,-36,60,60,60,120,60,60,-57,-58,60,60,60,60,60,-73,-74,-42,-43,60,-39,60,-63,-64,-65,-66,-67,-68,-69,-70,60,60,-77,-78,-79,-40,-41,120,60,60,60,-49,-50,60,-56,-55,]),'SEMICOLON':([3,28,29,30,39,53,60,67,68,83,84,91,95,100,101,102,103,105,107,110,111,112,113,114,115,127,143,151,153,157,159,163,164,165,166,],[4,37,-12,-15,-14,79,-85,-11,-13,116,117,-84,-16,-91,132,-62,-72,-76,-82,-87,-88,-89,-90,149,150,-83,-81,167,169,-46,-86,-61,-71,-75,-80,]),'MAIN':([4,5,7,9,10,19,21,22,37,46,65,66,71,76,77,96,99,],[6,16,18,-23,-24,-4,-21,-22,-7,-30,-5,-6,-18,-20,-29,-17,-19,]),'VAR':([4,41,43,73,97,],[8,8,8,-26,-25,]),'VOID':([4,9,10,37,46,71,76,77,96,99,],[11,11,11,11,-30,-18,-20,-29,-17,-19,]),'INT':([4,8,9,10,37,42,46,71,76,77,96,99,131,],[13,13,13,13,13,13,-30,-18,-20,-29,-17,-19,13,]),'FLOAT':([4,8,9,10,37,42,46,71,76,77,96,99,131,],[14,14,14,14,14,14,-30,-18,-20,-29,-17,-19,14,]),'CHAR':([4,8,9,10,37,42,46,71,76,77,96,99,131,],[15,15,15,15,15,15,-30,-18,-20,-29,-17,-19,15,]),'LEFTPARENTHESIS':([6,16,18,31,32,55,56,57,60,61,80,81,82,86,87,90,92,93,106,108,109,130,133,134,135,136,137,138,139,140,141,142,144,145,146,147,154,155,158,175,],[17,25,27,42,42,85,86,87,90,93,106,106,106,106,106,106,106,106,106,-73,-74,106,106,-63,-64,-65,-66,-67,-68,-69,-70,106,106,-77,-78,-79,106,106,106,106,]),'LEFTBRACKET':([9,10,19,21,22,26,33,36,37,41,43,46,58,59,65,66,70,71,73,75,76,77,96,97,99,172,174,178,179,],[-23,-24,-4,-21,-22,35,35,35,-7,35,35,-30,35,35,-5,-6,35,-18,-26,35,-20,-29,-17,-25,-19,35,-59,35,-60,]),'MODULE':([11,12,13,14,15,64,],[23,24,-8,-9,-10,24,]),'RIGHTPARENTHESIS':([17,25,27,30,39,42,60,68,72,91,95,98,100,102,103,105,107,110,111,112,113,118,119,120,121,122,123,124,125,126,127,129,143,148,157,159,162,163,164,165,166,168,170,171,173,],[26,33,36,-15,-14,73,-85,-13,97,-84,-16,-28,-91,-62,-72,-76,-82,-87,-88,-89,-90,151,-48,-85,153,-53,-54,156,157,-45,-83,160,-81,166,-46,-86,-27,-61,-71,-75,-80,-47,-51,-52,-44,]),'COMMA':([29,30,39,60,68,91,95,98,100,102,103,105,107,110,111,112,113,119,120,122,123,126,127,143,157,159,163,164,165,166,],[38,-15,-14,-85,-13,-84,-16,131,-91,-62,-72,-76,-82,-87,-88,-89,-90,152,-85,154,155,158,-83,-81,-46,-86,-61,-71,-75,-80,]),'LEFTSQRBRACKET':([30,39,60,91,95,120,159,],[40,40,92,92,-16,92,-86,]),'RIGHTBRACKET':([35,45,46,47,48,49,50,51,52,77,78,79,88,89,116,117,132,149,150,167,169,176,180,],[46,77,-30,-38,-31,-32,-33,-34,-35,-29,-37,-36,-57,-58,-42,-43,-39,-40,-41,-49,-50,-56,-55,]),'READ':([35,46,47,48,49,50,51,52,77,79,88,89,116,117,132,149,150,167,169,176,180,],[55,-30,55,-31,-32,-33,-34,-35,-29,-36,-57,-58,-42,-43,-39,-40,-41,-49,-50,-56,-55,]),'WRITE':([35,46,47,48,49,50,51,52,77,79,88,89,116,117,132,149,150,167,169,176,180,],[56,-30,56,-31,-32,-33,-34,-35,-29,-36,-57,-58,-42,-43,-39,-40,-41,-49,-50,-56,-55,]),'IF':([35,46,47,48,49,50,51,52,77,79,88,89,116,117,132,149,150,167,169,176,180,],[57,-30,57,-31,-32,-33,-34,-35,-29,-36,-57,-58,-42,-43,-39,-40,-41,-49,-50,-56,-55,]),'WHILE':([35,46,47,48,49,50,51,52,77,79,88,89,116,117,132,149,150,167,169,176,180,],[61,-30,61,-31,-32,-33,-34,-35,-29,-36,-57,-58,-42,-43,-39,-40,-41,-49,-50,-56,-55,]),'FOR':([35,46,47,48,49,50,51,52,77,79,88,89,116,117,132,149,150,167,169,176,180,],[62,-30,62,-31,-32,-33,-34,-35,-29,-36,-57,-58,-42,-43,-39,-40,-41,-49,-50,-56,-55,]),'CTEINT':([40,80,81,82,86,87,90,92,93,104,106,108,109,130,133,134,135,136,137,138,139,140,141,142,144,145,146,147,154,155,158,175,],[69,110,110,110,110,110,110,110,110,110,110,-73,-74,110,110,-63,-64,-65,-66,-67,-68,-69,-70,110,110,-77,-78,-79,110,110,110,110,]),'ELSE':([46,77,176,],[-30,-29,178,]),'EQUALS':([54,60,91,94,127,159,],[80,-85,-84,130,-83,-86,]),'PLUSEQUALS':([54,60,91,127,159,],[81,-85,-84,-83,-86,]),'SUBSTRACTEQUALS':([54,60,91,127,159,],[82,-85,-84,-83,-86,]),'INCREMENT':([54,60,91,127,159,],[83,-85,-84,-83,-86,]),'DECREMENT':([54,60,91,127,159,],[84,-85,-84,-83,-86,]),'MULTIPLY':([60,91,100,105,107,110,111,112,113,127,143,157,159,166,],[-85,-84,-91,145,-82,-87,-88,-89,-90,-83,-81,-46,-86,-80,]),'DIVIDE':([60,91,100,105,107,110,111,112,113,127,143,157,159,166,],[-85,-84,-91,146,-82,-87,-88,-89,-90,-83,-81,-46,-86,-80,]),'MOD':([60,91,100,105,107,110,111,112,113,127,143,157,159,166,],[-85,-84,-91,147,-82,-87,-88,-89,-90,-83,-81,-46,-86,-80,]),'PLUS':([60,80,81,82,86,87,90,91,92,93,100,103,105,106,107,108,109,110,111,112,113,127,130,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,154,155,157,158,159,165,166,175,],[-85,108,108,108,108,108,108,-84,108,108,-91,108,-76,108,-82,-73,-74,-87,-88,-89,-90,-83,108,108,-63,-64,-65,-66,-67,-68,-69,-70,108,-81,108,-77,-78,-79,108,108,-46,108,-86,-75,-80,108,]),'MINUS':([60,80,81,82,86,87,90,91,92,93,100,103,105,106,107,108,109,110,111,112,113,127,130,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,154,155,157,158,159,165,166,175,],[-85,109,109,109,109,109,109,-84,109,109,-91,109,-76,109,-82,-73,-74,-87,-88,-89,-90,-83,109,109,-63,-64,-65,-66,-67,-68,-69,-70,109,-81,109,-77,-78,-79,109,109,-46,109,-86,-75,-80,109,]),'COMPARISON':([60,91,100,102,103,105,107,110,111,112,113,127,143,157,159,164,165,166,],[-85,-84,-91,134,-72,-76,-82,-87,-88,-89,-90,-83,-81,-46,-86,-71,-75,-80,]),'GREATERHANOREQUAL':([60,91,100,102,103,105,107,110,111,112,113,127,143,157,159,164,165,166,],[-85,-84,-91,135,-72,-76,-82,-87,-88,-89,-90,-83,-81,-46,-86,-71,-75,-80,]),'LESSTHANOREQUAL':([60,91,100,102,103,105,107,110,111,112,113,127,143,157,159,164,165,166,],[-85,-84,-91,136,-72,-76,-82,-87,-88,-89,-90,-83,-81,-46,-86,-71,-75,-80,]),'GREATERTHAN':([60,91,100,102,103,105,107,110,111,112,113,127,143,157,159,164,165,166,],[-85,-84,-91,137,-72,-76,-82,-87,-88,-89,-90,-83,-81,-46,-86,-71,-75,-80,]),'LESSTHAN':([60,91,100,102,103,105,107,110,111,112,113,127,143,157,159,164,165,166,],[-85,-84,-91,138,-72,-76,-82,-87,-88,-89,-90,-83,-81,-46,-86,-71,-75,-80,]),'DIFFERENT':([60,91,100,102,103,105,107,110,111,112,113,127,143,157,159,164,165,166,],[-85,-84,-91,139,-72,-76,-82,-87,-88,-89,-90,-83,-81,-46,-86,-71,-75,-80,]),'OR':([60,91,100,102,103,105,107,110,111,112,113,127,143,157,159,164,165,166,],[-85,-84,-91,140,-72,-76,-82,-87,-88,-89,-90,-83,-81,-46,-86,-71,-75,-80,]),'AND':([60,91,100,102,103,105,107,110,111,112,113,127,143,157,159,164,165,166,],[-85,-84,-91,141,-72,-76,-82,-87,-88,-89,-90,-83,-81,-46,-86,-71,-75,-80,]),'RIGHTSQRBRACKET':([60,69,91,100,102,103,105,107,110,111,112,113,127,128,143,157,159,163,164,165,166,],[-85,95,-84,-91,-62,-72,-76,-82,-87,-88,-89,-90,-83,159,-81,-46,-86,-61,-71,-75,-80,]),'TO':([60,91,100,103,105,107,110,111,112,113,127,143,157,159,161,164,165,166,],[-85,-84,-91,-72,-76,-82,-87,-88,-89,-90,-83,-81,-46,-86,175,-71,-75,-80,]),'DO':([60,91,100,103,105,107,110,111,112,113,127,143,157,159,160,164,165,166,177,],[-85,-84,-91,-72,-76,-82,-87,-88,-89,-90,-83,-81,-46,-86,174,-71,-75,-80,179,]),'CTEFLOAT':([80,81,82,86,87,90,92,93,104,106,108,109,130,133,134,135,136,137,138,139,140,141,142,144,145,146,147,154,155,158,175,],[111,111,111,111,111,111,111,111,111,111,-73,-74,111,111,-63,-64,-65,-66,-67,-68,-69,-70,111,111,-77,-78,-79,111,111,111,111,]),'CTECHAR':([80,81,82,86,87,90,92,93,104,106,108,109,130,133,134,135,136,137,138,139,140,141,142,144,145,146,147,154,155,158,175,],[112,112,112,112,112,112,112,112,112,112,-73,-74,112,112,-63,-64,-65,-66,-67,-68,-69,-70,112,112,-77,-78,-79,112,112,112,112,]),'CTESTRING':([86,154,155,],[122,122,122,]),'THEN':([156,],[172,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vars':([4,41,43,],[5,70,75,]),'funciones':([4,9,10,37,],[7,21,22,66,]),'funcvoid':([4,9,10,37,],[9,9,9,9,]),'funcreturn':([4,9,10,37,],[10,10,10,10,]),'data_type':([4,8,9,10,37,42,131,],[12,20,12,12,64,74,74,]),'vars_list':([8,37,],[19,65,]),'decl_ids_list':([20,38,64,],[28,67,28,]),'id_declar':([20,38,64,74,],[29,29,29,98,]),'block':([26,33,36,41,43,58,59,70,75,172,178,],[34,44,63,71,76,88,89,96,99,176,180,]),'dimen_declara':([30,39,],[39,68,]),'parameters':([31,32,],[41,43,]),'statutes_list':([35,47,],[45,78,]),'statute':([35,47,],[47,47,]),'asignation':([35,47,],[48,48,]),'reading':([35,47,],[49,49,]),'writing':([35,47,],[50,50,]),'decision':([35,47,],[51,51,]),'loop':([35,47,],[52,52,]),'function_call':([35,47,80,81,82,86,87,90,92,93,104,106,130,133,142,144,154,155,158,175,],[53,53,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'id_dimensions':([35,47,80,81,82,85,86,87,90,92,93,104,106,130,133,142,144,152,154,155,158,175,],[54,54,100,100,100,119,100,100,100,100,100,100,100,100,100,100,100,119,100,100,100,100,]),'conditional':([35,47,],[58,58,]),'non_conditional':([35,47,],[59,59,]),'parameters_list':([42,131,],[72,162,]),'exp_dimension':([60,91,120,],[91,127,91,]),'expresion':([80,81,82,86,87,90,92,93,106,154,155,158,],[101,114,115,123,124,126,128,129,148,123,123,126,]),'exp':([80,81,82,86,87,90,92,93,106,130,133,142,154,155,158,175,],[102,102,102,102,102,102,102,102,102,161,163,164,102,102,102,177,]),'term':([80,81,82,86,87,90,92,93,106,130,133,142,144,154,155,158,175,],[103,103,103,103,103,103,103,103,103,103,103,103,165,103,103,103,103,]),'exp_operator':([80,81,82,86,87,90,92,93,103,106,130,133,142,144,154,155,158,175,],[104,104,104,104,104,104,104,104,142,104,104,104,104,104,104,104,104,104,]),'factor':([80,81,82,86,87,90,92,93,106,130,133,142,144,154,155,158,175,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'opt_value':([80,81,82,86,87,90,92,93,104,106,130,133,142,144,154,155,158,175,],[107,107,107,107,107,107,107,107,143,107,107,107,107,107,107,107,107,107,]),'ids_list':([85,152,],[118,168,]),'writing_list':([86,154,155,],[121,170,171,]),'expresion_list':([90,158,],[125,173,]),'comparators':([102,],[133,]),'term_operator':([105,],[144,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block','program',8,'p_program','tokensAndGrammars.py',144),
  ('program -> PROGRAM ID SEMICOLON funciones MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block','program',8,'p_program','tokensAndGrammars.py',145),
  ('program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block','program',7,'p_program','tokensAndGrammars.py',146),
  ('vars -> VAR vars_list','vars',2,'p_vars','tokensAndGrammars.py',153),
  ('vars_list -> data_type decl_ids_list SEMICOLON vars_list','vars_list',4,'p_vars_list','tokensAndGrammars.py',160),
  ('vars_list -> data_type decl_ids_list SEMICOLON funciones','vars_list',4,'p_vars_list','tokensAndGrammars.py',161),
  ('vars_list -> data_type decl_ids_list SEMICOLON','vars_list',3,'p_vars_list','tokensAndGrammars.py',162),
  ('data_type -> INT','data_type',1,'p_data_type','tokensAndGrammars.py',169),
  ('data_type -> FLOAT','data_type',1,'p_data_type','tokensAndGrammars.py',170),
  ('data_type -> CHAR','data_type',1,'p_data_type','tokensAndGrammars.py',171),
  ('decl_ids_list -> id_declar COMMA decl_ids_list','decl_ids_list',3,'p_decl_ids_list','tokensAndGrammars.py',177),
  ('decl_ids_list -> id_declar','decl_ids_list',1,'p_decl_ids_list','tokensAndGrammars.py',178),
  ('id_declar -> ID dimen_declara dimen_declara','id_declar',3,'p_id_declar','tokensAndGrammars.py',185),
  ('id_declar -> ID dimen_declara','id_declar',2,'p_id_declar','tokensAndGrammars.py',186),
  ('id_declar -> ID','id_declar',1,'p_id_declar','tokensAndGrammars.py',187),
  ('dimen_declara -> LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET','dimen_declara',3,'p_dimen_declara','tokensAndGrammars.py',194),
  ('funcvoid -> VOID MODULE ID parameters vars block','funcvoid',6,'p_funcvoid','tokensAndGrammars.py',201),
  ('funcvoid -> VOID MODULE ID parameters block','funcvoid',5,'p_funcvoid','tokensAndGrammars.py',202),
  ('funcreturn -> data_type MODULE ID parameters vars block','funcreturn',6,'p_funcreturn','tokensAndGrammars.py',209),
  ('funcreturn -> data_type MODULE ID parameters block','funcreturn',5,'p_funcreturn','tokensAndGrammars.py',210),
  ('funciones -> funcvoid funciones','funciones',2,'p_funciones','tokensAndGrammars.py',217),
  ('funciones -> funcreturn funciones','funciones',2,'p_funciones','tokensAndGrammars.py',218),
  ('funciones -> funcvoid','funciones',1,'p_funciones','tokensAndGrammars.py',219),
  ('funciones -> funcreturn','funciones',1,'p_funciones','tokensAndGrammars.py',220),
  ('parameters -> LEFTPARENTHESIS parameters_list RIGHTPARENTHESIS','parameters',3,'p_parameters','tokensAndGrammars.py',227),
  ('parameters -> LEFTPARENTHESIS RIGHTPARENTHESIS','parameters',2,'p_parameters','tokensAndGrammars.py',228),
  ('parameters_list -> data_type id_declar COMMA parameters_list','parameters_list',4,'p_parameters_list','tokensAndGrammars.py',235),
  ('parameters_list -> data_type id_declar','parameters_list',2,'p_parameters_list','tokensAndGrammars.py',236),
  ('block -> LEFTBRACKET statutes_list RIGHTBRACKET','block',3,'p_block','tokensAndGrammars.py',243),
  ('block -> LEFTBRACKET RIGHTBRACKET','block',2,'p_block','tokensAndGrammars.py',244),
  ('statute -> asignation','statute',1,'p_statute','tokensAndGrammars.py',251),
  ('statute -> reading','statute',1,'p_statute','tokensAndGrammars.py',252),
  ('statute -> writing','statute',1,'p_statute','tokensAndGrammars.py',253),
  ('statute -> decision','statute',1,'p_statute','tokensAndGrammars.py',254),
  ('statute -> loop','statute',1,'p_statute','tokensAndGrammars.py',255),
  ('statute -> function_call SEMICOLON','statute',2,'p_statute','tokensAndGrammars.py',256),
  ('statutes_list -> statute statutes_list','statutes_list',2,'p_statutes_list','tokensAndGrammars.py',263),
  ('statutes_list -> statute','statutes_list',1,'p_statutes_list','tokensAndGrammars.py',264),
  ('asignation -> id_dimensions EQUALS expresion SEMICOLON','asignation',4,'p_asignation','tokensAndGrammars.py',271),
  ('asignation -> id_dimensions PLUSEQUALS expresion SEMICOLON','asignation',4,'p_asignation','tokensAndGrammars.py',272),
  ('asignation -> id_dimensions SUBSTRACTEQUALS expresion SEMICOLON','asignation',4,'p_asignation','tokensAndGrammars.py',273),
  ('asignation -> id_dimensions INCREMENT SEMICOLON','asignation',3,'p_asignation','tokensAndGrammars.py',274),
  ('asignation -> id_dimensions DECREMENT SEMICOLON','asignation',3,'p_asignation','tokensAndGrammars.py',275),
  ('expresion_list -> expresion COMMA expresion_list','expresion_list',3,'p_expresion_list','tokensAndGrammars.py',282),
  ('expresion_list -> expresion','expresion_list',1,'p_expresion_list','tokensAndGrammars.py',283),
  ('function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS','function_call',4,'p_function_call','tokensAndGrammars.py',290),
  ('ids_list -> id_dimensions COMMA ids_list','ids_list',3,'p_ids_list','tokensAndGrammars.py',297),
  ('ids_list -> id_dimensions','ids_list',1,'p_ids_list','tokensAndGrammars.py',298),
  ('reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON','reading',5,'p_reading','tokensAndGrammars.py',305),
  ('writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON','writing',5,'p_writing','tokensAndGrammars.py',312),
  ('writing_list -> CTESTRING COMMA writing_list','writing_list',3,'p_writing_list','tokensAndGrammars.py',319),
  ('writing_list -> expresion COMMA writing_list','writing_list',3,'p_writing_list','tokensAndGrammars.py',320),
  ('writing_list -> CTESTRING','writing_list',1,'p_writing_list','tokensAndGrammars.py',321),
  ('writing_list -> expresion','writing_list',1,'p_writing_list','tokensAndGrammars.py',322),
  ('decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block','decision',8,'p_decision','tokensAndGrammars.py',329),
  ('decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block','decision',6,'p_decision','tokensAndGrammars.py',330),
  ('loop -> conditional block','loop',2,'p_loop','tokensAndGrammars.py',337),
  ('loop -> non_conditional block','loop',2,'p_loop','tokensAndGrammars.py',338),
  ('conditional -> WHILE LEFTPARENTHESIS expresion RIGHTPARENTHESIS DO','conditional',5,'p_conditional','tokensAndGrammars.py',345),
  ('non_conditional -> FOR ID EQUALS exp TO exp DO','non_conditional',7,'p_non_conditional','tokensAndGrammars.py',352),
  ('expresion -> exp comparators exp','expresion',3,'p_expresion','tokensAndGrammars.py',359),
  ('expresion -> exp','expresion',1,'p_expresion','tokensAndGrammars.py',360),
  ('comparators -> COMPARISON','comparators',1,'p_comparators','tokensAndGrammars.py',367),
  ('comparators -> GREATERHANOREQUAL','comparators',1,'p_comparators','tokensAndGrammars.py',368),
  ('comparators -> LESSTHANOREQUAL','comparators',1,'p_comparators','tokensAndGrammars.py',369),
  ('comparators -> GREATERTHAN','comparators',1,'p_comparators','tokensAndGrammars.py',370),
  ('comparators -> LESSTHAN','comparators',1,'p_comparators','tokensAndGrammars.py',371),
  ('comparators -> DIFFERENT','comparators',1,'p_comparators','tokensAndGrammars.py',372),
  ('comparators -> OR','comparators',1,'p_comparators','tokensAndGrammars.py',373),
  ('comparators -> AND','comparators',1,'p_comparators','tokensAndGrammars.py',374),
  ('exp -> term exp_operator exp','exp',3,'p_exp','tokensAndGrammars.py',381),
  ('exp -> term','exp',1,'p_exp','tokensAndGrammars.py',382),
  ('exp_operator -> PLUS','exp_operator',1,'p_exp_operator','tokensAndGrammars.py',389),
  ('exp_operator -> MINUS','exp_operator',1,'p_exp_operator','tokensAndGrammars.py',390),
  ('term -> factor term_operator term','term',3,'p_term','tokensAndGrammars.py',397),
  ('term -> factor','term',1,'p_term','tokensAndGrammars.py',398),
  ('term_operator -> MULTIPLY','term_operator',1,'p_term_operator','tokensAndGrammars.py',405),
  ('term_operator -> DIVIDE','term_operator',1,'p_term_operator','tokensAndGrammars.py',406),
  ('term_operator -> MOD','term_operator',1,'p_term_operator','tokensAndGrammars.py',407),
  ('factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS','factor',3,'p_factor','tokensAndGrammars.py',414),
  ('factor -> exp_operator opt_value','factor',2,'p_factor','tokensAndGrammars.py',415),
  ('factor -> opt_value','factor',1,'p_factor','tokensAndGrammars.py',416),
  ('id_dimensions -> ID exp_dimension exp_dimension','id_dimensions',3,'p_id_dimensions','tokensAndGrammars.py',423),
  ('id_dimensions -> ID exp_dimension','id_dimensions',2,'p_id_dimensions','tokensAndGrammars.py',424),
  ('id_dimensions -> ID','id_dimensions',1,'p_id_dimensions','tokensAndGrammars.py',425),
  ('exp_dimension -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET','exp_dimension',3,'p_exp_dimension','tokensAndGrammars.py',432),
  ('opt_value -> CTEINT','opt_value',1,'p_opt_value','tokensAndGrammars.py',439),
  ('opt_value -> CTEFLOAT','opt_value',1,'p_opt_value','tokensAndGrammars.py',440),
  ('opt_value -> CTECHAR','opt_value',1,'p_opt_value','tokensAndGrammars.py',441),
  ('opt_value -> function_call','opt_value',1,'p_opt_value','tokensAndGrammars.py',442),
  ('opt_value -> id_dimensions','opt_value',1,'p_opt_value','tokensAndGrammars.py',443),
]
