
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR COLON COMMA COMPARISON CTECHAR CTEFLOAT CTEINT CTESTRING DECREMENT DIFFERENT DIVIDE DO ELSE EQUALS FLOAT FOR GREATERHANOREQUAL GREATERTHAN ID IF INCREMENT INT LEFTBRACKET LEFTPARENTHESIS LEFTSQRBRACKET LESSTHAN LESSTHANOREQUAL MAIN MINUS MOD MODULE MULTIPLY OR PLUS PLUSEQUALS PROGRAM READ RETURN RIGHTBRACKET RIGHTPARENTHESIS RIGHTSQRBRACKET SEMICOLON SUBSTRACTEQUALS THEN TO VAR WHILE WRITE\n    program : vars\n    \n    vars : VAR vartipo\n    \n    vartipo : tipo COLON ids SEMICOLON vartipo\n            | tipo COLON ids SEMICOLON \n    \n    ids : declaraid COMMA ids\n        | declaraid\n    \n    declaraid : ID dimen_declara dimen_declara\n              | ID dimen_declara\n              | ID\n    \n    dimen_declara : LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET\n    \n    tipo : INT\n         | FLOAT\n         | CHAR\n    \n    funcvoid : MODULE ID parametros SEMICOLON vars bloque\n             | MODULE ID parametros SEMICOLON bloque\n    \n    funcreturn : tipo MODULE ID parametros SEMICOLON vars bloque\n               | tipo MODULE ID parametros SEMICOLON bloque\n    \n    funciones : funcvoid funciones\n              | funcreturn funciones\n              | funcvoid\n              | funcreturn\n    \n    parametros : LEFTPARENTHESIS paramlist RIGHTPARENTHESIS\n    \n    paramlist : tipo declaraid COMMA paramlist\n              | tipo declaraid\n    \n    bloque : LEFTBRACKET estatuto RIGHTBRACKET\n           | LEFTBRACKET RIGHTBRACKET\n    \n    mas_estatutos : estatuto mas_estatutos\n                  | estatuto\n    \n    estatuto : asignacion\n    \n    asignacion : ID dimensiones EQUALS expresion SEMICOLON\n               | ID EQUALS expresion SEMICOLON\n    \n    expresion : exp comparadores exp\n              | exp\n    \n    comparadores : COMPARISON\n                 | GREATERHANOREQUAL\n                 | LESSTHANOREQUAL\n                 | GREATERTHAN\n                 | LESSTHAN\n                 | DIFFERENT\n    \n    exp : termino opera_exp exp\n        | termino\n    \n    opera_exp : PLUS\n              | MINUS\n    \n    termino : factor opera_term termino\n            | factor\n    \n    opera_term : MULTIPLY\n               | DIVIDE\n    \n    factor : LEFTPARENTHESIS expresion RIGHTPARENTHESIS\n           | opera_exp valor_opt\n           | valor_opt\n    \n    dimensiones : dimen_expre dimen_expre\n                | dimen_expre\n    \n    dimen_expre : LEFTSQRBRACKET expresion RIGHTSQRBRACKET\n    \n    valor_opt : ID dimensiones\n              | ID\n              | CTEINT\n              | CTEFLOAT\n    '
    
_lr_action_items = {'VAR':([0,],[3,]),'$end':([1,2,4,13,17,],[0,-1,-2,-4,-3,]),'INT':([3,13,],[6,6,]),'FLOAT':([3,13,],[7,7,]),'CHAR':([3,13,],[8,8,]),'COLON':([5,6,7,8,],[9,-11,-12,-13,]),'ID':([9,14,],[12,12,]),'SEMICOLON':([10,11,12,15,18,19,21,],[13,-6,-9,-8,-5,-7,-10,]),'COMMA':([11,12,15,19,21,],[14,-9,-8,-7,-10,]),'LEFTSQRBRACKET':([12,15,21,],[16,16,-10,]),'CTEINT':([16,],[20,]),'RIGHTSQRBRACKET':([20,],[21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vars':([0,],[2,]),'vartipo':([3,13,],[4,17,]),'tipo':([3,13,],[5,5,]),'ids':([9,14,],[10,18,]),'declaraid':([9,14,],[11,11,]),'dimen_declara':([12,15,],[15,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> vars','program',1,'p_program','tokensAndGrammars.py',151),
  ('vars -> VAR vartipo','vars',2,'p_vars','tokensAndGrammars.py',158),
  ('vartipo -> tipo COLON ids SEMICOLON vartipo','vartipo',5,'p_vartipo','tokensAndGrammars.py',165),
  ('vartipo -> tipo COLON ids SEMICOLON','vartipo',4,'p_vartipo','tokensAndGrammars.py',166),
  ('ids -> declaraid COMMA ids','ids',3,'p_ids','tokensAndGrammars.py',173),
  ('ids -> declaraid','ids',1,'p_ids','tokensAndGrammars.py',174),
  ('declaraid -> ID dimen_declara dimen_declara','declaraid',3,'p_declaraid','tokensAndGrammars.py',181),
  ('declaraid -> ID dimen_declara','declaraid',2,'p_declaraid','tokensAndGrammars.py',182),
  ('declaraid -> ID','declaraid',1,'p_declaraid','tokensAndGrammars.py',183),
  ('dimen_declara -> LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET','dimen_declara',3,'p_dimen_declara','tokensAndGrammars.py',190),
  ('tipo -> INT','tipo',1,'p_tipo','tokensAndGrammars.py',197),
  ('tipo -> FLOAT','tipo',1,'p_tipo','tokensAndGrammars.py',198),
  ('tipo -> CHAR','tipo',1,'p_tipo','tokensAndGrammars.py',199),
  ('funcvoid -> MODULE ID parametros SEMICOLON vars bloque','funcvoid',6,'p_funcvoid','tokensAndGrammars.py',206),
  ('funcvoid -> MODULE ID parametros SEMICOLON bloque','funcvoid',5,'p_funcvoid','tokensAndGrammars.py',207),
  ('funcreturn -> tipo MODULE ID parametros SEMICOLON vars bloque','funcreturn',7,'p_funcreturn','tokensAndGrammars.py',214),
  ('funcreturn -> tipo MODULE ID parametros SEMICOLON bloque','funcreturn',6,'p_funcreturn','tokensAndGrammars.py',215),
  ('funciones -> funcvoid funciones','funciones',2,'p_funciones','tokensAndGrammars.py',222),
  ('funciones -> funcreturn funciones','funciones',2,'p_funciones','tokensAndGrammars.py',223),
  ('funciones -> funcvoid','funciones',1,'p_funciones','tokensAndGrammars.py',224),
  ('funciones -> funcreturn','funciones',1,'p_funciones','tokensAndGrammars.py',225),
  ('parametros -> LEFTPARENTHESIS paramlist RIGHTPARENTHESIS','parametros',3,'p_parametros','tokensAndGrammars.py',232),
  ('paramlist -> tipo declaraid COMMA paramlist','paramlist',4,'p_paramlist','tokensAndGrammars.py',239),
  ('paramlist -> tipo declaraid','paramlist',2,'p_paramlist','tokensAndGrammars.py',240),
  ('bloque -> LEFTBRACKET estatuto RIGHTBRACKET','bloque',3,'p_bloque','tokensAndGrammars.py',247),
  ('bloque -> LEFTBRACKET RIGHTBRACKET','bloque',2,'p_bloque','tokensAndGrammars.py',248),
  ('mas_estatutos -> estatuto mas_estatutos','mas_estatutos',2,'p_mas_estatutos','tokensAndGrammars.py',255),
  ('mas_estatutos -> estatuto','mas_estatutos',1,'p_mas_estatutos','tokensAndGrammars.py',256),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','tokensAndGrammars.py',263),
  ('asignacion -> ID dimensiones EQUALS expresion SEMICOLON','asignacion',5,'p_asignacion','tokensAndGrammars.py',275),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','tokensAndGrammars.py',276),
  ('expresion -> exp comparadores exp','expresion',3,'p_expresion','tokensAndGrammars.py',344),
  ('expresion -> exp','expresion',1,'p_expresion','tokensAndGrammars.py',345),
  ('comparadores -> COMPARISON','comparadores',1,'p_comparadores','tokensAndGrammars.py',352),
  ('comparadores -> GREATERHANOREQUAL','comparadores',1,'p_comparadores','tokensAndGrammars.py',353),
  ('comparadores -> LESSTHANOREQUAL','comparadores',1,'p_comparadores','tokensAndGrammars.py',354),
  ('comparadores -> GREATERTHAN','comparadores',1,'p_comparadores','tokensAndGrammars.py',355),
  ('comparadores -> LESSTHAN','comparadores',1,'p_comparadores','tokensAndGrammars.py',356),
  ('comparadores -> DIFFERENT','comparadores',1,'p_comparadores','tokensAndGrammars.py',357),
  ('exp -> termino opera_exp exp','exp',3,'p_exp','tokensAndGrammars.py',364),
  ('exp -> termino','exp',1,'p_exp','tokensAndGrammars.py',365),
  ('opera_exp -> PLUS','opera_exp',1,'p_opera_exp','tokensAndGrammars.py',372),
  ('opera_exp -> MINUS','opera_exp',1,'p_opera_exp','tokensAndGrammars.py',373),
  ('termino -> factor opera_term termino','termino',3,'p_termino','tokensAndGrammars.py',380),
  ('termino -> factor','termino',1,'p_termino','tokensAndGrammars.py',381),
  ('opera_term -> MULTIPLY','opera_term',1,'p_opera_term','tokensAndGrammars.py',388),
  ('opera_term -> DIVIDE','opera_term',1,'p_opera_term','tokensAndGrammars.py',389),
  ('factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS','factor',3,'p_factor','tokensAndGrammars.py',396),
  ('factor -> opera_exp valor_opt','factor',2,'p_factor','tokensAndGrammars.py',397),
  ('factor -> valor_opt','factor',1,'p_factor','tokensAndGrammars.py',398),
  ('dimensiones -> dimen_expre dimen_expre','dimensiones',2,'p_dimensiones','tokensAndGrammars.py',405),
  ('dimensiones -> dimen_expre','dimensiones',1,'p_dimensiones','tokensAndGrammars.py',406),
  ('dimen_expre -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET','dimen_expre',3,'p_dimen_expre','tokensAndGrammars.py',413),
  ('valor_opt -> ID dimensiones','valor_opt',2,'p_valor_opt','tokensAndGrammars.py',420),
  ('valor_opt -> ID','valor_opt',1,'p_valor_opt','tokensAndGrammars.py',421),
  ('valor_opt -> CTEINT','valor_opt',1,'p_valor_opt','tokensAndGrammars.py',422),
  ('valor_opt -> CTEFLOAT','valor_opt',1,'p_valor_opt','tokensAndGrammars.py',423),
]
