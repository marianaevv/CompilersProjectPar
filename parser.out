Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
Rule 2     program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
Rule 3     program -> PROGRAM ID SEMICOLON functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
Rule 4     program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
Rule 5     data_type -> INT
Rule 6     data_type -> FLOAT
Rule 7     data_type -> CHAR
Rule 8     vars -> VAR vars_lists neupoint_add_vars
Rule 9     vars_lists -> data_type decla_ids_list SEMICOLON vars_lists
Rule 10    vars_lists -> data_type decla_ids_list SEMICOLON
Rule 11    decla_ids_list -> decla_identifier COMMA decla_ids_list
Rule 12    decla_ids_list -> decla_identifier
Rule 13    decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
Rule 14    decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
Rule 15    decla_identifier -> ID
Rule 16    ids_list -> identifier COMMA ids_list
Rule 17    ids_list -> identifier
Rule 18    identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
Rule 19    identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
Rule 20    identifier -> ID
Rule 21    neupoint_add_vars -> <empty>
Rule 22    return_type -> data_type
Rule 23    return_type -> VOID
Rule 24    functions_list -> function functions_list
Rule 25    functions_list -> function
Rule 26    function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
Rule 27    function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function
Rule 28    parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS neupoint_add_parameters
Rule 29    parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS
Rule 30    parameter -> data_type decla_identifier COMMA parameter
Rule 31    parameter -> data_type decla_identifier
Rule 32    neupoint_add_function -> <empty>
Rule 33    neupoint_add_parameters -> <empty>
Rule 34    neupoint_back_global -> <empty>
Rule 35    neupoint_start_function -> <empty>
Rule 36    neupoint_check_for_return -> <empty>
Rule 37    neupoint_end_function -> <empty>
Rule 38    comparators -> COMPARISON
Rule 39    comparators -> GREATERHANOREQUAL
Rule 40    comparators -> LESSTHANOREQUAL
Rule 41    comparators -> GREATERTHAN
Rule 42    comparators -> LESSTHAN
Rule 43    comparators -> DIFFERENT
Rule 44    exp_operator -> PLUS
Rule 45    exp_operator -> MINUS
Rule 46    term_operator -> MULTIPLY
Rule 47    term_operator -> DIVIDE
Rule 48    term_operator -> MOD
Rule 49    block -> LEFTBRACKET statutes_list RIGHTBRACKET
Rule 50    block -> LEFTBRACKET RIGHTBRACKET
Rule 51    statutes_list -> statute statutes_list
Rule 52    statutes_list -> statute
Rule 53    statute -> assignment
Rule 54    statute -> function_return
Rule 55    statute -> reading
Rule 56    statute -> writing
Rule 57    statute -> decision
Rule 58    statute -> loop
Rule 59    statute -> function_call_void
Rule 60    assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
Rule 61    assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
Rule 62    assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
Rule 63    assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
Rule 64    assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
Rule 65    reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON
Rule 66    writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON
Rule 67    writing_list -> CTESTRING COMMA writing_list
Rule 68    writing_list -> expresion COMMA writing_list
Rule 69    writing_list -> CTESTRING
Rule 70    writing_list -> expresion
Rule 71    decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
Rule 72    decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad
Rule 73    loop -> conditional
Rule 74    loop -> non_conditional
Rule 75    conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end
Rule 76    non_conditional -> FOR ID EQUALS exp TO exp DO block
Rule 77    function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON
Rule 78    function_call_void -> function_call SEMICOLON
Rule 79    function_call -> ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
Rule 80    expresion_list -> expresion COMMA expresion_list
Rule 81    expresion_list -> expresion
Rule 82    expresion -> exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
Rule 83    expresion -> exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
Rule 84    expresion -> exp_relational
Rule 85    exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
Rule 86    exp_relational -> exp
Rule 87    exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
Rule 88    exp -> term neupoint_arithmetic_exp_quad
Rule 89    term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
Rule 90    term -> factor neupoint_arithmetic_term_quad
Rule 91    factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
Rule 92    factor -> CTEINT neupoint_add_cte_operand
Rule 93    factor -> CTEFLOAT neupoint_add_cte_operand
Rule 94    factor -> CTECHAR neupoint_add_cte_operand
Rule 95    factor -> function_call
Rule 96    factor -> identifier neupoint_add_operand
Rule 97    neupoint_add_operator -> <empty>
Rule 98    neupoint_add_operand -> <empty>
Rule 99    neupoint_add_cte_operand -> <empty>
Rule 100   neupoint_arithmetic_exp_quad -> <empty>
Rule 101   neupoint_arithmetic_term_quad -> <empty>
Rule 102   neupoint_add_wall -> <empty>
Rule 103   neupoint_remove_wall -> <empty>
Rule 104   neupoint_assignment_quad -> <empty>
Rule 105   neupoint_assignment_single_quad -> <empty>
Rule 106   neupoint_logical_relational_opt -> <empty>
Rule 107   neupoint_conditional_quad -> <empty>
Rule 108   neupoint_else_conditional_quad -> <empty>
Rule 109   neupoint_end_conditional_quad -> <empty>
Rule 110   neupoint_while_start -> <empty>
Rule 111   neupoint_while_end -> <empty>
Rule 112   neupoint_search_function -> <empty>

Terminals, with rules where they appear

AND                  : 82
CHAR                 : 7
COMMA                : 11 16 30 67 68 80
COMPARISON           : 38
CTECHAR              : 94
CTEFLOAT             : 93
CTEINT               : 13 13 14 92
CTESTRING            : 67 69
DECREMENT            : 64
DIFFERENT            : 43
DIVIDE               : 47
DO                   : 75 76
ELSE                 : 71
EQUALS               : 60 76
FLOAT                : 6
FOR                  : 76
GREATERHANOREQUAL    : 39
GREATERTHAN          : 41
ID                   : 1 2 3 4 13 14 15 18 19 20 26 27 76 79
IF                   : 71 72
INCREMENT            : 63
INT                  : 5
LEFTBRACKET          : 49 50
LEFTPARENTHESIS      : 1 2 3 4 28 29 65 66 71 72 75 77 79 91
LEFTSQRBRACKET       : 13 13 14 18 18 19
LESSTHAN             : 42
LESSTHANOREQUAL      : 40
MAIN                 : 1 2 3 4
MINUS                : 45
MOD                  : 48
MODULE               : 26 27
MULTIPLY             : 46
OR                   : 83
PLUS                 : 44
PLUSEQUALS           : 61
PROGRAM              : 1 2 3 4
READ                 : 65
RETURN               : 77
RIGHTBRACKET         : 49 50
RIGHTPARENTHESIS     : 1 2 3 4 28 29 65 66 71 72 75 77 79 91
RIGHTSQRBRACKET      : 13 13 14 18 18 19
SEMICOLON            : 1 2 3 4 9 10 60 61 62 63 64 65 66 77 78
SUBSTRACTEQUALS      : 62
THEN                 : 71 72
TO                   : 76
VAR                  : 8
VOID                 : 23
WHILE                : 75
WRITE                : 66
error                : 

Nonterminals, with rules where they appear

assignment           : 53
block                : 1 2 3 4 26 27 71 71 72 75 76
comparators          : 85
conditional          : 73
data_type            : 9 10 22 30 31
decision             : 57
decla_identifier     : 11 12 30 31
decla_ids_list       : 9 10 11
exp                  : 76 76 77 85 85 86 87
exp_operator         : 87
exp_relational       : 82 83 84
expresion            : 18 18 19 60 61 62 68 70 71 72 75 80 81 82 83 91
expresion_list       : 79 80
factor               : 89 90
function             : 24 25
function_call        : 78 95
function_call_void   : 59
function_return      : 54
functions_list       : 1 3 24
identifier           : 16 17 60 61 62 63 64 96
ids_list             : 16 65
loop                 : 58
neupoint_add_cte_operand : 92 93 94
neupoint_add_function : 26 27
neupoint_add_operand : 60 61 62 63 64 96
neupoint_add_operator : 60 61 62 63 64 82 83 85 87 89
neupoint_add_parameters : 28
neupoint_add_vars    : 8
neupoint_add_wall    : 91
neupoint_arithmetic_exp_quad : 87 88
neupoint_arithmetic_term_quad : 89 90
neupoint_assignment_quad : 60 61 62
neupoint_assignment_single_quad : 63 64
neupoint_back_global : 1 3
neupoint_check_for_return : 26 27
neupoint_conditional_quad : 71 72 75
neupoint_else_conditional_quad : 71
neupoint_end_conditional_quad : 71 72
neupoint_end_function : 26 27
neupoint_logical_relational_opt : 82 83 85
neupoint_remove_wall : 91
neupoint_search_function : 79
neupoint_start_function : 26 27
neupoint_while_end   : 75
neupoint_while_start : 75
non_conditional      : 74
parameter            : 28 30
parameters_list      : 26 27
program              : 0
reading              : 55
return_type          : 26 27
statute              : 51 52
statutes_list        : 49 51
term                 : 87 88 89
term_operator        : 89
vars                 : 1 2 26
vars_lists           : 8 9
writing              : 56
writing_list         : 66 67 68

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (2) program -> . PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (3) program -> . PROGRAM ID SEMICOLON functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (4) program -> . PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (2) program -> PROGRAM . ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (3) program -> PROGRAM . ID SEMICOLON functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (4) program -> PROGRAM . ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (2) program -> PROGRAM ID . SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (3) program -> PROGRAM ID . SEMICOLON functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (4) program -> PROGRAM ID . SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (2) program -> PROGRAM ID SEMICOLON . vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (3) program -> PROGRAM ID SEMICOLON . functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (4) program -> PROGRAM ID SEMICOLON . MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (8) vars -> . VAR vars_lists neupoint_add_vars
    (24) functions_list -> . function functions_list
    (25) functions_list -> . function
    (26) function -> . MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (27) function -> . MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function

    MAIN            shift and go to state 7
    VAR             shift and go to state 8
    MODULE          shift and go to state 10

    vars                           shift and go to state 5
    functions_list                 shift and go to state 6
    function                       shift and go to state 9

state 5

    (1) program -> PROGRAM ID SEMICOLON vars . functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (2) program -> PROGRAM ID SEMICOLON vars . MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (24) functions_list -> . function functions_list
    (25) functions_list -> . function
    (26) function -> . MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (27) function -> . MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function

    MAIN            shift and go to state 12
    MODULE          shift and go to state 10

    functions_list                 shift and go to state 11
    function                       shift and go to state 9

state 6

    (3) program -> PROGRAM ID SEMICOLON functions_list . neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (34) neupoint_back_global -> .

    MAIN            reduce using rule 34 (neupoint_back_global -> .)

    neupoint_back_global           shift and go to state 13

state 7

    (4) program -> PROGRAM ID SEMICOLON MAIN . LEFTPARENTHESIS RIGHTPARENTHESIS block

    LEFTPARENTHESIS shift and go to state 14


state 8

    (8) vars -> VAR . vars_lists neupoint_add_vars
    (9) vars_lists -> . data_type decla_ids_list SEMICOLON vars_lists
    (10) vars_lists -> . data_type decla_ids_list SEMICOLON
    (5) data_type -> . INT
    (6) data_type -> . FLOAT
    (7) data_type -> . CHAR

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19

    vars_lists                     shift and go to state 15
    data_type                      shift and go to state 16

state 9

    (24) functions_list -> function . functions_list
    (25) functions_list -> function .
    (24) functions_list -> . function functions_list
    (25) functions_list -> . function
    (26) function -> . MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (27) function -> . MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function

    MAIN            reduce using rule 25 (functions_list -> function .)
    MODULE          shift and go to state 10

    function                       shift and go to state 9
    functions_list                 shift and go to state 20

state 10

    (26) function -> MODULE . return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (27) function -> MODULE . return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (22) return_type -> . data_type
    (23) return_type -> . VOID
    (5) data_type -> . INT
    (6) data_type -> . FLOAT
    (7) data_type -> . CHAR

    VOID            shift and go to state 23
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19

    return_type                    shift and go to state 21
    data_type                      shift and go to state 22

state 11

    (1) program -> PROGRAM ID SEMICOLON vars functions_list . neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (34) neupoint_back_global -> .

    MAIN            reduce using rule 34 (neupoint_back_global -> .)

    neupoint_back_global           shift and go to state 24

state 12

    (2) program -> PROGRAM ID SEMICOLON vars MAIN . LEFTPARENTHESIS RIGHTPARENTHESIS block

    LEFTPARENTHESIS shift and go to state 25


state 13

    (3) program -> PROGRAM ID SEMICOLON functions_list neupoint_back_global . MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block

    MAIN            shift and go to state 26


state 14

    (4) program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS . RIGHTPARENTHESIS block

    RIGHTPARENTHESIS shift and go to state 27


state 15

    (8) vars -> VAR vars_lists . neupoint_add_vars
    (21) neupoint_add_vars -> .

    MAIN            reduce using rule 21 (neupoint_add_vars -> .)
    MODULE          reduce using rule 21 (neupoint_add_vars -> .)
    LEFTBRACKET     reduce using rule 21 (neupoint_add_vars -> .)

    neupoint_add_vars              shift and go to state 28

state 16

    (9) vars_lists -> data_type . decla_ids_list SEMICOLON vars_lists
    (10) vars_lists -> data_type . decla_ids_list SEMICOLON
    (11) decla_ids_list -> . decla_identifier COMMA decla_ids_list
    (12) decla_ids_list -> . decla_identifier
    (13) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (15) decla_identifier -> . ID

    ID              shift and go to state 31

    decla_ids_list                 shift and go to state 29
    decla_identifier               shift and go to state 30

state 17

    (5) data_type -> INT .

    ID              reduce using rule 5 (data_type -> INT .)


state 18

    (6) data_type -> FLOAT .

    ID              reduce using rule 6 (data_type -> FLOAT .)


state 19

    (7) data_type -> CHAR .

    ID              reduce using rule 7 (data_type -> CHAR .)


state 20

    (24) functions_list -> function functions_list .

    MAIN            reduce using rule 24 (functions_list -> function functions_list .)


state 21

    (26) function -> MODULE return_type . ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (27) function -> MODULE return_type . ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function

    ID              shift and go to state 32


state 22

    (22) return_type -> data_type .

    ID              reduce using rule 22 (return_type -> data_type .)


state 23

    (23) return_type -> VOID .

    ID              reduce using rule 23 (return_type -> VOID .)


state 24

    (1) program -> PROGRAM ID SEMICOLON vars functions_list neupoint_back_global . MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block

    MAIN            shift and go to state 33


state 25

    (2) program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS . RIGHTPARENTHESIS block

    RIGHTPARENTHESIS shift and go to state 34


state 26

    (3) program -> PROGRAM ID SEMICOLON functions_list neupoint_back_global MAIN . LEFTPARENTHESIS RIGHTPARENTHESIS block

    LEFTPARENTHESIS shift and go to state 35


state 27

    (4) program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS . block
    (49) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (50) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 36

state 28

    (8) vars -> VAR vars_lists neupoint_add_vars .

    MAIN            reduce using rule 8 (vars -> VAR vars_lists neupoint_add_vars .)
    MODULE          reduce using rule 8 (vars -> VAR vars_lists neupoint_add_vars .)
    LEFTBRACKET     reduce using rule 8 (vars -> VAR vars_lists neupoint_add_vars .)


state 29

    (9) vars_lists -> data_type decla_ids_list . SEMICOLON vars_lists
    (10) vars_lists -> data_type decla_ids_list . SEMICOLON

    SEMICOLON       shift and go to state 38


state 30

    (11) decla_ids_list -> decla_identifier . COMMA decla_ids_list
    (12) decla_ids_list -> decla_identifier .

    COMMA           shift and go to state 39
    SEMICOLON       reduce using rule 12 (decla_ids_list -> decla_identifier .)


state 31

    (13) decla_identifier -> ID . LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> ID . LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (15) decla_identifier -> ID .

    LEFTSQRBRACKET  shift and go to state 40
    COMMA           reduce using rule 15 (decla_identifier -> ID .)
    SEMICOLON       reduce using rule 15 (decla_identifier -> ID .)
    RIGHTPARENTHESIS reduce using rule 15 (decla_identifier -> ID .)


state 32

    (26) function -> MODULE return_type ID . neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (27) function -> MODULE return_type ID . neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (32) neupoint_add_function -> .

    LEFTPARENTHESIS reduce using rule 32 (neupoint_add_function -> .)

    neupoint_add_function          shift and go to state 41

state 33

    (1) program -> PROGRAM ID SEMICOLON vars functions_list neupoint_back_global MAIN . LEFTPARENTHESIS RIGHTPARENTHESIS block

    LEFTPARENTHESIS shift and go to state 42


state 34

    (2) program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS . block
    (49) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (50) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 43

state 35

    (3) program -> PROGRAM ID SEMICOLON functions_list neupoint_back_global MAIN LEFTPARENTHESIS . RIGHTPARENTHESIS block

    RIGHTPARENTHESIS shift and go to state 44


state 36

    (4) program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .

    $end            reduce using rule 4 (program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .)


state 37

    (49) block -> LEFTBRACKET . statutes_list RIGHTBRACKET
    (50) block -> LEFTBRACKET . RIGHTBRACKET
    (51) statutes_list -> . statute statutes_list
    (52) statutes_list -> . statute
    (53) statute -> . assignment
    (54) statute -> . function_return
    (55) statute -> . reading
    (56) statute -> . writing
    (57) statute -> . decision
    (58) statute -> . loop
    (59) statute -> . function_call_void
    (60) assignment -> . identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (61) assignment -> . identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (62) assignment -> . identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (63) assignment -> . identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (64) assignment -> . identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (77) function_return -> . RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON
    (65) reading -> . READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON
    (66) writing -> . WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON
    (71) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (72) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad
    (73) loop -> . conditional
    (74) loop -> . non_conditional
    (78) function_call_void -> . function_call SEMICOLON
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID
    (75) conditional -> . WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end
    (76) non_conditional -> . FOR ID EQUALS exp TO exp DO block
    (79) function_call -> . ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS

    RIGHTBRACKET    shift and go to state 46
    RETURN          shift and go to state 56
    READ            shift and go to state 57
    WRITE           shift and go to state 58
    IF              shift and go to state 59
    ID              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65

    statutes_list                  shift and go to state 45
    statute                        shift and go to state 47
    assignment                     shift and go to state 48
    function_return                shift and go to state 49
    reading                        shift and go to state 50
    writing                        shift and go to state 51
    decision                       shift and go to state 52
    loop                           shift and go to state 53
    function_call_void             shift and go to state 54
    identifier                     shift and go to state 55
    conditional                    shift and go to state 60
    non_conditional                shift and go to state 61
    function_call                  shift and go to state 62

state 38

    (9) vars_lists -> data_type decla_ids_list SEMICOLON . vars_lists
    (10) vars_lists -> data_type decla_ids_list SEMICOLON .
    (9) vars_lists -> . data_type decla_ids_list SEMICOLON vars_lists
    (10) vars_lists -> . data_type decla_ids_list SEMICOLON
    (5) data_type -> . INT
    (6) data_type -> . FLOAT
    (7) data_type -> . CHAR

    MAIN            reduce using rule 10 (vars_lists -> data_type decla_ids_list SEMICOLON .)
    MODULE          reduce using rule 10 (vars_lists -> data_type decla_ids_list SEMICOLON .)
    LEFTBRACKET     reduce using rule 10 (vars_lists -> data_type decla_ids_list SEMICOLON .)
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19

    data_type                      shift and go to state 16
    vars_lists                     shift and go to state 66

state 39

    (11) decla_ids_list -> decla_identifier COMMA . decla_ids_list
    (11) decla_ids_list -> . decla_identifier COMMA decla_ids_list
    (12) decla_ids_list -> . decla_identifier
    (13) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (15) decla_identifier -> . ID

    ID              shift and go to state 31

    decla_identifier               shift and go to state 30
    decla_ids_list                 shift and go to state 67

state 40

    (13) decla_identifier -> ID LEFTSQRBRACKET . CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> ID LEFTSQRBRACKET . CTEINT RIGHTSQRBRACKET

    CTEINT          shift and go to state 68


state 41

    (26) function -> MODULE return_type ID neupoint_add_function . parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (27) function -> MODULE return_type ID neupoint_add_function . parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (28) parameters_list -> . LEFTPARENTHESIS parameter RIGHTPARENTHESIS neupoint_add_parameters
    (29) parameters_list -> . LEFTPARENTHESIS RIGHTPARENTHESIS

    LEFTPARENTHESIS shift and go to state 70

    parameters_list                shift and go to state 69

state 42

    (1) program -> PROGRAM ID SEMICOLON vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS . RIGHTPARENTHESIS block

    RIGHTPARENTHESIS shift and go to state 71


state 43

    (2) program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .

    $end            reduce using rule 2 (program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .)


state 44

    (3) program -> PROGRAM ID SEMICOLON functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS . block
    (49) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (50) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 72

state 45

    (49) block -> LEFTBRACKET statutes_list . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 73


state 46

    (50) block -> LEFTBRACKET RIGHTBRACKET .

    $end            reduce using rule 50 (block -> LEFTBRACKET RIGHTBRACKET .)
    MODULE          reduce using rule 50 (block -> LEFTBRACKET RIGHTBRACKET .)
    MAIN            reduce using rule 50 (block -> LEFTBRACKET RIGHTBRACKET .)
    ELSE            reduce using rule 50 (block -> LEFTBRACKET RIGHTBRACKET .)
    RETURN          reduce using rule 50 (block -> LEFTBRACKET RIGHTBRACKET .)
    READ            reduce using rule 50 (block -> LEFTBRACKET RIGHTBRACKET .)
    WRITE           reduce using rule 50 (block -> LEFTBRACKET RIGHTBRACKET .)
    IF              reduce using rule 50 (block -> LEFTBRACKET RIGHTBRACKET .)
    ID              reduce using rule 50 (block -> LEFTBRACKET RIGHTBRACKET .)
    WHILE           reduce using rule 50 (block -> LEFTBRACKET RIGHTBRACKET .)
    FOR             reduce using rule 50 (block -> LEFTBRACKET RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 50 (block -> LEFTBRACKET RIGHTBRACKET .)


state 47

    (51) statutes_list -> statute . statutes_list
    (52) statutes_list -> statute .
    (51) statutes_list -> . statute statutes_list
    (52) statutes_list -> . statute
    (53) statute -> . assignment
    (54) statute -> . function_return
    (55) statute -> . reading
    (56) statute -> . writing
    (57) statute -> . decision
    (58) statute -> . loop
    (59) statute -> . function_call_void
    (60) assignment -> . identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (61) assignment -> . identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (62) assignment -> . identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (63) assignment -> . identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (64) assignment -> . identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (77) function_return -> . RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON
    (65) reading -> . READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON
    (66) writing -> . WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON
    (71) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (72) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad
    (73) loop -> . conditional
    (74) loop -> . non_conditional
    (78) function_call_void -> . function_call SEMICOLON
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID
    (75) conditional -> . WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end
    (76) non_conditional -> . FOR ID EQUALS exp TO exp DO block
    (79) function_call -> . ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS

    RIGHTBRACKET    reduce using rule 52 (statutes_list -> statute .)
    RETURN          shift and go to state 56
    READ            shift and go to state 57
    WRITE           shift and go to state 58
    IF              shift and go to state 59
    ID              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65

    statute                        shift and go to state 47
    statutes_list                  shift and go to state 74
    assignment                     shift and go to state 48
    function_return                shift and go to state 49
    reading                        shift and go to state 50
    writing                        shift and go to state 51
    decision                       shift and go to state 52
    loop                           shift and go to state 53
    function_call_void             shift and go to state 54
    identifier                     shift and go to state 55
    conditional                    shift and go to state 60
    non_conditional                shift and go to state 61
    function_call                  shift and go to state 62

state 48

    (53) statute -> assignment .

    RETURN          reduce using rule 53 (statute -> assignment .)
    READ            reduce using rule 53 (statute -> assignment .)
    WRITE           reduce using rule 53 (statute -> assignment .)
    IF              reduce using rule 53 (statute -> assignment .)
    ID              reduce using rule 53 (statute -> assignment .)
    WHILE           reduce using rule 53 (statute -> assignment .)
    FOR             reduce using rule 53 (statute -> assignment .)
    RIGHTBRACKET    reduce using rule 53 (statute -> assignment .)


state 49

    (54) statute -> function_return .

    RETURN          reduce using rule 54 (statute -> function_return .)
    READ            reduce using rule 54 (statute -> function_return .)
    WRITE           reduce using rule 54 (statute -> function_return .)
    IF              reduce using rule 54 (statute -> function_return .)
    ID              reduce using rule 54 (statute -> function_return .)
    WHILE           reduce using rule 54 (statute -> function_return .)
    FOR             reduce using rule 54 (statute -> function_return .)
    RIGHTBRACKET    reduce using rule 54 (statute -> function_return .)


state 50

    (55) statute -> reading .

    RETURN          reduce using rule 55 (statute -> reading .)
    READ            reduce using rule 55 (statute -> reading .)
    WRITE           reduce using rule 55 (statute -> reading .)
    IF              reduce using rule 55 (statute -> reading .)
    ID              reduce using rule 55 (statute -> reading .)
    WHILE           reduce using rule 55 (statute -> reading .)
    FOR             reduce using rule 55 (statute -> reading .)
    RIGHTBRACKET    reduce using rule 55 (statute -> reading .)


state 51

    (56) statute -> writing .

    RETURN          reduce using rule 56 (statute -> writing .)
    READ            reduce using rule 56 (statute -> writing .)
    WRITE           reduce using rule 56 (statute -> writing .)
    IF              reduce using rule 56 (statute -> writing .)
    ID              reduce using rule 56 (statute -> writing .)
    WHILE           reduce using rule 56 (statute -> writing .)
    FOR             reduce using rule 56 (statute -> writing .)
    RIGHTBRACKET    reduce using rule 56 (statute -> writing .)


state 52

    (57) statute -> decision .

    RETURN          reduce using rule 57 (statute -> decision .)
    READ            reduce using rule 57 (statute -> decision .)
    WRITE           reduce using rule 57 (statute -> decision .)
    IF              reduce using rule 57 (statute -> decision .)
    ID              reduce using rule 57 (statute -> decision .)
    WHILE           reduce using rule 57 (statute -> decision .)
    FOR             reduce using rule 57 (statute -> decision .)
    RIGHTBRACKET    reduce using rule 57 (statute -> decision .)


state 53

    (58) statute -> loop .

    RETURN          reduce using rule 58 (statute -> loop .)
    READ            reduce using rule 58 (statute -> loop .)
    WRITE           reduce using rule 58 (statute -> loop .)
    IF              reduce using rule 58 (statute -> loop .)
    ID              reduce using rule 58 (statute -> loop .)
    WHILE           reduce using rule 58 (statute -> loop .)
    FOR             reduce using rule 58 (statute -> loop .)
    RIGHTBRACKET    reduce using rule 58 (statute -> loop .)


state 54

    (59) statute -> function_call_void .

    RETURN          reduce using rule 59 (statute -> function_call_void .)
    READ            reduce using rule 59 (statute -> function_call_void .)
    WRITE           reduce using rule 59 (statute -> function_call_void .)
    IF              reduce using rule 59 (statute -> function_call_void .)
    ID              reduce using rule 59 (statute -> function_call_void .)
    WHILE           reduce using rule 59 (statute -> function_call_void .)
    FOR             reduce using rule 59 (statute -> function_call_void .)
    RIGHTBRACKET    reduce using rule 59 (statute -> function_call_void .)


state 55

    (60) assignment -> identifier . neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (61) assignment -> identifier . neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (62) assignment -> identifier . neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (63) assignment -> identifier . neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (64) assignment -> identifier . neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (98) neupoint_add_operand -> .

    EQUALS          reduce using rule 98 (neupoint_add_operand -> .)
    PLUSEQUALS      reduce using rule 98 (neupoint_add_operand -> .)
    SUBSTRACTEQUALS reduce using rule 98 (neupoint_add_operand -> .)
    INCREMENT       reduce using rule 98 (neupoint_add_operand -> .)
    DECREMENT       reduce using rule 98 (neupoint_add_operand -> .)

    neupoint_add_operand           shift and go to state 75

state 56

    (77) function_return -> RETURN . LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON

    LEFTPARENTHESIS shift and go to state 76


state 57

    (65) reading -> READ . LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON

    LEFTPARENTHESIS shift and go to state 77


state 58

    (66) writing -> WRITE . LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON

    LEFTPARENTHESIS shift and go to state 78


state 59

    (71) decision -> IF . LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (72) decision -> IF . LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad

    LEFTPARENTHESIS shift and go to state 79


state 60

    (73) loop -> conditional .

    RETURN          reduce using rule 73 (loop -> conditional .)
    READ            reduce using rule 73 (loop -> conditional .)
    WRITE           reduce using rule 73 (loop -> conditional .)
    IF              reduce using rule 73 (loop -> conditional .)
    ID              reduce using rule 73 (loop -> conditional .)
    WHILE           reduce using rule 73 (loop -> conditional .)
    FOR             reduce using rule 73 (loop -> conditional .)
    RIGHTBRACKET    reduce using rule 73 (loop -> conditional .)


state 61

    (74) loop -> non_conditional .

    RETURN          reduce using rule 74 (loop -> non_conditional .)
    READ            reduce using rule 74 (loop -> non_conditional .)
    WRITE           reduce using rule 74 (loop -> non_conditional .)
    IF              reduce using rule 74 (loop -> non_conditional .)
    ID              reduce using rule 74 (loop -> non_conditional .)
    WHILE           reduce using rule 74 (loop -> non_conditional .)
    FOR             reduce using rule 74 (loop -> non_conditional .)
    RIGHTBRACKET    reduce using rule 74 (loop -> non_conditional .)


state 62

    (78) function_call_void -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 80


state 63

    (18) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> ID .
    (79) function_call -> ID . neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (112) neupoint_search_function -> .

    LEFTSQRBRACKET  shift and go to state 81
    EQUALS          reduce using rule 20 (identifier -> ID .)
    PLUSEQUALS      reduce using rule 20 (identifier -> ID .)
    SUBSTRACTEQUALS reduce using rule 20 (identifier -> ID .)
    INCREMENT       reduce using rule 20 (identifier -> ID .)
    DECREMENT       reduce using rule 20 (identifier -> ID .)
    LEFTPARENTHESIS reduce using rule 112 (neupoint_search_function -> .)

    neupoint_search_function       shift and go to state 82

state 64

    (75) conditional -> WHILE . neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end
    (110) neupoint_while_start -> .

    LEFTPARENTHESIS reduce using rule 110 (neupoint_while_start -> .)

    neupoint_while_start           shift and go to state 83

state 65

    (76) non_conditional -> FOR . ID EQUALS exp TO exp DO block

    ID              shift and go to state 84


state 66

    (9) vars_lists -> data_type decla_ids_list SEMICOLON vars_lists .

    MAIN            reduce using rule 9 (vars_lists -> data_type decla_ids_list SEMICOLON vars_lists .)
    MODULE          reduce using rule 9 (vars_lists -> data_type decla_ids_list SEMICOLON vars_lists .)
    LEFTBRACKET     reduce using rule 9 (vars_lists -> data_type decla_ids_list SEMICOLON vars_lists .)


state 67

    (11) decla_ids_list -> decla_identifier COMMA decla_ids_list .

    SEMICOLON       reduce using rule 11 (decla_ids_list -> decla_identifier COMMA decla_ids_list .)


state 68

    (13) decla_identifier -> ID LEFTSQRBRACKET CTEINT . RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> ID LEFTSQRBRACKET CTEINT . RIGHTSQRBRACKET

    RIGHTSQRBRACKET shift and go to state 85


state 69

    (26) function -> MODULE return_type ID neupoint_add_function parameters_list . vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (27) function -> MODULE return_type ID neupoint_add_function parameters_list . neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (8) vars -> . VAR vars_lists neupoint_add_vars
    (35) neupoint_start_function -> .

    VAR             shift and go to state 8
    LEFTBRACKET     reduce using rule 35 (neupoint_start_function -> .)

    vars                           shift and go to state 86
    neupoint_start_function        shift and go to state 87

state 70

    (28) parameters_list -> LEFTPARENTHESIS . parameter RIGHTPARENTHESIS neupoint_add_parameters
    (29) parameters_list -> LEFTPARENTHESIS . RIGHTPARENTHESIS
    (30) parameter -> . data_type decla_identifier COMMA parameter
    (31) parameter -> . data_type decla_identifier
    (5) data_type -> . INT
    (6) data_type -> . FLOAT
    (7) data_type -> . CHAR

    RIGHTPARENTHESIS shift and go to state 89
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19

    parameter                      shift and go to state 88
    data_type                      shift and go to state 90

state 71

    (1) program -> PROGRAM ID SEMICOLON vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS . block
    (49) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (50) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 91

state 72

    (3) program -> PROGRAM ID SEMICOLON functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .

    $end            reduce using rule 3 (program -> PROGRAM ID SEMICOLON functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .)


state 73

    (49) block -> LEFTBRACKET statutes_list RIGHTBRACKET .

    $end            reduce using rule 49 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    MODULE          reduce using rule 49 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    MAIN            reduce using rule 49 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    ELSE            reduce using rule 49 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    RETURN          reduce using rule 49 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    READ            reduce using rule 49 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    WRITE           reduce using rule 49 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    IF              reduce using rule 49 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    ID              reduce using rule 49 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    WHILE           reduce using rule 49 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    FOR             reduce using rule 49 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 49 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)


state 74

    (51) statutes_list -> statute statutes_list .

    RIGHTBRACKET    reduce using rule 51 (statutes_list -> statute statutes_list .)


state 75

    (60) assignment -> identifier neupoint_add_operand . EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (61) assignment -> identifier neupoint_add_operand . PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (62) assignment -> identifier neupoint_add_operand . SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (63) assignment -> identifier neupoint_add_operand . INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (64) assignment -> identifier neupoint_add_operand . DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON

    EQUALS          shift and go to state 92
    PLUSEQUALS      shift and go to state 93
    SUBSTRACTEQUALS shift and go to state 94
    INCREMENT       shift and go to state 95
    DECREMENT       shift and go to state 96


state 76

    (77) function_return -> RETURN LEFTPARENTHESIS . exp RIGHTPARENTHESIS SEMICOLON
    (87) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (88) exp -> . term neupoint_arithmetic_exp_quad
    (89) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (90) term -> . factor neupoint_arithmetic_term_quad
    (91) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (92) factor -> . CTEINT neupoint_add_cte_operand
    (93) factor -> . CTEFLOAT neupoint_add_cte_operand
    (94) factor -> . CTECHAR neupoint_add_cte_operand
    (95) factor -> . function_call
    (96) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 77

    (65) reading -> READ LEFTPARENTHESIS . ids_list RIGHTPARENTHESIS SEMICOLON
    (16) ids_list -> . identifier COMMA ids_list
    (17) ids_list -> . identifier
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    ID              shift and go to state 109

    ids_list                       shift and go to state 107
    identifier                     shift and go to state 108

state 78

    (66) writing -> WRITE LEFTPARENTHESIS . writing_list RIGHTPARENTHESIS SEMICOLON
    (67) writing_list -> . CTESTRING COMMA writing_list
    (68) writing_list -> . expresion COMMA writing_list
    (69) writing_list -> . CTESTRING
    (70) writing_list -> . expresion
    (82) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (83) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational
    (85) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (86) exp_relational -> . exp
    (87) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (88) exp -> . term neupoint_arithmetic_exp_quad
    (89) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (90) term -> . factor neupoint_arithmetic_term_quad
    (91) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (92) factor -> . CTEINT neupoint_add_cte_operand
    (93) factor -> . CTEFLOAT neupoint_add_cte_operand
    (94) factor -> . CTECHAR neupoint_add_cte_operand
    (95) factor -> . function_call
    (96) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    CTESTRING       shift and go to state 111
    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    writing_list                   shift and go to state 110
    expresion                      shift and go to state 112
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 79

    (71) decision -> IF LEFTPARENTHESIS . expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (72) decision -> IF LEFTPARENTHESIS . expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad
    (82) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (83) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational
    (85) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (86) exp_relational -> . exp
    (87) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (88) exp -> . term neupoint_arithmetic_exp_quad
    (89) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (90) term -> . factor neupoint_arithmetic_term_quad
    (91) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (92) factor -> . CTEINT neupoint_add_cte_operand
    (93) factor -> . CTEFLOAT neupoint_add_cte_operand
    (94) factor -> . CTECHAR neupoint_add_cte_operand
    (95) factor -> . function_call
    (96) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    expresion                      shift and go to state 115
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 80

    (78) function_call_void -> function_call SEMICOLON .

    RETURN          reduce using rule 78 (function_call_void -> function_call SEMICOLON .)
    READ            reduce using rule 78 (function_call_void -> function_call SEMICOLON .)
    WRITE           reduce using rule 78 (function_call_void -> function_call SEMICOLON .)
    IF              reduce using rule 78 (function_call_void -> function_call SEMICOLON .)
    ID              reduce using rule 78 (function_call_void -> function_call SEMICOLON .)
    WHILE           reduce using rule 78 (function_call_void -> function_call SEMICOLON .)
    FOR             reduce using rule 78 (function_call_void -> function_call SEMICOLON .)
    RIGHTBRACKET    reduce using rule 78 (function_call_void -> function_call SEMICOLON .)


state 81

    (18) identifier -> ID LEFTSQRBRACKET . expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> ID LEFTSQRBRACKET . expresion RIGHTSQRBRACKET
    (82) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (83) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational
    (85) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (86) exp_relational -> . exp
    (87) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (88) exp -> . term neupoint_arithmetic_exp_quad
    (89) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (90) term -> . factor neupoint_arithmetic_term_quad
    (91) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (92) factor -> . CTEINT neupoint_add_cte_operand
    (93) factor -> . CTEFLOAT neupoint_add_cte_operand
    (94) factor -> . CTECHAR neupoint_add_cte_operand
    (95) factor -> . function_call
    (96) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    expresion                      shift and go to state 116
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 82

    (79) function_call -> ID neupoint_search_function . LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS

    LEFTPARENTHESIS shift and go to state 117


state 83

    (75) conditional -> WHILE neupoint_while_start . LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end

    LEFTPARENTHESIS shift and go to state 118


state 84

    (76) non_conditional -> FOR ID . EQUALS exp TO exp DO block

    EQUALS          shift and go to state 119


state 85

    (13) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET . LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .

    LEFTSQRBRACKET  shift and go to state 120
    COMMA           reduce using rule 14 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)
    SEMICOLON       reduce using rule 14 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)
    RIGHTPARENTHESIS reduce using rule 14 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)


state 86

    (26) function -> MODULE return_type ID neupoint_add_function parameters_list vars . neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (35) neupoint_start_function -> .

    LEFTBRACKET     reduce using rule 35 (neupoint_start_function -> .)

    neupoint_start_function        shift and go to state 121

state 87

    (27) function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function . block neupoint_check_for_return neupoint_end_function
    (49) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (50) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 122

state 88

    (28) parameters_list -> LEFTPARENTHESIS parameter . RIGHTPARENTHESIS neupoint_add_parameters

    RIGHTPARENTHESIS shift and go to state 123


state 89

    (29) parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS .

    VAR             reduce using rule 29 (parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS .)
    LEFTBRACKET     reduce using rule 29 (parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS .)


state 90

    (30) parameter -> data_type . decla_identifier COMMA parameter
    (31) parameter -> data_type . decla_identifier
    (13) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (15) decla_identifier -> . ID

    ID              shift and go to state 31

    decla_identifier               shift and go to state 124

state 91

    (1) program -> PROGRAM ID SEMICOLON vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .)


state 92

    (60) assignment -> identifier neupoint_add_operand EQUALS . neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (97) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 97 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 97 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 97 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 97 (neupoint_add_operator -> .)
    ID              reduce using rule 97 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 125

state 93

    (61) assignment -> identifier neupoint_add_operand PLUSEQUALS . neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (97) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 97 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 97 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 97 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 97 (neupoint_add_operator -> .)
    ID              reduce using rule 97 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 126

state 94

    (62) assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS . neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (97) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 97 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 97 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 97 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 97 (neupoint_add_operator -> .)
    ID              reduce using rule 97 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 127

state 95

    (63) assignment -> identifier neupoint_add_operand INCREMENT . neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (97) neupoint_add_operator -> .

    SEMICOLON       reduce using rule 97 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 128

state 96

    (64) assignment -> identifier neupoint_add_operand DECREMENT . neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (97) neupoint_add_operator -> .

    SEMICOLON       reduce using rule 97 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 129

state 97

    (91) factor -> LEFTPARENTHESIS . neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (102) neupoint_add_wall -> .

    LEFTPARENTHESIS reduce using rule 102 (neupoint_add_wall -> .)
    CTEINT          reduce using rule 102 (neupoint_add_wall -> .)
    CTEFLOAT        reduce using rule 102 (neupoint_add_wall -> .)
    CTECHAR         reduce using rule 102 (neupoint_add_wall -> .)
    ID              reduce using rule 102 (neupoint_add_wall -> .)

    neupoint_add_wall              shift and go to state 130

state 98

    (77) function_return -> RETURN LEFTPARENTHESIS exp . RIGHTPARENTHESIS SEMICOLON

    RIGHTPARENTHESIS shift and go to state 131


state 99

    (87) exp -> term . neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (88) exp -> term . neupoint_arithmetic_exp_quad
    (100) neupoint_arithmetic_exp_quad -> .

    PLUS            reduce using rule 100 (neupoint_arithmetic_exp_quad -> .)
    MINUS           reduce using rule 100 (neupoint_arithmetic_exp_quad -> .)
    RIGHTPARENTHESIS reduce using rule 100 (neupoint_arithmetic_exp_quad -> .)
    COMPARISON      reduce using rule 100 (neupoint_arithmetic_exp_quad -> .)
    GREATERHANOREQUAL reduce using rule 100 (neupoint_arithmetic_exp_quad -> .)
    LESSTHANOREQUAL reduce using rule 100 (neupoint_arithmetic_exp_quad -> .)
    GREATERTHAN     reduce using rule 100 (neupoint_arithmetic_exp_quad -> .)
    LESSTHAN        reduce using rule 100 (neupoint_arithmetic_exp_quad -> .)
    DIFFERENT       reduce using rule 100 (neupoint_arithmetic_exp_quad -> .)
    AND             reduce using rule 100 (neupoint_arithmetic_exp_quad -> .)
    OR              reduce using rule 100 (neupoint_arithmetic_exp_quad -> .)
    COMMA           reduce using rule 100 (neupoint_arithmetic_exp_quad -> .)
    RIGHTSQRBRACKET reduce using rule 100 (neupoint_arithmetic_exp_quad -> .)
    TO              reduce using rule 100 (neupoint_arithmetic_exp_quad -> .)
    SEMICOLON       reduce using rule 100 (neupoint_arithmetic_exp_quad -> .)
    DO              reduce using rule 100 (neupoint_arithmetic_exp_quad -> .)

    neupoint_arithmetic_exp_quad   shift and go to state 132

state 100

    (89) term -> factor . neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (90) term -> factor . neupoint_arithmetic_term_quad
    (101) neupoint_arithmetic_term_quad -> .

    MULTIPLY        reduce using rule 101 (neupoint_arithmetic_term_quad -> .)
    DIVIDE          reduce using rule 101 (neupoint_arithmetic_term_quad -> .)
    MOD             reduce using rule 101 (neupoint_arithmetic_term_quad -> .)
    PLUS            reduce using rule 101 (neupoint_arithmetic_term_quad -> .)
    MINUS           reduce using rule 101 (neupoint_arithmetic_term_quad -> .)
    RIGHTPARENTHESIS reduce using rule 101 (neupoint_arithmetic_term_quad -> .)
    COMPARISON      reduce using rule 101 (neupoint_arithmetic_term_quad -> .)
    GREATERHANOREQUAL reduce using rule 101 (neupoint_arithmetic_term_quad -> .)
    LESSTHANOREQUAL reduce using rule 101 (neupoint_arithmetic_term_quad -> .)
    GREATERTHAN     reduce using rule 101 (neupoint_arithmetic_term_quad -> .)
    LESSTHAN        reduce using rule 101 (neupoint_arithmetic_term_quad -> .)
    DIFFERENT       reduce using rule 101 (neupoint_arithmetic_term_quad -> .)
    AND             reduce using rule 101 (neupoint_arithmetic_term_quad -> .)
    OR              reduce using rule 101 (neupoint_arithmetic_term_quad -> .)
    COMMA           reduce using rule 101 (neupoint_arithmetic_term_quad -> .)
    RIGHTSQRBRACKET reduce using rule 101 (neupoint_arithmetic_term_quad -> .)
    TO              reduce using rule 101 (neupoint_arithmetic_term_quad -> .)
    SEMICOLON       reduce using rule 101 (neupoint_arithmetic_term_quad -> .)
    DO              reduce using rule 101 (neupoint_arithmetic_term_quad -> .)

    neupoint_arithmetic_term_quad  shift and go to state 133

state 101

    (92) factor -> CTEINT . neupoint_add_cte_operand
    (99) neupoint_add_cte_operand -> .

    MULTIPLY        reduce using rule 99 (neupoint_add_cte_operand -> .)
    DIVIDE          reduce using rule 99 (neupoint_add_cte_operand -> .)
    MOD             reduce using rule 99 (neupoint_add_cte_operand -> .)
    PLUS            reduce using rule 99 (neupoint_add_cte_operand -> .)
    MINUS           reduce using rule 99 (neupoint_add_cte_operand -> .)
    RIGHTPARENTHESIS reduce using rule 99 (neupoint_add_cte_operand -> .)
    COMPARISON      reduce using rule 99 (neupoint_add_cte_operand -> .)
    GREATERHANOREQUAL reduce using rule 99 (neupoint_add_cte_operand -> .)
    LESSTHANOREQUAL reduce using rule 99 (neupoint_add_cte_operand -> .)
    GREATERTHAN     reduce using rule 99 (neupoint_add_cte_operand -> .)
    LESSTHAN        reduce using rule 99 (neupoint_add_cte_operand -> .)
    DIFFERENT       reduce using rule 99 (neupoint_add_cte_operand -> .)
    AND             reduce using rule 99 (neupoint_add_cte_operand -> .)
    OR              reduce using rule 99 (neupoint_add_cte_operand -> .)
    COMMA           reduce using rule 99 (neupoint_add_cte_operand -> .)
    RIGHTSQRBRACKET reduce using rule 99 (neupoint_add_cte_operand -> .)
    TO              reduce using rule 99 (neupoint_add_cte_operand -> .)
    SEMICOLON       reduce using rule 99 (neupoint_add_cte_operand -> .)
    DO              reduce using rule 99 (neupoint_add_cte_operand -> .)

    neupoint_add_cte_operand       shift and go to state 134

state 102

    (93) factor -> CTEFLOAT . neupoint_add_cte_operand
    (99) neupoint_add_cte_operand -> .

    MULTIPLY        reduce using rule 99 (neupoint_add_cte_operand -> .)
    DIVIDE          reduce using rule 99 (neupoint_add_cte_operand -> .)
    MOD             reduce using rule 99 (neupoint_add_cte_operand -> .)
    PLUS            reduce using rule 99 (neupoint_add_cte_operand -> .)
    MINUS           reduce using rule 99 (neupoint_add_cte_operand -> .)
    RIGHTPARENTHESIS reduce using rule 99 (neupoint_add_cte_operand -> .)
    COMPARISON      reduce using rule 99 (neupoint_add_cte_operand -> .)
    GREATERHANOREQUAL reduce using rule 99 (neupoint_add_cte_operand -> .)
    LESSTHANOREQUAL reduce using rule 99 (neupoint_add_cte_operand -> .)
    GREATERTHAN     reduce using rule 99 (neupoint_add_cte_operand -> .)
    LESSTHAN        reduce using rule 99 (neupoint_add_cte_operand -> .)
    DIFFERENT       reduce using rule 99 (neupoint_add_cte_operand -> .)
    AND             reduce using rule 99 (neupoint_add_cte_operand -> .)
    OR              reduce using rule 99 (neupoint_add_cte_operand -> .)
    COMMA           reduce using rule 99 (neupoint_add_cte_operand -> .)
    RIGHTSQRBRACKET reduce using rule 99 (neupoint_add_cte_operand -> .)
    TO              reduce using rule 99 (neupoint_add_cte_operand -> .)
    SEMICOLON       reduce using rule 99 (neupoint_add_cte_operand -> .)
    DO              reduce using rule 99 (neupoint_add_cte_operand -> .)

    neupoint_add_cte_operand       shift and go to state 135

state 103

    (94) factor -> CTECHAR . neupoint_add_cte_operand
    (99) neupoint_add_cte_operand -> .

    MULTIPLY        reduce using rule 99 (neupoint_add_cte_operand -> .)
    DIVIDE          reduce using rule 99 (neupoint_add_cte_operand -> .)
    MOD             reduce using rule 99 (neupoint_add_cte_operand -> .)
    PLUS            reduce using rule 99 (neupoint_add_cte_operand -> .)
    MINUS           reduce using rule 99 (neupoint_add_cte_operand -> .)
    RIGHTPARENTHESIS reduce using rule 99 (neupoint_add_cte_operand -> .)
    COMPARISON      reduce using rule 99 (neupoint_add_cte_operand -> .)
    GREATERHANOREQUAL reduce using rule 99 (neupoint_add_cte_operand -> .)
    LESSTHANOREQUAL reduce using rule 99 (neupoint_add_cte_operand -> .)
    GREATERTHAN     reduce using rule 99 (neupoint_add_cte_operand -> .)
    LESSTHAN        reduce using rule 99 (neupoint_add_cte_operand -> .)
    DIFFERENT       reduce using rule 99 (neupoint_add_cte_operand -> .)
    AND             reduce using rule 99 (neupoint_add_cte_operand -> .)
    OR              reduce using rule 99 (neupoint_add_cte_operand -> .)
    COMMA           reduce using rule 99 (neupoint_add_cte_operand -> .)
    RIGHTSQRBRACKET reduce using rule 99 (neupoint_add_cte_operand -> .)
    TO              reduce using rule 99 (neupoint_add_cte_operand -> .)
    SEMICOLON       reduce using rule 99 (neupoint_add_cte_operand -> .)
    DO              reduce using rule 99 (neupoint_add_cte_operand -> .)

    neupoint_add_cte_operand       shift and go to state 136

state 104

    (95) factor -> function_call .

    MULTIPLY        reduce using rule 95 (factor -> function_call .)
    DIVIDE          reduce using rule 95 (factor -> function_call .)
    MOD             reduce using rule 95 (factor -> function_call .)
    PLUS            reduce using rule 95 (factor -> function_call .)
    MINUS           reduce using rule 95 (factor -> function_call .)
    RIGHTPARENTHESIS reduce using rule 95 (factor -> function_call .)
    COMPARISON      reduce using rule 95 (factor -> function_call .)
    GREATERHANOREQUAL reduce using rule 95 (factor -> function_call .)
    LESSTHANOREQUAL reduce using rule 95 (factor -> function_call .)
    GREATERTHAN     reduce using rule 95 (factor -> function_call .)
    LESSTHAN        reduce using rule 95 (factor -> function_call .)
    DIFFERENT       reduce using rule 95 (factor -> function_call .)
    AND             reduce using rule 95 (factor -> function_call .)
    OR              reduce using rule 95 (factor -> function_call .)
    COMMA           reduce using rule 95 (factor -> function_call .)
    RIGHTSQRBRACKET reduce using rule 95 (factor -> function_call .)
    TO              reduce using rule 95 (factor -> function_call .)
    SEMICOLON       reduce using rule 95 (factor -> function_call .)
    DO              reduce using rule 95 (factor -> function_call .)


state 105

    (96) factor -> identifier . neupoint_add_operand
    (98) neupoint_add_operand -> .

    MULTIPLY        reduce using rule 98 (neupoint_add_operand -> .)
    DIVIDE          reduce using rule 98 (neupoint_add_operand -> .)
    MOD             reduce using rule 98 (neupoint_add_operand -> .)
    PLUS            reduce using rule 98 (neupoint_add_operand -> .)
    MINUS           reduce using rule 98 (neupoint_add_operand -> .)
    RIGHTPARENTHESIS reduce using rule 98 (neupoint_add_operand -> .)
    COMPARISON      reduce using rule 98 (neupoint_add_operand -> .)
    GREATERHANOREQUAL reduce using rule 98 (neupoint_add_operand -> .)
    LESSTHANOREQUAL reduce using rule 98 (neupoint_add_operand -> .)
    GREATERTHAN     reduce using rule 98 (neupoint_add_operand -> .)
    LESSTHAN        reduce using rule 98 (neupoint_add_operand -> .)
    DIFFERENT       reduce using rule 98 (neupoint_add_operand -> .)
    AND             reduce using rule 98 (neupoint_add_operand -> .)
    OR              reduce using rule 98 (neupoint_add_operand -> .)
    COMMA           reduce using rule 98 (neupoint_add_operand -> .)
    RIGHTSQRBRACKET reduce using rule 98 (neupoint_add_operand -> .)
    TO              reduce using rule 98 (neupoint_add_operand -> .)
    SEMICOLON       reduce using rule 98 (neupoint_add_operand -> .)
    DO              reduce using rule 98 (neupoint_add_operand -> .)

    neupoint_add_operand           shift and go to state 137

state 106

    (79) function_call -> ID . neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> ID .
    (112) neupoint_search_function -> .

    LEFTSQRBRACKET  shift and go to state 81
    MULTIPLY        reduce using rule 20 (identifier -> ID .)
    DIVIDE          reduce using rule 20 (identifier -> ID .)
    MOD             reduce using rule 20 (identifier -> ID .)
    PLUS            reduce using rule 20 (identifier -> ID .)
    MINUS           reduce using rule 20 (identifier -> ID .)
    RIGHTPARENTHESIS reduce using rule 20 (identifier -> ID .)
    COMPARISON      reduce using rule 20 (identifier -> ID .)
    GREATERHANOREQUAL reduce using rule 20 (identifier -> ID .)
    LESSTHANOREQUAL reduce using rule 20 (identifier -> ID .)
    GREATERTHAN     reduce using rule 20 (identifier -> ID .)
    LESSTHAN        reduce using rule 20 (identifier -> ID .)
    DIFFERENT       reduce using rule 20 (identifier -> ID .)
    AND             reduce using rule 20 (identifier -> ID .)
    OR              reduce using rule 20 (identifier -> ID .)
    COMMA           reduce using rule 20 (identifier -> ID .)
    RIGHTSQRBRACKET reduce using rule 20 (identifier -> ID .)
    TO              reduce using rule 20 (identifier -> ID .)
    SEMICOLON       reduce using rule 20 (identifier -> ID .)
    DO              reduce using rule 20 (identifier -> ID .)
    LEFTPARENTHESIS reduce using rule 112 (neupoint_search_function -> .)

    neupoint_search_function       shift and go to state 82

state 107

    (65) reading -> READ LEFTPARENTHESIS ids_list . RIGHTPARENTHESIS SEMICOLON

    RIGHTPARENTHESIS shift and go to state 138


state 108

    (16) ids_list -> identifier . COMMA ids_list
    (17) ids_list -> identifier .

    COMMA           shift and go to state 139
    RIGHTPARENTHESIS reduce using rule 17 (ids_list -> identifier .)


state 109

    (18) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> ID .

    LEFTSQRBRACKET  shift and go to state 81
    COMMA           reduce using rule 20 (identifier -> ID .)
    RIGHTPARENTHESIS reduce using rule 20 (identifier -> ID .)


state 110

    (66) writing -> WRITE LEFTPARENTHESIS writing_list . RIGHTPARENTHESIS SEMICOLON

    RIGHTPARENTHESIS shift and go to state 140


state 111

    (67) writing_list -> CTESTRING . COMMA writing_list
    (69) writing_list -> CTESTRING .

    COMMA           shift and go to state 141
    RIGHTPARENTHESIS reduce using rule 69 (writing_list -> CTESTRING .)


state 112

    (68) writing_list -> expresion . COMMA writing_list
    (70) writing_list -> expresion .

    COMMA           shift and go to state 142
    RIGHTPARENTHESIS reduce using rule 70 (writing_list -> expresion .)


state 113

    (82) expresion -> exp_relational . AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (83) expresion -> exp_relational . OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> exp_relational .

    AND             shift and go to state 143
    OR              shift and go to state 144
    COMMA           reduce using rule 84 (expresion -> exp_relational .)
    RIGHTPARENTHESIS reduce using rule 84 (expresion -> exp_relational .)
    RIGHTSQRBRACKET reduce using rule 84 (expresion -> exp_relational .)
    SEMICOLON       reduce using rule 84 (expresion -> exp_relational .)


state 114

    (85) exp_relational -> exp . comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (86) exp_relational -> exp .
    (38) comparators -> . COMPARISON
    (39) comparators -> . GREATERHANOREQUAL
    (40) comparators -> . LESSTHANOREQUAL
    (41) comparators -> . GREATERTHAN
    (42) comparators -> . LESSTHAN
    (43) comparators -> . DIFFERENT

    AND             reduce using rule 86 (exp_relational -> exp .)
    OR              reduce using rule 86 (exp_relational -> exp .)
    COMMA           reduce using rule 86 (exp_relational -> exp .)
    RIGHTPARENTHESIS reduce using rule 86 (exp_relational -> exp .)
    RIGHTSQRBRACKET reduce using rule 86 (exp_relational -> exp .)
    SEMICOLON       reduce using rule 86 (exp_relational -> exp .)
    COMPARISON      shift and go to state 146
    GREATERHANOREQUAL shift and go to state 147
    LESSTHANOREQUAL shift and go to state 148
    GREATERTHAN     shift and go to state 149
    LESSTHAN        shift and go to state 150
    DIFFERENT       shift and go to state 151

    comparators                    shift and go to state 145

state 115

    (71) decision -> IF LEFTPARENTHESIS expresion . RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (72) decision -> IF LEFTPARENTHESIS expresion . RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad

    RIGHTPARENTHESIS shift and go to state 152


state 116

    (18) identifier -> ID LEFTSQRBRACKET expresion . RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> ID LEFTSQRBRACKET expresion . RIGHTSQRBRACKET

    RIGHTSQRBRACKET shift and go to state 153


state 117

    (79) function_call -> ID neupoint_search_function LEFTPARENTHESIS . expresion_list RIGHTPARENTHESIS
    (80) expresion_list -> . expresion COMMA expresion_list
    (81) expresion_list -> . expresion
    (82) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (83) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational
    (85) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (86) exp_relational -> . exp
    (87) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (88) exp -> . term neupoint_arithmetic_exp_quad
    (89) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (90) term -> . factor neupoint_arithmetic_term_quad
    (91) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (92) factor -> . CTEINT neupoint_add_cte_operand
    (93) factor -> . CTEFLOAT neupoint_add_cte_operand
    (94) factor -> . CTECHAR neupoint_add_cte_operand
    (95) factor -> . function_call
    (96) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    expresion_list                 shift and go to state 154
    expresion                      shift and go to state 155
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 118

    (75) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS . expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end
    (82) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (83) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational
    (85) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (86) exp_relational -> . exp
    (87) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (88) exp -> . term neupoint_arithmetic_exp_quad
    (89) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (90) term -> . factor neupoint_arithmetic_term_quad
    (91) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (92) factor -> . CTEINT neupoint_add_cte_operand
    (93) factor -> . CTEFLOAT neupoint_add_cte_operand
    (94) factor -> . CTECHAR neupoint_add_cte_operand
    (95) factor -> . function_call
    (96) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    expresion                      shift and go to state 156
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 119

    (76) non_conditional -> FOR ID EQUALS . exp TO exp DO block
    (87) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (88) exp -> . term neupoint_arithmetic_exp_quad
    (89) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (90) term -> . factor neupoint_arithmetic_term_quad
    (91) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (92) factor -> . CTEINT neupoint_add_cte_operand
    (93) factor -> . CTEFLOAT neupoint_add_cte_operand
    (94) factor -> . CTECHAR neupoint_add_cte_operand
    (95) factor -> . function_call
    (96) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    exp                            shift and go to state 157
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 120

    (13) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET . CTEINT RIGHTSQRBRACKET

    CTEINT          shift and go to state 158


state 121

    (26) function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function . block neupoint_check_for_return neupoint_end_function
    (49) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (50) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 159

state 122

    (27) function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block . neupoint_check_for_return neupoint_end_function
    (36) neupoint_check_for_return -> .

    MODULE          reduce using rule 36 (neupoint_check_for_return -> .)
    MAIN            reduce using rule 36 (neupoint_check_for_return -> .)

    neupoint_check_for_return      shift and go to state 160

state 123

    (28) parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS . neupoint_add_parameters
    (33) neupoint_add_parameters -> .

    VAR             reduce using rule 33 (neupoint_add_parameters -> .)
    LEFTBRACKET     reduce using rule 33 (neupoint_add_parameters -> .)

    neupoint_add_parameters        shift and go to state 161

state 124

    (30) parameter -> data_type decla_identifier . COMMA parameter
    (31) parameter -> data_type decla_identifier .

    COMMA           shift and go to state 162
    RIGHTPARENTHESIS reduce using rule 31 (parameter -> data_type decla_identifier .)


state 125

    (60) assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator . expresion neupoint_assignment_quad SEMICOLON
    (82) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (83) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational
    (85) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (86) exp_relational -> . exp
    (87) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (88) exp -> . term neupoint_arithmetic_exp_quad
    (89) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (90) term -> . factor neupoint_arithmetic_term_quad
    (91) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (92) factor -> . CTEINT neupoint_add_cte_operand
    (93) factor -> . CTEFLOAT neupoint_add_cte_operand
    (94) factor -> . CTECHAR neupoint_add_cte_operand
    (95) factor -> . function_call
    (96) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    identifier                     shift and go to state 105
    expresion                      shift and go to state 163
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104

state 126

    (61) assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator . expresion neupoint_assignment_quad SEMICOLON
    (82) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (83) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational
    (85) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (86) exp_relational -> . exp
    (87) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (88) exp -> . term neupoint_arithmetic_exp_quad
    (89) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (90) term -> . factor neupoint_arithmetic_term_quad
    (91) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (92) factor -> . CTEINT neupoint_add_cte_operand
    (93) factor -> . CTEFLOAT neupoint_add_cte_operand
    (94) factor -> . CTECHAR neupoint_add_cte_operand
    (95) factor -> . function_call
    (96) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    identifier                     shift and go to state 105
    expresion                      shift and go to state 164
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104

state 127

    (62) assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator . expresion neupoint_assignment_quad SEMICOLON
    (82) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (83) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational
    (85) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (86) exp_relational -> . exp
    (87) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (88) exp -> . term neupoint_arithmetic_exp_quad
    (89) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (90) term -> . factor neupoint_arithmetic_term_quad
    (91) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (92) factor -> . CTEINT neupoint_add_cte_operand
    (93) factor -> . CTEFLOAT neupoint_add_cte_operand
    (94) factor -> . CTECHAR neupoint_add_cte_operand
    (95) factor -> . function_call
    (96) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    identifier                     shift and go to state 105
    expresion                      shift and go to state 165
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104

state 128

    (63) assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator . neupoint_assignment_single_quad SEMICOLON
    (105) neupoint_assignment_single_quad -> .

    SEMICOLON       reduce using rule 105 (neupoint_assignment_single_quad -> .)

    neupoint_assignment_single_quad shift and go to state 166

state 129

    (64) assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator . neupoint_assignment_single_quad SEMICOLON
    (105) neupoint_assignment_single_quad -> .

    SEMICOLON       reduce using rule 105 (neupoint_assignment_single_quad -> .)

    neupoint_assignment_single_quad shift and go to state 167

state 130

    (91) factor -> LEFTPARENTHESIS neupoint_add_wall . expresion neupoint_remove_wall RIGHTPARENTHESIS
    (82) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (83) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational
    (85) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (86) exp_relational -> . exp
    (87) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (88) exp -> . term neupoint_arithmetic_exp_quad
    (89) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (90) term -> . factor neupoint_arithmetic_term_quad
    (91) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (92) factor -> . CTEINT neupoint_add_cte_operand
    (93) factor -> . CTEFLOAT neupoint_add_cte_operand
    (94) factor -> . CTECHAR neupoint_add_cte_operand
    (95) factor -> . function_call
    (96) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    expresion                      shift and go to state 168
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 131

    (77) function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 169


state 132

    (87) exp -> term neupoint_arithmetic_exp_quad . exp_operator neupoint_add_operator exp
    (88) exp -> term neupoint_arithmetic_exp_quad .
    (44) exp_operator -> . PLUS
    (45) exp_operator -> . MINUS

    RIGHTPARENTHESIS reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad .)
    COMPARISON      reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad .)
    GREATERHANOREQUAL reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad .)
    LESSTHANOREQUAL reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad .)
    GREATERTHAN     reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad .)
    LESSTHAN        reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad .)
    DIFFERENT       reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad .)
    AND             reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad .)
    OR              reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad .)
    COMMA           reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad .)
    RIGHTSQRBRACKET reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad .)
    TO              reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad .)
    SEMICOLON       reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad .)
    DO              reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad .)
    PLUS            shift and go to state 171
    MINUS           shift and go to state 172

    exp_operator                   shift and go to state 170

state 133

    (89) term -> factor neupoint_arithmetic_term_quad . term_operator neupoint_add_operator term
    (90) term -> factor neupoint_arithmetic_term_quad .
    (46) term_operator -> . MULTIPLY
    (47) term_operator -> . DIVIDE
    (48) term_operator -> . MOD

    PLUS            reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad .)
    MINUS           reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad .)
    RIGHTPARENTHESIS reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad .)
    COMPARISON      reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad .)
    GREATERHANOREQUAL reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad .)
    LESSTHANOREQUAL reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad .)
    GREATERTHAN     reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad .)
    LESSTHAN        reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad .)
    DIFFERENT       reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad .)
    AND             reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad .)
    OR              reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad .)
    COMMA           reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad .)
    RIGHTSQRBRACKET reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad .)
    TO              reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad .)
    SEMICOLON       reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad .)
    DO              reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad .)
    MULTIPLY        shift and go to state 174
    DIVIDE          shift and go to state 175
    MOD             shift and go to state 176

    term_operator                  shift and go to state 173

state 134

    (92) factor -> CTEINT neupoint_add_cte_operand .

    MULTIPLY        reduce using rule 92 (factor -> CTEINT neupoint_add_cte_operand .)
    DIVIDE          reduce using rule 92 (factor -> CTEINT neupoint_add_cte_operand .)
    MOD             reduce using rule 92 (factor -> CTEINT neupoint_add_cte_operand .)
    PLUS            reduce using rule 92 (factor -> CTEINT neupoint_add_cte_operand .)
    MINUS           reduce using rule 92 (factor -> CTEINT neupoint_add_cte_operand .)
    RIGHTPARENTHESIS reduce using rule 92 (factor -> CTEINT neupoint_add_cte_operand .)
    COMPARISON      reduce using rule 92 (factor -> CTEINT neupoint_add_cte_operand .)
    GREATERHANOREQUAL reduce using rule 92 (factor -> CTEINT neupoint_add_cte_operand .)
    LESSTHANOREQUAL reduce using rule 92 (factor -> CTEINT neupoint_add_cte_operand .)
    GREATERTHAN     reduce using rule 92 (factor -> CTEINT neupoint_add_cte_operand .)
    LESSTHAN        reduce using rule 92 (factor -> CTEINT neupoint_add_cte_operand .)
    DIFFERENT       reduce using rule 92 (factor -> CTEINT neupoint_add_cte_operand .)
    AND             reduce using rule 92 (factor -> CTEINT neupoint_add_cte_operand .)
    OR              reduce using rule 92 (factor -> CTEINT neupoint_add_cte_operand .)
    COMMA           reduce using rule 92 (factor -> CTEINT neupoint_add_cte_operand .)
    RIGHTSQRBRACKET reduce using rule 92 (factor -> CTEINT neupoint_add_cte_operand .)
    TO              reduce using rule 92 (factor -> CTEINT neupoint_add_cte_operand .)
    SEMICOLON       reduce using rule 92 (factor -> CTEINT neupoint_add_cte_operand .)
    DO              reduce using rule 92 (factor -> CTEINT neupoint_add_cte_operand .)


state 135

    (93) factor -> CTEFLOAT neupoint_add_cte_operand .

    MULTIPLY        reduce using rule 93 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    DIVIDE          reduce using rule 93 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    MOD             reduce using rule 93 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    PLUS            reduce using rule 93 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    MINUS           reduce using rule 93 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    RIGHTPARENTHESIS reduce using rule 93 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    COMPARISON      reduce using rule 93 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    GREATERHANOREQUAL reduce using rule 93 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    LESSTHANOREQUAL reduce using rule 93 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    GREATERTHAN     reduce using rule 93 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    LESSTHAN        reduce using rule 93 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    DIFFERENT       reduce using rule 93 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    AND             reduce using rule 93 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    OR              reduce using rule 93 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    COMMA           reduce using rule 93 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    RIGHTSQRBRACKET reduce using rule 93 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    TO              reduce using rule 93 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    SEMICOLON       reduce using rule 93 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    DO              reduce using rule 93 (factor -> CTEFLOAT neupoint_add_cte_operand .)


state 136

    (94) factor -> CTECHAR neupoint_add_cte_operand .

    MULTIPLY        reduce using rule 94 (factor -> CTECHAR neupoint_add_cte_operand .)
    DIVIDE          reduce using rule 94 (factor -> CTECHAR neupoint_add_cte_operand .)
    MOD             reduce using rule 94 (factor -> CTECHAR neupoint_add_cte_operand .)
    PLUS            reduce using rule 94 (factor -> CTECHAR neupoint_add_cte_operand .)
    MINUS           reduce using rule 94 (factor -> CTECHAR neupoint_add_cte_operand .)
    RIGHTPARENTHESIS reduce using rule 94 (factor -> CTECHAR neupoint_add_cte_operand .)
    COMPARISON      reduce using rule 94 (factor -> CTECHAR neupoint_add_cte_operand .)
    GREATERHANOREQUAL reduce using rule 94 (factor -> CTECHAR neupoint_add_cte_operand .)
    LESSTHANOREQUAL reduce using rule 94 (factor -> CTECHAR neupoint_add_cte_operand .)
    GREATERTHAN     reduce using rule 94 (factor -> CTECHAR neupoint_add_cte_operand .)
    LESSTHAN        reduce using rule 94 (factor -> CTECHAR neupoint_add_cte_operand .)
    DIFFERENT       reduce using rule 94 (factor -> CTECHAR neupoint_add_cte_operand .)
    AND             reduce using rule 94 (factor -> CTECHAR neupoint_add_cte_operand .)
    OR              reduce using rule 94 (factor -> CTECHAR neupoint_add_cte_operand .)
    COMMA           reduce using rule 94 (factor -> CTECHAR neupoint_add_cte_operand .)
    RIGHTSQRBRACKET reduce using rule 94 (factor -> CTECHAR neupoint_add_cte_operand .)
    TO              reduce using rule 94 (factor -> CTECHAR neupoint_add_cte_operand .)
    SEMICOLON       reduce using rule 94 (factor -> CTECHAR neupoint_add_cte_operand .)
    DO              reduce using rule 94 (factor -> CTECHAR neupoint_add_cte_operand .)


state 137

    (96) factor -> identifier neupoint_add_operand .

    MULTIPLY        reduce using rule 96 (factor -> identifier neupoint_add_operand .)
    DIVIDE          reduce using rule 96 (factor -> identifier neupoint_add_operand .)
    MOD             reduce using rule 96 (factor -> identifier neupoint_add_operand .)
    PLUS            reduce using rule 96 (factor -> identifier neupoint_add_operand .)
    MINUS           reduce using rule 96 (factor -> identifier neupoint_add_operand .)
    RIGHTPARENTHESIS reduce using rule 96 (factor -> identifier neupoint_add_operand .)
    COMPARISON      reduce using rule 96 (factor -> identifier neupoint_add_operand .)
    GREATERHANOREQUAL reduce using rule 96 (factor -> identifier neupoint_add_operand .)
    LESSTHANOREQUAL reduce using rule 96 (factor -> identifier neupoint_add_operand .)
    GREATERTHAN     reduce using rule 96 (factor -> identifier neupoint_add_operand .)
    LESSTHAN        reduce using rule 96 (factor -> identifier neupoint_add_operand .)
    DIFFERENT       reduce using rule 96 (factor -> identifier neupoint_add_operand .)
    AND             reduce using rule 96 (factor -> identifier neupoint_add_operand .)
    OR              reduce using rule 96 (factor -> identifier neupoint_add_operand .)
    COMMA           reduce using rule 96 (factor -> identifier neupoint_add_operand .)
    RIGHTSQRBRACKET reduce using rule 96 (factor -> identifier neupoint_add_operand .)
    TO              reduce using rule 96 (factor -> identifier neupoint_add_operand .)
    SEMICOLON       reduce using rule 96 (factor -> identifier neupoint_add_operand .)
    DO              reduce using rule 96 (factor -> identifier neupoint_add_operand .)


state 138

    (65) reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 177


state 139

    (16) ids_list -> identifier COMMA . ids_list
    (16) ids_list -> . identifier COMMA ids_list
    (17) ids_list -> . identifier
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    ID              shift and go to state 109

    identifier                     shift and go to state 108
    ids_list                       shift and go to state 178

state 140

    (66) writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 179


state 141

    (67) writing_list -> CTESTRING COMMA . writing_list
    (67) writing_list -> . CTESTRING COMMA writing_list
    (68) writing_list -> . expresion COMMA writing_list
    (69) writing_list -> . CTESTRING
    (70) writing_list -> . expresion
    (82) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (83) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational
    (85) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (86) exp_relational -> . exp
    (87) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (88) exp -> . term neupoint_arithmetic_exp_quad
    (89) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (90) term -> . factor neupoint_arithmetic_term_quad
    (91) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (92) factor -> . CTEINT neupoint_add_cte_operand
    (93) factor -> . CTEFLOAT neupoint_add_cte_operand
    (94) factor -> . CTECHAR neupoint_add_cte_operand
    (95) factor -> . function_call
    (96) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    CTESTRING       shift and go to state 111
    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    writing_list                   shift and go to state 180
    expresion                      shift and go to state 112
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 142

    (68) writing_list -> expresion COMMA . writing_list
    (67) writing_list -> . CTESTRING COMMA writing_list
    (68) writing_list -> . expresion COMMA writing_list
    (69) writing_list -> . CTESTRING
    (70) writing_list -> . expresion
    (82) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (83) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational
    (85) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (86) exp_relational -> . exp
    (87) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (88) exp -> . term neupoint_arithmetic_exp_quad
    (89) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (90) term -> . factor neupoint_arithmetic_term_quad
    (91) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (92) factor -> . CTEINT neupoint_add_cte_operand
    (93) factor -> . CTEFLOAT neupoint_add_cte_operand
    (94) factor -> . CTECHAR neupoint_add_cte_operand
    (95) factor -> . function_call
    (96) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    CTESTRING       shift and go to state 111
    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    expresion                      shift and go to state 112
    writing_list                   shift and go to state 181
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 143

    (82) expresion -> exp_relational AND . neupoint_add_operator expresion neupoint_logical_relational_opt
    (97) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 97 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 97 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 97 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 97 (neupoint_add_operator -> .)
    ID              reduce using rule 97 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 182

state 144

    (83) expresion -> exp_relational OR . neupoint_add_operator expresion neupoint_logical_relational_opt
    (97) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 97 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 97 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 97 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 97 (neupoint_add_operator -> .)
    ID              reduce using rule 97 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 183

state 145

    (85) exp_relational -> exp comparators . neupoint_add_operator exp neupoint_logical_relational_opt
    (97) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 97 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 97 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 97 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 97 (neupoint_add_operator -> .)
    ID              reduce using rule 97 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 184

state 146

    (38) comparators -> COMPARISON .

    LEFTPARENTHESIS reduce using rule 38 (comparators -> COMPARISON .)
    CTEINT          reduce using rule 38 (comparators -> COMPARISON .)
    CTEFLOAT        reduce using rule 38 (comparators -> COMPARISON .)
    CTECHAR         reduce using rule 38 (comparators -> COMPARISON .)
    ID              reduce using rule 38 (comparators -> COMPARISON .)


state 147

    (39) comparators -> GREATERHANOREQUAL .

    LEFTPARENTHESIS reduce using rule 39 (comparators -> GREATERHANOREQUAL .)
    CTEINT          reduce using rule 39 (comparators -> GREATERHANOREQUAL .)
    CTEFLOAT        reduce using rule 39 (comparators -> GREATERHANOREQUAL .)
    CTECHAR         reduce using rule 39 (comparators -> GREATERHANOREQUAL .)
    ID              reduce using rule 39 (comparators -> GREATERHANOREQUAL .)


state 148

    (40) comparators -> LESSTHANOREQUAL .

    LEFTPARENTHESIS reduce using rule 40 (comparators -> LESSTHANOREQUAL .)
    CTEINT          reduce using rule 40 (comparators -> LESSTHANOREQUAL .)
    CTEFLOAT        reduce using rule 40 (comparators -> LESSTHANOREQUAL .)
    CTECHAR         reduce using rule 40 (comparators -> LESSTHANOREQUAL .)
    ID              reduce using rule 40 (comparators -> LESSTHANOREQUAL .)


state 149

    (41) comparators -> GREATERTHAN .

    LEFTPARENTHESIS reduce using rule 41 (comparators -> GREATERTHAN .)
    CTEINT          reduce using rule 41 (comparators -> GREATERTHAN .)
    CTEFLOAT        reduce using rule 41 (comparators -> GREATERTHAN .)
    CTECHAR         reduce using rule 41 (comparators -> GREATERTHAN .)
    ID              reduce using rule 41 (comparators -> GREATERTHAN .)


state 150

    (42) comparators -> LESSTHAN .

    LEFTPARENTHESIS reduce using rule 42 (comparators -> LESSTHAN .)
    CTEINT          reduce using rule 42 (comparators -> LESSTHAN .)
    CTEFLOAT        reduce using rule 42 (comparators -> LESSTHAN .)
    CTECHAR         reduce using rule 42 (comparators -> LESSTHAN .)
    ID              reduce using rule 42 (comparators -> LESSTHAN .)


state 151

    (43) comparators -> DIFFERENT .

    LEFTPARENTHESIS reduce using rule 43 (comparators -> DIFFERENT .)
    CTEINT          reduce using rule 43 (comparators -> DIFFERENT .)
    CTEFLOAT        reduce using rule 43 (comparators -> DIFFERENT .)
    CTECHAR         reduce using rule 43 (comparators -> DIFFERENT .)
    ID              reduce using rule 43 (comparators -> DIFFERENT .)


state 152

    (71) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS . neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (72) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS . neupoint_conditional_quad THEN block neupoint_end_conditional_quad
    (107) neupoint_conditional_quad -> .

    THEN            reduce using rule 107 (neupoint_conditional_quad -> .)

    neupoint_conditional_quad      shift and go to state 185

state 153

    (18) identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET . LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .

    LEFTSQRBRACKET  shift and go to state 186
    EQUALS          reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    PLUSEQUALS      reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    SUBSTRACTEQUALS reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    INCREMENT       reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DECREMENT       reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MULTIPLY        reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DIVIDE          reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MOD             reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    PLUS            reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MINUS           reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    RIGHTPARENTHESIS reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    COMMA           reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    COMPARISON      reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    GREATERHANOREQUAL reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    LESSTHANOREQUAL reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    GREATERTHAN     reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    LESSTHAN        reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DIFFERENT       reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    AND             reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    OR              reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    RIGHTSQRBRACKET reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    TO              reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    SEMICOLON       reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DO              reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)


state 154

    (79) function_call -> ID neupoint_search_function LEFTPARENTHESIS expresion_list . RIGHTPARENTHESIS

    RIGHTPARENTHESIS shift and go to state 187


state 155

    (80) expresion_list -> expresion . COMMA expresion_list
    (81) expresion_list -> expresion .

    COMMA           shift and go to state 188
    RIGHTPARENTHESIS reduce using rule 81 (expresion_list -> expresion .)


state 156

    (75) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion . RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end

    RIGHTPARENTHESIS shift and go to state 189


state 157

    (76) non_conditional -> FOR ID EQUALS exp . TO exp DO block

    TO              shift and go to state 190


state 158

    (13) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT . RIGHTSQRBRACKET

    RIGHTSQRBRACKET shift and go to state 191


state 159

    (26) function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block . neupoint_check_for_return neupoint_end_function
    (36) neupoint_check_for_return -> .

    MODULE          reduce using rule 36 (neupoint_check_for_return -> .)
    MAIN            reduce using rule 36 (neupoint_check_for_return -> .)

    neupoint_check_for_return      shift and go to state 192

state 160

    (27) function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return . neupoint_end_function
    (37) neupoint_end_function -> .

    MODULE          reduce using rule 37 (neupoint_end_function -> .)
    MAIN            reduce using rule 37 (neupoint_end_function -> .)

    neupoint_end_function          shift and go to state 193

state 161

    (28) parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS neupoint_add_parameters .

    VAR             reduce using rule 28 (parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS neupoint_add_parameters .)
    LEFTBRACKET     reduce using rule 28 (parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS neupoint_add_parameters .)


state 162

    (30) parameter -> data_type decla_identifier COMMA . parameter
    (30) parameter -> . data_type decla_identifier COMMA parameter
    (31) parameter -> . data_type decla_identifier
    (5) data_type -> . INT
    (6) data_type -> . FLOAT
    (7) data_type -> . CHAR

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19

    data_type                      shift and go to state 90
    parameter                      shift and go to state 194

state 163

    (60) assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion . neupoint_assignment_quad SEMICOLON
    (104) neupoint_assignment_quad -> .

    SEMICOLON       reduce using rule 104 (neupoint_assignment_quad -> .)

    neupoint_assignment_quad       shift and go to state 195

state 164

    (61) assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion . neupoint_assignment_quad SEMICOLON
    (104) neupoint_assignment_quad -> .

    SEMICOLON       reduce using rule 104 (neupoint_assignment_quad -> .)

    neupoint_assignment_quad       shift and go to state 196

state 165

    (62) assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion . neupoint_assignment_quad SEMICOLON
    (104) neupoint_assignment_quad -> .

    SEMICOLON       reduce using rule 104 (neupoint_assignment_quad -> .)

    neupoint_assignment_quad       shift and go to state 197

state 166

    (63) assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad . SEMICOLON

    SEMICOLON       shift and go to state 198


state 167

    (64) assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad . SEMICOLON

    SEMICOLON       shift and go to state 199


state 168

    (91) factor -> LEFTPARENTHESIS neupoint_add_wall expresion . neupoint_remove_wall RIGHTPARENTHESIS
    (103) neupoint_remove_wall -> .

    RIGHTPARENTHESIS reduce using rule 103 (neupoint_remove_wall -> .)

    neupoint_remove_wall           shift and go to state 200

state 169

    (77) function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .

    RETURN          reduce using rule 77 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    READ            reduce using rule 77 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    WRITE           reduce using rule 77 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    IF              reduce using rule 77 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    ID              reduce using rule 77 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 77 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    FOR             reduce using rule 77 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 77 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)


state 170

    (87) exp -> term neupoint_arithmetic_exp_quad exp_operator . neupoint_add_operator exp
    (97) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 97 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 97 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 97 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 97 (neupoint_add_operator -> .)
    ID              reduce using rule 97 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 201

state 171

    (44) exp_operator -> PLUS .

    LEFTPARENTHESIS reduce using rule 44 (exp_operator -> PLUS .)
    CTEINT          reduce using rule 44 (exp_operator -> PLUS .)
    CTEFLOAT        reduce using rule 44 (exp_operator -> PLUS .)
    CTECHAR         reduce using rule 44 (exp_operator -> PLUS .)
    ID              reduce using rule 44 (exp_operator -> PLUS .)


state 172

    (45) exp_operator -> MINUS .

    LEFTPARENTHESIS reduce using rule 45 (exp_operator -> MINUS .)
    CTEINT          reduce using rule 45 (exp_operator -> MINUS .)
    CTEFLOAT        reduce using rule 45 (exp_operator -> MINUS .)
    CTECHAR         reduce using rule 45 (exp_operator -> MINUS .)
    ID              reduce using rule 45 (exp_operator -> MINUS .)


state 173

    (89) term -> factor neupoint_arithmetic_term_quad term_operator . neupoint_add_operator term
    (97) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 97 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 97 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 97 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 97 (neupoint_add_operator -> .)
    ID              reduce using rule 97 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 202

state 174

    (46) term_operator -> MULTIPLY .

    LEFTPARENTHESIS reduce using rule 46 (term_operator -> MULTIPLY .)
    CTEINT          reduce using rule 46 (term_operator -> MULTIPLY .)
    CTEFLOAT        reduce using rule 46 (term_operator -> MULTIPLY .)
    CTECHAR         reduce using rule 46 (term_operator -> MULTIPLY .)
    ID              reduce using rule 46 (term_operator -> MULTIPLY .)


state 175

    (47) term_operator -> DIVIDE .

    LEFTPARENTHESIS reduce using rule 47 (term_operator -> DIVIDE .)
    CTEINT          reduce using rule 47 (term_operator -> DIVIDE .)
    CTEFLOAT        reduce using rule 47 (term_operator -> DIVIDE .)
    CTECHAR         reduce using rule 47 (term_operator -> DIVIDE .)
    ID              reduce using rule 47 (term_operator -> DIVIDE .)


state 176

    (48) term_operator -> MOD .

    LEFTPARENTHESIS reduce using rule 48 (term_operator -> MOD .)
    CTEINT          reduce using rule 48 (term_operator -> MOD .)
    CTEFLOAT        reduce using rule 48 (term_operator -> MOD .)
    CTECHAR         reduce using rule 48 (term_operator -> MOD .)
    ID              reduce using rule 48 (term_operator -> MOD .)


state 177

    (65) reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .

    RETURN          reduce using rule 65 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    READ            reduce using rule 65 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    WRITE           reduce using rule 65 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    IF              reduce using rule 65 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    ID              reduce using rule 65 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 65 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    FOR             reduce using rule 65 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 65 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)


state 178

    (16) ids_list -> identifier COMMA ids_list .

    RIGHTPARENTHESIS reduce using rule 16 (ids_list -> identifier COMMA ids_list .)


state 179

    (66) writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .

    RETURN          reduce using rule 66 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    READ            reduce using rule 66 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    WRITE           reduce using rule 66 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    IF              reduce using rule 66 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    ID              reduce using rule 66 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 66 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    FOR             reduce using rule 66 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 66 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)


state 180

    (67) writing_list -> CTESTRING COMMA writing_list .

    RIGHTPARENTHESIS reduce using rule 67 (writing_list -> CTESTRING COMMA writing_list .)


state 181

    (68) writing_list -> expresion COMMA writing_list .

    RIGHTPARENTHESIS reduce using rule 68 (writing_list -> expresion COMMA writing_list .)


state 182

    (82) expresion -> exp_relational AND neupoint_add_operator . expresion neupoint_logical_relational_opt
    (82) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (83) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational
    (85) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (86) exp_relational -> . exp
    (87) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (88) exp -> . term neupoint_arithmetic_exp_quad
    (89) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (90) term -> . factor neupoint_arithmetic_term_quad
    (91) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (92) factor -> . CTEINT neupoint_add_cte_operand
    (93) factor -> . CTEFLOAT neupoint_add_cte_operand
    (94) factor -> . CTECHAR neupoint_add_cte_operand
    (95) factor -> . function_call
    (96) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    exp_relational                 shift and go to state 113
    expresion                      shift and go to state 203
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 183

    (83) expresion -> exp_relational OR neupoint_add_operator . expresion neupoint_logical_relational_opt
    (82) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (83) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational
    (85) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (86) exp_relational -> . exp
    (87) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (88) exp -> . term neupoint_arithmetic_exp_quad
    (89) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (90) term -> . factor neupoint_arithmetic_term_quad
    (91) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (92) factor -> . CTEINT neupoint_add_cte_operand
    (93) factor -> . CTEFLOAT neupoint_add_cte_operand
    (94) factor -> . CTECHAR neupoint_add_cte_operand
    (95) factor -> . function_call
    (96) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    exp_relational                 shift and go to state 113
    expresion                      shift and go to state 204
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 184

    (85) exp_relational -> exp comparators neupoint_add_operator . exp neupoint_logical_relational_opt
    (87) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (88) exp -> . term neupoint_arithmetic_exp_quad
    (89) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (90) term -> . factor neupoint_arithmetic_term_quad
    (91) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (92) factor -> . CTEINT neupoint_add_cte_operand
    (93) factor -> . CTEFLOAT neupoint_add_cte_operand
    (94) factor -> . CTECHAR neupoint_add_cte_operand
    (95) factor -> . function_call
    (96) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    exp                            shift and go to state 205
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 185

    (71) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad . THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (72) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad . THEN block neupoint_end_conditional_quad

    THEN            shift and go to state 206


state 186

    (18) identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET . expresion RIGHTSQRBRACKET
    (82) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (83) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational
    (85) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (86) exp_relational -> . exp
    (87) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (88) exp -> . term neupoint_arithmetic_exp_quad
    (89) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (90) term -> . factor neupoint_arithmetic_term_quad
    (91) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (92) factor -> . CTEINT neupoint_add_cte_operand
    (93) factor -> . CTEFLOAT neupoint_add_cte_operand
    (94) factor -> . CTECHAR neupoint_add_cte_operand
    (95) factor -> . function_call
    (96) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    expresion                      shift and go to state 207
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 187

    (79) function_call -> ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .

    SEMICOLON       reduce using rule 79 (function_call -> ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    MULTIPLY        reduce using rule 79 (function_call -> ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    DIVIDE          reduce using rule 79 (function_call -> ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    MOD             reduce using rule 79 (function_call -> ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    PLUS            reduce using rule 79 (function_call -> ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    MINUS           reduce using rule 79 (function_call -> ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    RIGHTPARENTHESIS reduce using rule 79 (function_call -> ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    COMPARISON      reduce using rule 79 (function_call -> ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    GREATERHANOREQUAL reduce using rule 79 (function_call -> ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    LESSTHANOREQUAL reduce using rule 79 (function_call -> ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    GREATERTHAN     reduce using rule 79 (function_call -> ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    LESSTHAN        reduce using rule 79 (function_call -> ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    DIFFERENT       reduce using rule 79 (function_call -> ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    AND             reduce using rule 79 (function_call -> ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    OR              reduce using rule 79 (function_call -> ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    COMMA           reduce using rule 79 (function_call -> ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    RIGHTSQRBRACKET reduce using rule 79 (function_call -> ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    TO              reduce using rule 79 (function_call -> ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    DO              reduce using rule 79 (function_call -> ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)


state 188

    (80) expresion_list -> expresion COMMA . expresion_list
    (80) expresion_list -> . expresion COMMA expresion_list
    (81) expresion_list -> . expresion
    (82) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (83) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational
    (85) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (86) exp_relational -> . exp
    (87) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (88) exp -> . term neupoint_arithmetic_exp_quad
    (89) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (90) term -> . factor neupoint_arithmetic_term_quad
    (91) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (92) factor -> . CTEINT neupoint_add_cte_operand
    (93) factor -> . CTEFLOAT neupoint_add_cte_operand
    (94) factor -> . CTECHAR neupoint_add_cte_operand
    (95) factor -> . function_call
    (96) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    expresion                      shift and go to state 155
    expresion_list                 shift and go to state 208
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 189

    (75) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS . neupoint_conditional_quad DO block neupoint_while_end
    (107) neupoint_conditional_quad -> .

    DO              reduce using rule 107 (neupoint_conditional_quad -> .)

    neupoint_conditional_quad      shift and go to state 209

state 190

    (76) non_conditional -> FOR ID EQUALS exp TO . exp DO block
    (87) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (88) exp -> . term neupoint_arithmetic_exp_quad
    (89) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (90) term -> . factor neupoint_arithmetic_term_quad
    (91) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (92) factor -> . CTEINT neupoint_add_cte_operand
    (93) factor -> . CTEFLOAT neupoint_add_cte_operand
    (94) factor -> . CTECHAR neupoint_add_cte_operand
    (95) factor -> . function_call
    (96) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    exp                            shift and go to state 210
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 191

    (13) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .

    COMMA           reduce using rule 13 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)
    SEMICOLON       reduce using rule 13 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)
    RIGHTPARENTHESIS reduce using rule 13 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)


state 192

    (26) function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return . neupoint_end_function
    (37) neupoint_end_function -> .

    MODULE          reduce using rule 37 (neupoint_end_function -> .)
    MAIN            reduce using rule 37 (neupoint_end_function -> .)

    neupoint_end_function          shift and go to state 211

state 193

    (27) function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function .

    MODULE          reduce using rule 27 (function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function .)
    MAIN            reduce using rule 27 (function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function .)


state 194

    (30) parameter -> data_type decla_identifier COMMA parameter .

    RIGHTPARENTHESIS reduce using rule 30 (parameter -> data_type decla_identifier COMMA parameter .)


state 195

    (60) assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad . SEMICOLON

    SEMICOLON       shift and go to state 212


state 196

    (61) assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad . SEMICOLON

    SEMICOLON       shift and go to state 213


state 197

    (62) assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad . SEMICOLON

    SEMICOLON       shift and go to state 214


state 198

    (63) assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .

    RETURN          reduce using rule 63 (assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    READ            reduce using rule 63 (assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    WRITE           reduce using rule 63 (assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    IF              reduce using rule 63 (assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    ID              reduce using rule 63 (assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    WHILE           reduce using rule 63 (assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    FOR             reduce using rule 63 (assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    RIGHTBRACKET    reduce using rule 63 (assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)


state 199

    (64) assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .

    RETURN          reduce using rule 64 (assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    READ            reduce using rule 64 (assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    WRITE           reduce using rule 64 (assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    IF              reduce using rule 64 (assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    ID              reduce using rule 64 (assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    WHILE           reduce using rule 64 (assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    FOR             reduce using rule 64 (assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    RIGHTBRACKET    reduce using rule 64 (assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)


state 200

    (91) factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall . RIGHTPARENTHESIS

    RIGHTPARENTHESIS shift and go to state 215


state 201

    (87) exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator . exp
    (87) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (88) exp -> . term neupoint_arithmetic_exp_quad
    (89) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (90) term -> . factor neupoint_arithmetic_term_quad
    (91) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (92) factor -> . CTEINT neupoint_add_cte_operand
    (93) factor -> . CTEFLOAT neupoint_add_cte_operand
    (94) factor -> . CTECHAR neupoint_add_cte_operand
    (95) factor -> . function_call
    (96) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    term                           shift and go to state 99
    exp                            shift and go to state 216
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 202

    (89) term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator . term
    (89) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (90) term -> . factor neupoint_arithmetic_term_quad
    (91) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (92) factor -> . CTEINT neupoint_add_cte_operand
    (93) factor -> . CTEFLOAT neupoint_add_cte_operand
    (94) factor -> . CTECHAR neupoint_add_cte_operand
    (95) factor -> . function_call
    (96) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_search_function LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    factor                         shift and go to state 100
    term                           shift and go to state 217
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 203

    (82) expresion -> exp_relational AND neupoint_add_operator expresion . neupoint_logical_relational_opt
    (106) neupoint_logical_relational_opt -> .

    COMMA           reduce using rule 106 (neupoint_logical_relational_opt -> .)
    RIGHTPARENTHESIS reduce using rule 106 (neupoint_logical_relational_opt -> .)
    RIGHTSQRBRACKET reduce using rule 106 (neupoint_logical_relational_opt -> .)
    SEMICOLON       reduce using rule 106 (neupoint_logical_relational_opt -> .)

    neupoint_logical_relational_opt shift and go to state 218

state 204

    (83) expresion -> exp_relational OR neupoint_add_operator expresion . neupoint_logical_relational_opt
    (106) neupoint_logical_relational_opt -> .

    COMMA           reduce using rule 106 (neupoint_logical_relational_opt -> .)
    RIGHTPARENTHESIS reduce using rule 106 (neupoint_logical_relational_opt -> .)
    RIGHTSQRBRACKET reduce using rule 106 (neupoint_logical_relational_opt -> .)
    SEMICOLON       reduce using rule 106 (neupoint_logical_relational_opt -> .)

    neupoint_logical_relational_opt shift and go to state 219

state 205

    (85) exp_relational -> exp comparators neupoint_add_operator exp . neupoint_logical_relational_opt
    (106) neupoint_logical_relational_opt -> .

    AND             reduce using rule 106 (neupoint_logical_relational_opt -> .)
    OR              reduce using rule 106 (neupoint_logical_relational_opt -> .)
    COMMA           reduce using rule 106 (neupoint_logical_relational_opt -> .)
    RIGHTPARENTHESIS reduce using rule 106 (neupoint_logical_relational_opt -> .)
    RIGHTSQRBRACKET reduce using rule 106 (neupoint_logical_relational_opt -> .)
    SEMICOLON       reduce using rule 106 (neupoint_logical_relational_opt -> .)

    neupoint_logical_relational_opt shift and go to state 220

state 206

    (71) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN . block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (72) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN . block neupoint_end_conditional_quad
    (49) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (50) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 221

state 207

    (18) identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion . RIGHTSQRBRACKET

    RIGHTSQRBRACKET shift and go to state 222


state 208

    (80) expresion_list -> expresion COMMA expresion_list .

    RIGHTPARENTHESIS reduce using rule 80 (expresion_list -> expresion COMMA expresion_list .)


state 209

    (75) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad . DO block neupoint_while_end

    DO              shift and go to state 223


state 210

    (76) non_conditional -> FOR ID EQUALS exp TO exp . DO block

    DO              shift and go to state 224


state 211

    (26) function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function .

    MODULE          reduce using rule 26 (function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function .)
    MAIN            reduce using rule 26 (function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function .)


state 212

    (60) assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .

    RETURN          reduce using rule 60 (assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    READ            reduce using rule 60 (assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    WRITE           reduce using rule 60 (assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    IF              reduce using rule 60 (assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    ID              reduce using rule 60 (assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    WHILE           reduce using rule 60 (assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    FOR             reduce using rule 60 (assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    RIGHTBRACKET    reduce using rule 60 (assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)


state 213

    (61) assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .

    RETURN          reduce using rule 61 (assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    READ            reduce using rule 61 (assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    WRITE           reduce using rule 61 (assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    IF              reduce using rule 61 (assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    ID              reduce using rule 61 (assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    WHILE           reduce using rule 61 (assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    FOR             reduce using rule 61 (assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    RIGHTBRACKET    reduce using rule 61 (assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)


state 214

    (62) assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .

    RETURN          reduce using rule 62 (assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    READ            reduce using rule 62 (assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    WRITE           reduce using rule 62 (assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    IF              reduce using rule 62 (assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    ID              reduce using rule 62 (assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    WHILE           reduce using rule 62 (assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    FOR             reduce using rule 62 (assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    RIGHTBRACKET    reduce using rule 62 (assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)


state 215

    (91) factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .

    MULTIPLY        reduce using rule 91 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    DIVIDE          reduce using rule 91 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    MOD             reduce using rule 91 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    PLUS            reduce using rule 91 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    MINUS           reduce using rule 91 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    RIGHTPARENTHESIS reduce using rule 91 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    COMPARISON      reduce using rule 91 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    GREATERHANOREQUAL reduce using rule 91 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    LESSTHANOREQUAL reduce using rule 91 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    GREATERTHAN     reduce using rule 91 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    LESSTHAN        reduce using rule 91 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    DIFFERENT       reduce using rule 91 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    AND             reduce using rule 91 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    OR              reduce using rule 91 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    COMMA           reduce using rule 91 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    RIGHTSQRBRACKET reduce using rule 91 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    TO              reduce using rule 91 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    SEMICOLON       reduce using rule 91 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    DO              reduce using rule 91 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)


state 216

    (87) exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .

    RIGHTPARENTHESIS reduce using rule 87 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    COMPARISON      reduce using rule 87 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    GREATERHANOREQUAL reduce using rule 87 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    LESSTHANOREQUAL reduce using rule 87 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    GREATERTHAN     reduce using rule 87 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    LESSTHAN        reduce using rule 87 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    DIFFERENT       reduce using rule 87 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    AND             reduce using rule 87 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    OR              reduce using rule 87 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    COMMA           reduce using rule 87 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    RIGHTSQRBRACKET reduce using rule 87 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    TO              reduce using rule 87 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    SEMICOLON       reduce using rule 87 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    DO              reduce using rule 87 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)


state 217

    (89) term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .

    PLUS            reduce using rule 89 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    MINUS           reduce using rule 89 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    RIGHTPARENTHESIS reduce using rule 89 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    COMPARISON      reduce using rule 89 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    GREATERHANOREQUAL reduce using rule 89 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    LESSTHANOREQUAL reduce using rule 89 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    GREATERTHAN     reduce using rule 89 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    LESSTHAN        reduce using rule 89 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    DIFFERENT       reduce using rule 89 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    AND             reduce using rule 89 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    OR              reduce using rule 89 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    COMMA           reduce using rule 89 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    RIGHTSQRBRACKET reduce using rule 89 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    TO              reduce using rule 89 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    SEMICOLON       reduce using rule 89 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    DO              reduce using rule 89 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)


state 218

    (82) expresion -> exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt .

    COMMA           reduce using rule 82 (expresion -> exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt .)
    RIGHTPARENTHESIS reduce using rule 82 (expresion -> exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt .)
    RIGHTSQRBRACKET reduce using rule 82 (expresion -> exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt .)
    SEMICOLON       reduce using rule 82 (expresion -> exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt .)


state 219

    (83) expresion -> exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt .

    COMMA           reduce using rule 83 (expresion -> exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt .)
    RIGHTPARENTHESIS reduce using rule 83 (expresion -> exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt .)
    RIGHTSQRBRACKET reduce using rule 83 (expresion -> exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt .)
    SEMICOLON       reduce using rule 83 (expresion -> exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt .)


state 220

    (85) exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .

    AND             reduce using rule 85 (exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .)
    OR              reduce using rule 85 (exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .)
    COMMA           reduce using rule 85 (exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .)
    RIGHTPARENTHESIS reduce using rule 85 (exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .)
    RIGHTSQRBRACKET reduce using rule 85 (exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .)
    SEMICOLON       reduce using rule 85 (exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .)


state 221

    (71) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block . ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (72) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block . neupoint_end_conditional_quad
    (109) neupoint_end_conditional_quad -> .

    ELSE            shift and go to state 225
    RETURN          reduce using rule 109 (neupoint_end_conditional_quad -> .)
    READ            reduce using rule 109 (neupoint_end_conditional_quad -> .)
    WRITE           reduce using rule 109 (neupoint_end_conditional_quad -> .)
    IF              reduce using rule 109 (neupoint_end_conditional_quad -> .)
    ID              reduce using rule 109 (neupoint_end_conditional_quad -> .)
    WHILE           reduce using rule 109 (neupoint_end_conditional_quad -> .)
    FOR             reduce using rule 109 (neupoint_end_conditional_quad -> .)
    RIGHTBRACKET    reduce using rule 109 (neupoint_end_conditional_quad -> .)

    neupoint_end_conditional_quad  shift and go to state 226

state 222

    (18) identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .

    EQUALS          reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    PLUSEQUALS      reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    SUBSTRACTEQUALS reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    INCREMENT       reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DECREMENT       reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MULTIPLY        reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DIVIDE          reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MOD             reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    PLUS            reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MINUS           reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    RIGHTPARENTHESIS reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    COMMA           reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    COMPARISON      reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    GREATERHANOREQUAL reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    LESSTHANOREQUAL reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    GREATERTHAN     reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    LESSTHAN        reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DIFFERENT       reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    AND             reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    OR              reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    RIGHTSQRBRACKET reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    TO              reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    SEMICOLON       reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DO              reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)


state 223

    (75) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO . block neupoint_while_end
    (49) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (50) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 227

state 224

    (76) non_conditional -> FOR ID EQUALS exp TO exp DO . block
    (49) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (50) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 228

state 225

    (71) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE . neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (108) neupoint_else_conditional_quad -> .

    LEFTBRACKET     reduce using rule 108 (neupoint_else_conditional_quad -> .)

    neupoint_else_conditional_quad shift and go to state 229

state 226

    (72) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .

    RETURN          reduce using rule 72 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    READ            reduce using rule 72 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    WRITE           reduce using rule 72 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    IF              reduce using rule 72 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    ID              reduce using rule 72 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    WHILE           reduce using rule 72 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    FOR             reduce using rule 72 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    RIGHTBRACKET    reduce using rule 72 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)


state 227

    (75) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block . neupoint_while_end
    (111) neupoint_while_end -> .

    RETURN          reduce using rule 111 (neupoint_while_end -> .)
    READ            reduce using rule 111 (neupoint_while_end -> .)
    WRITE           reduce using rule 111 (neupoint_while_end -> .)
    IF              reduce using rule 111 (neupoint_while_end -> .)
    ID              reduce using rule 111 (neupoint_while_end -> .)
    WHILE           reduce using rule 111 (neupoint_while_end -> .)
    FOR             reduce using rule 111 (neupoint_while_end -> .)
    RIGHTBRACKET    reduce using rule 111 (neupoint_while_end -> .)

    neupoint_while_end             shift and go to state 230

state 228

    (76) non_conditional -> FOR ID EQUALS exp TO exp DO block .

    RETURN          reduce using rule 76 (non_conditional -> FOR ID EQUALS exp TO exp DO block .)
    READ            reduce using rule 76 (non_conditional -> FOR ID EQUALS exp TO exp DO block .)
    WRITE           reduce using rule 76 (non_conditional -> FOR ID EQUALS exp TO exp DO block .)
    IF              reduce using rule 76 (non_conditional -> FOR ID EQUALS exp TO exp DO block .)
    ID              reduce using rule 76 (non_conditional -> FOR ID EQUALS exp TO exp DO block .)
    WHILE           reduce using rule 76 (non_conditional -> FOR ID EQUALS exp TO exp DO block .)
    FOR             reduce using rule 76 (non_conditional -> FOR ID EQUALS exp TO exp DO block .)
    RIGHTBRACKET    reduce using rule 76 (non_conditional -> FOR ID EQUALS exp TO exp DO block .)


state 229

    (71) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad . block neupoint_end_conditional_quad
    (49) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (50) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 231

state 230

    (75) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .

    RETURN          reduce using rule 75 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    READ            reduce using rule 75 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    WRITE           reduce using rule 75 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    IF              reduce using rule 75 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    ID              reduce using rule 75 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    WHILE           reduce using rule 75 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    FOR             reduce using rule 75 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    RIGHTBRACKET    reduce using rule 75 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)


state 231

    (71) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block . neupoint_end_conditional_quad
    (109) neupoint_end_conditional_quad -> .

    RETURN          reduce using rule 109 (neupoint_end_conditional_quad -> .)
    READ            reduce using rule 109 (neupoint_end_conditional_quad -> .)
    WRITE           reduce using rule 109 (neupoint_end_conditional_quad -> .)
    IF              reduce using rule 109 (neupoint_end_conditional_quad -> .)
    ID              reduce using rule 109 (neupoint_end_conditional_quad -> .)
    WHILE           reduce using rule 109 (neupoint_end_conditional_quad -> .)
    FOR             reduce using rule 109 (neupoint_end_conditional_quad -> .)
    RIGHTBRACKET    reduce using rule 109 (neupoint_end_conditional_quad -> .)

    neupoint_end_conditional_quad  shift and go to state 232

state 232

    (71) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .

    RETURN          reduce using rule 71 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    READ            reduce using rule 71 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    WRITE           reduce using rule 71 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    IF              reduce using rule 71 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    ID              reduce using rule 71 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    WHILE           reduce using rule 71 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    FOR             reduce using rule 71 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    RIGHTBRACKET    reduce using rule 71 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)

