Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
Rule 2     program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
Rule 3     program -> PROGRAM ID SEMICOLON functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
Rule 4     program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
Rule 5     data_type -> INT
Rule 6     data_type -> FLOAT
Rule 7     data_type -> CHAR
Rule 8     vars -> VAR vars_lists neupoint_add_vars
Rule 9     vars_lists -> data_type decla_ids_list SEMICOLON vars_lists
Rule 10    vars_lists -> data_type decla_ids_list SEMICOLON
Rule 11    decla_ids_list -> decla_identifier COMMA decla_ids_list
Rule 12    decla_ids_list -> decla_identifier
Rule 13    decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
Rule 14    decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
Rule 15    decla_identifier -> ID
Rule 16    identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
Rule 17    identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
Rule 18    identifier -> ID
Rule 19    neupoint_add_vars -> <empty>
Rule 20    return_type -> data_type
Rule 21    return_type -> VOID
Rule 22    functions_list -> function functions_list
Rule 23    functions_list -> function
Rule 24    function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
Rule 25    function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function
Rule 26    parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS neupoint_add_parameters
Rule 27    parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS
Rule 28    parameter -> data_type decla_identifier COMMA parameter
Rule 29    parameter -> data_type decla_identifier
Rule 30    neupoint_add_function -> <empty>
Rule 31    neupoint_add_parameters -> <empty>
Rule 32    neupoint_back_global -> <empty>
Rule 33    neupoint_start_function -> <empty>
Rule 34    neupoint_check_for_return -> <empty>
Rule 35    neupoint_end_function -> <empty>
Rule 36    comparators -> COMPARISON
Rule 37    comparators -> GREATERHANOREQUAL
Rule 38    comparators -> LESSTHANOREQUAL
Rule 39    comparators -> GREATERTHAN
Rule 40    comparators -> LESSTHAN
Rule 41    comparators -> DIFFERENT
Rule 42    exp_operator -> PLUS
Rule 43    exp_operator -> MINUS
Rule 44    term_operator -> MULTIPLY
Rule 45    term_operator -> DIVIDE
Rule 46    term_operator -> MOD
Rule 47    block -> LEFTBRACKET statutes_list RIGHTBRACKET
Rule 48    block -> LEFTBRACKET RIGHTBRACKET
Rule 49    statutes_list -> statute statutes_list
Rule 50    statutes_list -> statute
Rule 51    statute -> assignment
Rule 52    statute -> function_return
Rule 53    statute -> reading
Rule 54    statute -> writing
Rule 55    statute -> decision
Rule 56    statute -> loop
Rule 57    statute -> function_call_void
Rule 58    assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
Rule 59    assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
Rule 60    assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
Rule 61    assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
Rule 62    assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
Rule 63    reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON
Rule 64    reading_list -> identifier neupoint_add_operand COMMA reading_list
Rule 65    reading_list -> identifier neupoint_add_operand
Rule 66    writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON
Rule 67    writing_list -> CTESTRING neupoint_add_cte_operand neupoint_write_quad COMMA writing_list
Rule 68    writing_list -> expresion neupoint_write_quad COMMA writing_list
Rule 69    writing_list -> CTESTRING neupoint_add_cte_operand neupoint_write_quad
Rule 70    writing_list -> expresion neupoint_write_quad
Rule 71    decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
Rule 72    decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad
Rule 73    loop -> conditional
Rule 74    loop -> non_conditional
Rule 75    conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end
Rule 76    non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end
Rule 77    function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON
Rule 78    function_call_void -> function_call SEMICOLON
Rule 79    function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
Rule 80    function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
Rule 81    ags_list -> expresion neupoint_validate_args COMMA ags_list
Rule 82    ags_list -> expresion neupoint_validate_args
Rule 83    expresion -> exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
Rule 84    expresion -> exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
Rule 85    expresion -> exp_relational
Rule 86    exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
Rule 87    exp_relational -> exp
Rule 88    exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
Rule 89    exp -> term neupoint_arithmetic_exp_quad
Rule 90    term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
Rule 91    term -> factor neupoint_arithmetic_term_quad
Rule 92    factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
Rule 93    factor -> CTEINT neupoint_add_cte_operand
Rule 94    factor -> CTEFLOAT neupoint_add_cte_operand
Rule 95    factor -> CTECHAR neupoint_add_cte_operand
Rule 96    factor -> function_call
Rule 97    factor -> identifier neupoint_add_operand
Rule 98    neupoint_add_operator -> <empty>
Rule 99    neupoint_add_operand -> <empty>
Rule 100   neupoint_add_cte_operand -> <empty>
Rule 101   neupoint_arithmetic_exp_quad -> <empty>
Rule 102   neupoint_arithmetic_term_quad -> <empty>
Rule 103   neupoint_add_wall -> <empty>
Rule 104   neupoint_remove_wall -> <empty>
Rule 105   neupoint_assignment_quad -> <empty>
Rule 106   neupoint_assignment_single_quad -> <empty>
Rule 107   neupoint_logical_relational_opt -> <empty>
Rule 108   neupoint_conditional_quad -> <empty>
Rule 109   neupoint_else_conditional_quad -> <empty>
Rule 110   neupoint_end_conditional_quad -> <empty>
Rule 111   neupoint_while_start -> <empty>
Rule 112   neupoint_while_end -> <empty>
Rule 113   neupoint_validate_function -> <empty>
Rule 114   neupoint_era_quad -> <empty>
Rule 115   neupoint_validate_args -> <empty>
Rule 116   neupoint_validate_num_args -> <empty>
Rule 117   neupoint_gosub_quad -> <empty>
Rule 118   neupoint_write_quad -> <empty>
Rule 119   neupoint_add_operand_integer -> <empty>
Rule 120   neupoint_add_operand_for -> <empty>
Rule 121   neupoint_comparison_quad -> <empty>
Rule 122   neupoint_for_end -> <empty>

Terminals, with rules where they appear

AND                  : 83
CHAR                 : 7
COMMA                : 11 28 64 67 68 81
COMPARISON           : 36
CTECHAR              : 95
CTEFLOAT             : 94
CTEINT               : 13 13 14 93
CTESTRING            : 67 69
DECREMENT            : 62
DIFFERENT            : 41
DIVIDE               : 45
DO                   : 75 76
ELSE                 : 71
EQUALS               : 58 76
FLOAT                : 6
FOR                  : 76
GREATERHANOREQUAL    : 37
GREATERTHAN          : 39
ID                   : 1 2 3 4 13 14 15 16 17 18 24 25 76 79 80
IF                   : 71 72
INCREMENT            : 61
INT                  : 5
LEFTBRACKET          : 47 48
LEFTPARENTHESIS      : 1 2 3 4 26 27 63 66 71 72 75 77 79 80 92
LEFTSQRBRACKET       : 13 13 14 16 16 17
LESSTHAN             : 40
LESSTHANOREQUAL      : 38
MAIN                 : 1 2 3 4
MINUS                : 43
MOD                  : 46
MODULE               : 24 25
MULTIPLY             : 44
OR                   : 84
PLUS                 : 42
PLUSEQUALS           : 59
PROGRAM              : 1 2 3 4
READ                 : 63
RETURN               : 77
RIGHTBRACKET         : 47 48
RIGHTPARENTHESIS     : 1 2 3 4 26 27 63 66 71 72 75 77 79 80 92
RIGHTSQRBRACKET      : 13 13 14 16 16 17
SEMICOLON            : 1 2 3 4 9 10 58 59 60 61 62 63 66 77 78
SUBSTRACTEQUALS      : 60
THEN                 : 71 72
TO                   : 76
VAR                  : 8
VOID                 : 21
WHILE                : 75
WRITE                : 66
error                : 

Nonterminals, with rules where they appear

ags_list             : 79 81
assignment           : 51
block                : 1 2 3 4 24 25 71 71 72 75 76
comparators          : 86
conditional          : 73
data_type            : 9 10 20 28 29
decision             : 55
decla_identifier     : 11 12 28 29
decla_ids_list       : 9 10 11
exp                  : 76 76 77 86 86 87 88
exp_operator         : 88
exp_relational       : 83 84 85
expresion            : 16 16 17 58 59 60 68 70 71 72 75 81 82 83 84 92
factor               : 90 91
function             : 22 23
function_call        : 78 96
function_call_void   : 57
function_return      : 52
functions_list       : 1 3 22
identifier           : 58 59 60 61 62 64 65 97
loop                 : 56
neupoint_add_cte_operand : 67 69 93 94 95
neupoint_add_function : 24 25
neupoint_add_operand : 58 59 60 61 62 64 65 97
neupoint_add_operand_for : 76
neupoint_add_operand_integer : 76
neupoint_add_operator : 58 59 60 61 62 76 83 84 86 88 90
neupoint_add_parameters : 26
neupoint_add_vars    : 8
neupoint_add_wall    : 79 80 92
neupoint_arithmetic_exp_quad : 88 89
neupoint_arithmetic_term_quad : 90 91
neupoint_assignment_quad : 58 59 60 76
neupoint_assignment_single_quad : 61 62
neupoint_back_global : 1 3
neupoint_check_for_return : 24 25
neupoint_comparison_quad : 76
neupoint_conditional_quad : 71 72 75
neupoint_else_conditional_quad : 71
neupoint_end_conditional_quad : 71 72
neupoint_end_function : 24 25
neupoint_era_quad    : 79 80
neupoint_for_end     : 76
neupoint_gosub_quad  : 79 80
neupoint_logical_relational_opt : 83 84 86
neupoint_remove_wall : 92
neupoint_start_function : 24 25
neupoint_validate_args : 81 82
neupoint_validate_function : 79 80
neupoint_validate_num_args : 79 80
neupoint_while_end   : 75
neupoint_while_start : 75
neupoint_write_quad  : 67 68 69 70
non_conditional      : 74
parameter            : 26 28
parameters_list      : 24 25
program              : 0
reading              : 53
reading_list         : 63 64
return_type          : 24 25
statute              : 49 50
statutes_list        : 47 49
term                 : 88 89 90
term_operator        : 90
vars                 : 1 2 24
vars_lists           : 8 9
writing              : 54
writing_list         : 66 67 68

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (2) program -> . PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (3) program -> . PROGRAM ID SEMICOLON functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (4) program -> . PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (2) program -> PROGRAM . ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (3) program -> PROGRAM . ID SEMICOLON functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (4) program -> PROGRAM . ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (2) program -> PROGRAM ID . SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (3) program -> PROGRAM ID . SEMICOLON functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (4) program -> PROGRAM ID . SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (2) program -> PROGRAM ID SEMICOLON . vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (3) program -> PROGRAM ID SEMICOLON . functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (4) program -> PROGRAM ID SEMICOLON . MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (8) vars -> . VAR vars_lists neupoint_add_vars
    (22) functions_list -> . function functions_list
    (23) functions_list -> . function
    (24) function -> . MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (25) function -> . MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function

    MAIN            shift and go to state 7
    VAR             shift and go to state 8
    MODULE          shift and go to state 10

    vars                           shift and go to state 5
    functions_list                 shift and go to state 6
    function                       shift and go to state 9

state 5

    (1) program -> PROGRAM ID SEMICOLON vars . functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (2) program -> PROGRAM ID SEMICOLON vars . MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (22) functions_list -> . function functions_list
    (23) functions_list -> . function
    (24) function -> . MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (25) function -> . MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function

    MAIN            shift and go to state 12
    MODULE          shift and go to state 10

    functions_list                 shift and go to state 11
    function                       shift and go to state 9

state 6

    (3) program -> PROGRAM ID SEMICOLON functions_list . neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (32) neupoint_back_global -> .

    MAIN            reduce using rule 32 (neupoint_back_global -> .)

    neupoint_back_global           shift and go to state 13

state 7

    (4) program -> PROGRAM ID SEMICOLON MAIN . LEFTPARENTHESIS RIGHTPARENTHESIS block

    LEFTPARENTHESIS shift and go to state 14


state 8

    (8) vars -> VAR . vars_lists neupoint_add_vars
    (9) vars_lists -> . data_type decla_ids_list SEMICOLON vars_lists
    (10) vars_lists -> . data_type decla_ids_list SEMICOLON
    (5) data_type -> . INT
    (6) data_type -> . FLOAT
    (7) data_type -> . CHAR

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19

    vars_lists                     shift and go to state 15
    data_type                      shift and go to state 16

state 9

    (22) functions_list -> function . functions_list
    (23) functions_list -> function .
    (22) functions_list -> . function functions_list
    (23) functions_list -> . function
    (24) function -> . MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (25) function -> . MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function

    MAIN            reduce using rule 23 (functions_list -> function .)
    MODULE          shift and go to state 10

    function                       shift and go to state 9
    functions_list                 shift and go to state 20

state 10

    (24) function -> MODULE . return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (25) function -> MODULE . return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (20) return_type -> . data_type
    (21) return_type -> . VOID
    (5) data_type -> . INT
    (6) data_type -> . FLOAT
    (7) data_type -> . CHAR

    VOID            shift and go to state 23
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19

    return_type                    shift and go to state 21
    data_type                      shift and go to state 22

state 11

    (1) program -> PROGRAM ID SEMICOLON vars functions_list . neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (32) neupoint_back_global -> .

    MAIN            reduce using rule 32 (neupoint_back_global -> .)

    neupoint_back_global           shift and go to state 24

state 12

    (2) program -> PROGRAM ID SEMICOLON vars MAIN . LEFTPARENTHESIS RIGHTPARENTHESIS block

    LEFTPARENTHESIS shift and go to state 25


state 13

    (3) program -> PROGRAM ID SEMICOLON functions_list neupoint_back_global . MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block

    MAIN            shift and go to state 26


state 14

    (4) program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS . RIGHTPARENTHESIS block

    RIGHTPARENTHESIS shift and go to state 27


state 15

    (8) vars -> VAR vars_lists . neupoint_add_vars
    (19) neupoint_add_vars -> .

    MAIN            reduce using rule 19 (neupoint_add_vars -> .)
    MODULE          reduce using rule 19 (neupoint_add_vars -> .)
    LEFTBRACKET     reduce using rule 19 (neupoint_add_vars -> .)

    neupoint_add_vars              shift and go to state 28

state 16

    (9) vars_lists -> data_type . decla_ids_list SEMICOLON vars_lists
    (10) vars_lists -> data_type . decla_ids_list SEMICOLON
    (11) decla_ids_list -> . decla_identifier COMMA decla_ids_list
    (12) decla_ids_list -> . decla_identifier
    (13) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (15) decla_identifier -> . ID

    ID              shift and go to state 31

    decla_ids_list                 shift and go to state 29
    decla_identifier               shift and go to state 30

state 17

    (5) data_type -> INT .

    ID              reduce using rule 5 (data_type -> INT .)


state 18

    (6) data_type -> FLOAT .

    ID              reduce using rule 6 (data_type -> FLOAT .)


state 19

    (7) data_type -> CHAR .

    ID              reduce using rule 7 (data_type -> CHAR .)


state 20

    (22) functions_list -> function functions_list .

    MAIN            reduce using rule 22 (functions_list -> function functions_list .)


state 21

    (24) function -> MODULE return_type . ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (25) function -> MODULE return_type . ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function

    ID              shift and go to state 32


state 22

    (20) return_type -> data_type .

    ID              reduce using rule 20 (return_type -> data_type .)


state 23

    (21) return_type -> VOID .

    ID              reduce using rule 21 (return_type -> VOID .)


state 24

    (1) program -> PROGRAM ID SEMICOLON vars functions_list neupoint_back_global . MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block

    MAIN            shift and go to state 33


state 25

    (2) program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS . RIGHTPARENTHESIS block

    RIGHTPARENTHESIS shift and go to state 34


state 26

    (3) program -> PROGRAM ID SEMICOLON functions_list neupoint_back_global MAIN . LEFTPARENTHESIS RIGHTPARENTHESIS block

    LEFTPARENTHESIS shift and go to state 35


state 27

    (4) program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS . block
    (47) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (48) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 36

state 28

    (8) vars -> VAR vars_lists neupoint_add_vars .

    MAIN            reduce using rule 8 (vars -> VAR vars_lists neupoint_add_vars .)
    MODULE          reduce using rule 8 (vars -> VAR vars_lists neupoint_add_vars .)
    LEFTBRACKET     reduce using rule 8 (vars -> VAR vars_lists neupoint_add_vars .)


state 29

    (9) vars_lists -> data_type decla_ids_list . SEMICOLON vars_lists
    (10) vars_lists -> data_type decla_ids_list . SEMICOLON

    SEMICOLON       shift and go to state 38


state 30

    (11) decla_ids_list -> decla_identifier . COMMA decla_ids_list
    (12) decla_ids_list -> decla_identifier .

    COMMA           shift and go to state 39
    SEMICOLON       reduce using rule 12 (decla_ids_list -> decla_identifier .)


state 31

    (13) decla_identifier -> ID . LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> ID . LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (15) decla_identifier -> ID .

    LEFTSQRBRACKET  shift and go to state 40
    COMMA           reduce using rule 15 (decla_identifier -> ID .)
    SEMICOLON       reduce using rule 15 (decla_identifier -> ID .)
    RIGHTPARENTHESIS reduce using rule 15 (decla_identifier -> ID .)


state 32

    (24) function -> MODULE return_type ID . neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (25) function -> MODULE return_type ID . neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (30) neupoint_add_function -> .

    LEFTPARENTHESIS reduce using rule 30 (neupoint_add_function -> .)

    neupoint_add_function          shift and go to state 41

state 33

    (1) program -> PROGRAM ID SEMICOLON vars functions_list neupoint_back_global MAIN . LEFTPARENTHESIS RIGHTPARENTHESIS block

    LEFTPARENTHESIS shift and go to state 42


state 34

    (2) program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS . block
    (47) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (48) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 43

state 35

    (3) program -> PROGRAM ID SEMICOLON functions_list neupoint_back_global MAIN LEFTPARENTHESIS . RIGHTPARENTHESIS block

    RIGHTPARENTHESIS shift and go to state 44


state 36

    (4) program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .

    $end            reduce using rule 4 (program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .)


state 37

    (47) block -> LEFTBRACKET . statutes_list RIGHTBRACKET
    (48) block -> LEFTBRACKET . RIGHTBRACKET
    (49) statutes_list -> . statute statutes_list
    (50) statutes_list -> . statute
    (51) statute -> . assignment
    (52) statute -> . function_return
    (53) statute -> . reading
    (54) statute -> . writing
    (55) statute -> . decision
    (56) statute -> . loop
    (57) statute -> . function_call_void
    (58) assignment -> . identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (59) assignment -> . identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (60) assignment -> . identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (61) assignment -> . identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (62) assignment -> . identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (77) function_return -> . RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON
    (63) reading -> . READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON
    (66) writing -> . WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON
    (71) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (72) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad
    (73) loop -> . conditional
    (74) loop -> . non_conditional
    (78) function_call_void -> . function_call SEMICOLON
    (16) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> . ID
    (75) conditional -> . WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end
    (76) non_conditional -> . FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end
    (79) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad

    RIGHTBRACKET    shift and go to state 46
    RETURN          shift and go to state 56
    READ            shift and go to state 57
    WRITE           shift and go to state 58
    IF              shift and go to state 59
    ID              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65

    statutes_list                  shift and go to state 45
    statute                        shift and go to state 47
    assignment                     shift and go to state 48
    function_return                shift and go to state 49
    reading                        shift and go to state 50
    writing                        shift and go to state 51
    decision                       shift and go to state 52
    loop                           shift and go to state 53
    function_call_void             shift and go to state 54
    identifier                     shift and go to state 55
    conditional                    shift and go to state 60
    non_conditional                shift and go to state 61
    function_call                  shift and go to state 62

state 38

    (9) vars_lists -> data_type decla_ids_list SEMICOLON . vars_lists
    (10) vars_lists -> data_type decla_ids_list SEMICOLON .
    (9) vars_lists -> . data_type decla_ids_list SEMICOLON vars_lists
    (10) vars_lists -> . data_type decla_ids_list SEMICOLON
    (5) data_type -> . INT
    (6) data_type -> . FLOAT
    (7) data_type -> . CHAR

    MAIN            reduce using rule 10 (vars_lists -> data_type decla_ids_list SEMICOLON .)
    MODULE          reduce using rule 10 (vars_lists -> data_type decla_ids_list SEMICOLON .)
    LEFTBRACKET     reduce using rule 10 (vars_lists -> data_type decla_ids_list SEMICOLON .)
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19

    data_type                      shift and go to state 16
    vars_lists                     shift and go to state 66

state 39

    (11) decla_ids_list -> decla_identifier COMMA . decla_ids_list
    (11) decla_ids_list -> . decla_identifier COMMA decla_ids_list
    (12) decla_ids_list -> . decla_identifier
    (13) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (15) decla_identifier -> . ID

    ID              shift and go to state 31

    decla_identifier               shift and go to state 30
    decla_ids_list                 shift and go to state 67

state 40

    (13) decla_identifier -> ID LEFTSQRBRACKET . CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> ID LEFTSQRBRACKET . CTEINT RIGHTSQRBRACKET

    CTEINT          shift and go to state 68


state 41

    (24) function -> MODULE return_type ID neupoint_add_function . parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (25) function -> MODULE return_type ID neupoint_add_function . parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (26) parameters_list -> . LEFTPARENTHESIS parameter RIGHTPARENTHESIS neupoint_add_parameters
    (27) parameters_list -> . LEFTPARENTHESIS RIGHTPARENTHESIS

    LEFTPARENTHESIS shift and go to state 70

    parameters_list                shift and go to state 69

state 42

    (1) program -> PROGRAM ID SEMICOLON vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS . RIGHTPARENTHESIS block

    RIGHTPARENTHESIS shift and go to state 71


state 43

    (2) program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .

    $end            reduce using rule 2 (program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .)


state 44

    (3) program -> PROGRAM ID SEMICOLON functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS . block
    (47) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (48) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 72

state 45

    (47) block -> LEFTBRACKET statutes_list . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 73


state 46

    (48) block -> LEFTBRACKET RIGHTBRACKET .

    $end            reduce using rule 48 (block -> LEFTBRACKET RIGHTBRACKET .)
    MODULE          reduce using rule 48 (block -> LEFTBRACKET RIGHTBRACKET .)
    MAIN            reduce using rule 48 (block -> LEFTBRACKET RIGHTBRACKET .)
    ELSE            reduce using rule 48 (block -> LEFTBRACKET RIGHTBRACKET .)
    RETURN          reduce using rule 48 (block -> LEFTBRACKET RIGHTBRACKET .)
    READ            reduce using rule 48 (block -> LEFTBRACKET RIGHTBRACKET .)
    WRITE           reduce using rule 48 (block -> LEFTBRACKET RIGHTBRACKET .)
    IF              reduce using rule 48 (block -> LEFTBRACKET RIGHTBRACKET .)
    ID              reduce using rule 48 (block -> LEFTBRACKET RIGHTBRACKET .)
    WHILE           reduce using rule 48 (block -> LEFTBRACKET RIGHTBRACKET .)
    FOR             reduce using rule 48 (block -> LEFTBRACKET RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 48 (block -> LEFTBRACKET RIGHTBRACKET .)


state 47

    (49) statutes_list -> statute . statutes_list
    (50) statutes_list -> statute .
    (49) statutes_list -> . statute statutes_list
    (50) statutes_list -> . statute
    (51) statute -> . assignment
    (52) statute -> . function_return
    (53) statute -> . reading
    (54) statute -> . writing
    (55) statute -> . decision
    (56) statute -> . loop
    (57) statute -> . function_call_void
    (58) assignment -> . identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (59) assignment -> . identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (60) assignment -> . identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (61) assignment -> . identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (62) assignment -> . identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (77) function_return -> . RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON
    (63) reading -> . READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON
    (66) writing -> . WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON
    (71) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (72) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad
    (73) loop -> . conditional
    (74) loop -> . non_conditional
    (78) function_call_void -> . function_call SEMICOLON
    (16) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> . ID
    (75) conditional -> . WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end
    (76) non_conditional -> . FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end
    (79) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad

    RIGHTBRACKET    reduce using rule 50 (statutes_list -> statute .)
    RETURN          shift and go to state 56
    READ            shift and go to state 57
    WRITE           shift and go to state 58
    IF              shift and go to state 59
    ID              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65

    statute                        shift and go to state 47
    statutes_list                  shift and go to state 74
    assignment                     shift and go to state 48
    function_return                shift and go to state 49
    reading                        shift and go to state 50
    writing                        shift and go to state 51
    decision                       shift and go to state 52
    loop                           shift and go to state 53
    function_call_void             shift and go to state 54
    identifier                     shift and go to state 55
    conditional                    shift and go to state 60
    non_conditional                shift and go to state 61
    function_call                  shift and go to state 62

state 48

    (51) statute -> assignment .

    RETURN          reduce using rule 51 (statute -> assignment .)
    READ            reduce using rule 51 (statute -> assignment .)
    WRITE           reduce using rule 51 (statute -> assignment .)
    IF              reduce using rule 51 (statute -> assignment .)
    ID              reduce using rule 51 (statute -> assignment .)
    WHILE           reduce using rule 51 (statute -> assignment .)
    FOR             reduce using rule 51 (statute -> assignment .)
    RIGHTBRACKET    reduce using rule 51 (statute -> assignment .)


state 49

    (52) statute -> function_return .

    RETURN          reduce using rule 52 (statute -> function_return .)
    READ            reduce using rule 52 (statute -> function_return .)
    WRITE           reduce using rule 52 (statute -> function_return .)
    IF              reduce using rule 52 (statute -> function_return .)
    ID              reduce using rule 52 (statute -> function_return .)
    WHILE           reduce using rule 52 (statute -> function_return .)
    FOR             reduce using rule 52 (statute -> function_return .)
    RIGHTBRACKET    reduce using rule 52 (statute -> function_return .)


state 50

    (53) statute -> reading .

    RETURN          reduce using rule 53 (statute -> reading .)
    READ            reduce using rule 53 (statute -> reading .)
    WRITE           reduce using rule 53 (statute -> reading .)
    IF              reduce using rule 53 (statute -> reading .)
    ID              reduce using rule 53 (statute -> reading .)
    WHILE           reduce using rule 53 (statute -> reading .)
    FOR             reduce using rule 53 (statute -> reading .)
    RIGHTBRACKET    reduce using rule 53 (statute -> reading .)


state 51

    (54) statute -> writing .

    RETURN          reduce using rule 54 (statute -> writing .)
    READ            reduce using rule 54 (statute -> writing .)
    WRITE           reduce using rule 54 (statute -> writing .)
    IF              reduce using rule 54 (statute -> writing .)
    ID              reduce using rule 54 (statute -> writing .)
    WHILE           reduce using rule 54 (statute -> writing .)
    FOR             reduce using rule 54 (statute -> writing .)
    RIGHTBRACKET    reduce using rule 54 (statute -> writing .)


state 52

    (55) statute -> decision .

    RETURN          reduce using rule 55 (statute -> decision .)
    READ            reduce using rule 55 (statute -> decision .)
    WRITE           reduce using rule 55 (statute -> decision .)
    IF              reduce using rule 55 (statute -> decision .)
    ID              reduce using rule 55 (statute -> decision .)
    WHILE           reduce using rule 55 (statute -> decision .)
    FOR             reduce using rule 55 (statute -> decision .)
    RIGHTBRACKET    reduce using rule 55 (statute -> decision .)


state 53

    (56) statute -> loop .

    RETURN          reduce using rule 56 (statute -> loop .)
    READ            reduce using rule 56 (statute -> loop .)
    WRITE           reduce using rule 56 (statute -> loop .)
    IF              reduce using rule 56 (statute -> loop .)
    ID              reduce using rule 56 (statute -> loop .)
    WHILE           reduce using rule 56 (statute -> loop .)
    FOR             reduce using rule 56 (statute -> loop .)
    RIGHTBRACKET    reduce using rule 56 (statute -> loop .)


state 54

    (57) statute -> function_call_void .

    RETURN          reduce using rule 57 (statute -> function_call_void .)
    READ            reduce using rule 57 (statute -> function_call_void .)
    WRITE           reduce using rule 57 (statute -> function_call_void .)
    IF              reduce using rule 57 (statute -> function_call_void .)
    ID              reduce using rule 57 (statute -> function_call_void .)
    WHILE           reduce using rule 57 (statute -> function_call_void .)
    FOR             reduce using rule 57 (statute -> function_call_void .)
    RIGHTBRACKET    reduce using rule 57 (statute -> function_call_void .)


state 55

    (58) assignment -> identifier . neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (59) assignment -> identifier . neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (60) assignment -> identifier . neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (61) assignment -> identifier . neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (62) assignment -> identifier . neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (99) neupoint_add_operand -> .

    EQUALS          reduce using rule 99 (neupoint_add_operand -> .)
    PLUSEQUALS      reduce using rule 99 (neupoint_add_operand -> .)
    SUBSTRACTEQUALS reduce using rule 99 (neupoint_add_operand -> .)
    INCREMENT       reduce using rule 99 (neupoint_add_operand -> .)
    DECREMENT       reduce using rule 99 (neupoint_add_operand -> .)

    neupoint_add_operand           shift and go to state 75

state 56

    (77) function_return -> RETURN . LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON

    LEFTPARENTHESIS shift and go to state 76


state 57

    (63) reading -> READ . LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON

    LEFTPARENTHESIS shift and go to state 77


state 58

    (66) writing -> WRITE . LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON

    LEFTPARENTHESIS shift and go to state 78


state 59

    (71) decision -> IF . LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (72) decision -> IF . LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad

    LEFTPARENTHESIS shift and go to state 79


state 60

    (73) loop -> conditional .

    RETURN          reduce using rule 73 (loop -> conditional .)
    READ            reduce using rule 73 (loop -> conditional .)
    WRITE           reduce using rule 73 (loop -> conditional .)
    IF              reduce using rule 73 (loop -> conditional .)
    ID              reduce using rule 73 (loop -> conditional .)
    WHILE           reduce using rule 73 (loop -> conditional .)
    FOR             reduce using rule 73 (loop -> conditional .)
    RIGHTBRACKET    reduce using rule 73 (loop -> conditional .)


state 61

    (74) loop -> non_conditional .

    RETURN          reduce using rule 74 (loop -> non_conditional .)
    READ            reduce using rule 74 (loop -> non_conditional .)
    WRITE           reduce using rule 74 (loop -> non_conditional .)
    IF              reduce using rule 74 (loop -> non_conditional .)
    ID              reduce using rule 74 (loop -> non_conditional .)
    WHILE           reduce using rule 74 (loop -> non_conditional .)
    FOR             reduce using rule 74 (loop -> non_conditional .)
    RIGHTBRACKET    reduce using rule 74 (loop -> non_conditional .)


state 62

    (78) function_call_void -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 80


state 63

    (16) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> ID .
    (79) function_call -> ID . neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> ID . neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (113) neupoint_validate_function -> .

    LEFTSQRBRACKET  shift and go to state 81
    EQUALS          reduce using rule 18 (identifier -> ID .)
    PLUSEQUALS      reduce using rule 18 (identifier -> ID .)
    SUBSTRACTEQUALS reduce using rule 18 (identifier -> ID .)
    INCREMENT       reduce using rule 18 (identifier -> ID .)
    DECREMENT       reduce using rule 18 (identifier -> ID .)
    LEFTPARENTHESIS reduce using rule 113 (neupoint_validate_function -> .)

    neupoint_validate_function     shift and go to state 82

state 64

    (75) conditional -> WHILE . neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end
    (111) neupoint_while_start -> .

    LEFTPARENTHESIS reduce using rule 111 (neupoint_while_start -> .)

    neupoint_while_start           shift and go to state 83

state 65

    (76) non_conditional -> FOR . ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end

    ID              shift and go to state 84


state 66

    (9) vars_lists -> data_type decla_ids_list SEMICOLON vars_lists .

    MAIN            reduce using rule 9 (vars_lists -> data_type decla_ids_list SEMICOLON vars_lists .)
    MODULE          reduce using rule 9 (vars_lists -> data_type decla_ids_list SEMICOLON vars_lists .)
    LEFTBRACKET     reduce using rule 9 (vars_lists -> data_type decla_ids_list SEMICOLON vars_lists .)


state 67

    (11) decla_ids_list -> decla_identifier COMMA decla_ids_list .

    SEMICOLON       reduce using rule 11 (decla_ids_list -> decla_identifier COMMA decla_ids_list .)


state 68

    (13) decla_identifier -> ID LEFTSQRBRACKET CTEINT . RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> ID LEFTSQRBRACKET CTEINT . RIGHTSQRBRACKET

    RIGHTSQRBRACKET shift and go to state 85


state 69

    (24) function -> MODULE return_type ID neupoint_add_function parameters_list . vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (25) function -> MODULE return_type ID neupoint_add_function parameters_list . neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (8) vars -> . VAR vars_lists neupoint_add_vars
    (33) neupoint_start_function -> .

    VAR             shift and go to state 8
    LEFTBRACKET     reduce using rule 33 (neupoint_start_function -> .)

    vars                           shift and go to state 86
    neupoint_start_function        shift and go to state 87

state 70

    (26) parameters_list -> LEFTPARENTHESIS . parameter RIGHTPARENTHESIS neupoint_add_parameters
    (27) parameters_list -> LEFTPARENTHESIS . RIGHTPARENTHESIS
    (28) parameter -> . data_type decla_identifier COMMA parameter
    (29) parameter -> . data_type decla_identifier
    (5) data_type -> . INT
    (6) data_type -> . FLOAT
    (7) data_type -> . CHAR

    RIGHTPARENTHESIS shift and go to state 89
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19

    parameter                      shift and go to state 88
    data_type                      shift and go to state 90

state 71

    (1) program -> PROGRAM ID SEMICOLON vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS . block
    (47) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (48) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 91

state 72

    (3) program -> PROGRAM ID SEMICOLON functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .

    $end            reduce using rule 3 (program -> PROGRAM ID SEMICOLON functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .)


state 73

    (47) block -> LEFTBRACKET statutes_list RIGHTBRACKET .

    $end            reduce using rule 47 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    MODULE          reduce using rule 47 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    MAIN            reduce using rule 47 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    ELSE            reduce using rule 47 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    RETURN          reduce using rule 47 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    READ            reduce using rule 47 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    WRITE           reduce using rule 47 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    IF              reduce using rule 47 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    ID              reduce using rule 47 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    WHILE           reduce using rule 47 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    FOR             reduce using rule 47 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 47 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)


state 74

    (49) statutes_list -> statute statutes_list .

    RIGHTBRACKET    reduce using rule 49 (statutes_list -> statute statutes_list .)


state 75

    (58) assignment -> identifier neupoint_add_operand . EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (59) assignment -> identifier neupoint_add_operand . PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (60) assignment -> identifier neupoint_add_operand . SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (61) assignment -> identifier neupoint_add_operand . INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (62) assignment -> identifier neupoint_add_operand . DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON

    EQUALS          shift and go to state 92
    PLUSEQUALS      shift and go to state 93
    SUBSTRACTEQUALS shift and go to state 94
    INCREMENT       shift and go to state 95
    DECREMENT       shift and go to state 96


state 76

    (77) function_return -> RETURN LEFTPARENTHESIS . exp RIGHTPARENTHESIS SEMICOLON
    (88) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (89) exp -> . term neupoint_arithmetic_exp_quad
    (90) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (91) term -> . factor neupoint_arithmetic_term_quad
    (92) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (93) factor -> . CTEINT neupoint_add_cte_operand
    (94) factor -> . CTEFLOAT neupoint_add_cte_operand
    (95) factor -> . CTECHAR neupoint_add_cte_operand
    (96) factor -> . function_call
    (97) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (16) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 77

    (63) reading -> READ LEFTPARENTHESIS . reading_list RIGHTPARENTHESIS SEMICOLON
    (64) reading_list -> . identifier neupoint_add_operand COMMA reading_list
    (65) reading_list -> . identifier neupoint_add_operand
    (16) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> . ID

    ID              shift and go to state 109

    reading_list                   shift and go to state 107
    identifier                     shift and go to state 108

state 78

    (66) writing -> WRITE LEFTPARENTHESIS . writing_list RIGHTPARENTHESIS SEMICOLON
    (67) writing_list -> . CTESTRING neupoint_add_cte_operand neupoint_write_quad COMMA writing_list
    (68) writing_list -> . expresion neupoint_write_quad COMMA writing_list
    (69) writing_list -> . CTESTRING neupoint_add_cte_operand neupoint_write_quad
    (70) writing_list -> . expresion neupoint_write_quad
    (83) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (85) expresion -> . exp_relational
    (86) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (87) exp_relational -> . exp
    (88) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (89) exp -> . term neupoint_arithmetic_exp_quad
    (90) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (91) term -> . factor neupoint_arithmetic_term_quad
    (92) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (93) factor -> . CTEINT neupoint_add_cte_operand
    (94) factor -> . CTEFLOAT neupoint_add_cte_operand
    (95) factor -> . CTECHAR neupoint_add_cte_operand
    (96) factor -> . function_call
    (97) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (16) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> . ID

    CTESTRING       shift and go to state 111
    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    writing_list                   shift and go to state 110
    expresion                      shift and go to state 112
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 79

    (71) decision -> IF LEFTPARENTHESIS . expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (72) decision -> IF LEFTPARENTHESIS . expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad
    (83) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (85) expresion -> . exp_relational
    (86) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (87) exp_relational -> . exp
    (88) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (89) exp -> . term neupoint_arithmetic_exp_quad
    (90) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (91) term -> . factor neupoint_arithmetic_term_quad
    (92) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (93) factor -> . CTEINT neupoint_add_cte_operand
    (94) factor -> . CTEFLOAT neupoint_add_cte_operand
    (95) factor -> . CTECHAR neupoint_add_cte_operand
    (96) factor -> . function_call
    (97) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (16) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    expresion                      shift and go to state 115
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 80

    (78) function_call_void -> function_call SEMICOLON .

    RETURN          reduce using rule 78 (function_call_void -> function_call SEMICOLON .)
    READ            reduce using rule 78 (function_call_void -> function_call SEMICOLON .)
    WRITE           reduce using rule 78 (function_call_void -> function_call SEMICOLON .)
    IF              reduce using rule 78 (function_call_void -> function_call SEMICOLON .)
    ID              reduce using rule 78 (function_call_void -> function_call SEMICOLON .)
    WHILE           reduce using rule 78 (function_call_void -> function_call SEMICOLON .)
    FOR             reduce using rule 78 (function_call_void -> function_call SEMICOLON .)
    RIGHTBRACKET    reduce using rule 78 (function_call_void -> function_call SEMICOLON .)


state 81

    (16) identifier -> ID LEFTSQRBRACKET . expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> ID LEFTSQRBRACKET . expresion RIGHTSQRBRACKET
    (83) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (85) expresion -> . exp_relational
    (86) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (87) exp_relational -> . exp
    (88) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (89) exp -> . term neupoint_arithmetic_exp_quad
    (90) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (91) term -> . factor neupoint_arithmetic_term_quad
    (92) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (93) factor -> . CTEINT neupoint_add_cte_operand
    (94) factor -> . CTEFLOAT neupoint_add_cte_operand
    (95) factor -> . CTECHAR neupoint_add_cte_operand
    (96) factor -> . function_call
    (97) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (16) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    expresion                      shift and go to state 116
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 82

    (79) function_call -> ID neupoint_validate_function . LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> ID neupoint_validate_function . LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad

    LEFTPARENTHESIS shift and go to state 117


state 83

    (75) conditional -> WHILE neupoint_while_start . LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end

    LEFTPARENTHESIS shift and go to state 118


state 84

    (76) non_conditional -> FOR ID . neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end
    (119) neupoint_add_operand_integer -> .

    EQUALS          reduce using rule 119 (neupoint_add_operand_integer -> .)

    neupoint_add_operand_integer   shift and go to state 119

state 85

    (13) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET . LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .

    LEFTSQRBRACKET  shift and go to state 120
    COMMA           reduce using rule 14 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)
    SEMICOLON       reduce using rule 14 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)
    RIGHTPARENTHESIS reduce using rule 14 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)


state 86

    (24) function -> MODULE return_type ID neupoint_add_function parameters_list vars . neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (33) neupoint_start_function -> .

    LEFTBRACKET     reduce using rule 33 (neupoint_start_function -> .)

    neupoint_start_function        shift and go to state 121

state 87

    (25) function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function . block neupoint_check_for_return neupoint_end_function
    (47) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (48) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 122

state 88

    (26) parameters_list -> LEFTPARENTHESIS parameter . RIGHTPARENTHESIS neupoint_add_parameters

    RIGHTPARENTHESIS shift and go to state 123


state 89

    (27) parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS .

    VAR             reduce using rule 27 (parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS .)
    LEFTBRACKET     reduce using rule 27 (parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS .)


state 90

    (28) parameter -> data_type . decla_identifier COMMA parameter
    (29) parameter -> data_type . decla_identifier
    (13) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (15) decla_identifier -> . ID

    ID              shift and go to state 31

    decla_identifier               shift and go to state 124

state 91

    (1) program -> PROGRAM ID SEMICOLON vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .)


state 92

    (58) assignment -> identifier neupoint_add_operand EQUALS . neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (98) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 98 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 98 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 98 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 98 (neupoint_add_operator -> .)
    ID              reduce using rule 98 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 125

state 93

    (59) assignment -> identifier neupoint_add_operand PLUSEQUALS . neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (98) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 98 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 98 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 98 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 98 (neupoint_add_operator -> .)
    ID              reduce using rule 98 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 126

state 94

    (60) assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS . neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (98) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 98 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 98 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 98 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 98 (neupoint_add_operator -> .)
    ID              reduce using rule 98 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 127

state 95

    (61) assignment -> identifier neupoint_add_operand INCREMENT . neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (98) neupoint_add_operator -> .

    SEMICOLON       reduce using rule 98 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 128

state 96

    (62) assignment -> identifier neupoint_add_operand DECREMENT . neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (98) neupoint_add_operator -> .

    SEMICOLON       reduce using rule 98 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 129

state 97

    (92) factor -> LEFTPARENTHESIS . neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (103) neupoint_add_wall -> .

    LEFTPARENTHESIS reduce using rule 103 (neupoint_add_wall -> .)
    CTEINT          reduce using rule 103 (neupoint_add_wall -> .)
    CTEFLOAT        reduce using rule 103 (neupoint_add_wall -> .)
    CTECHAR         reduce using rule 103 (neupoint_add_wall -> .)
    ID              reduce using rule 103 (neupoint_add_wall -> .)

    neupoint_add_wall              shift and go to state 130

state 98

    (77) function_return -> RETURN LEFTPARENTHESIS exp . RIGHTPARENTHESIS SEMICOLON

    RIGHTPARENTHESIS shift and go to state 131


state 99

    (88) exp -> term . neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (89) exp -> term . neupoint_arithmetic_exp_quad
    (101) neupoint_arithmetic_exp_quad -> .

    PLUS            reduce using rule 101 (neupoint_arithmetic_exp_quad -> .)
    MINUS           reduce using rule 101 (neupoint_arithmetic_exp_quad -> .)
    RIGHTPARENTHESIS reduce using rule 101 (neupoint_arithmetic_exp_quad -> .)
    COMPARISON      reduce using rule 101 (neupoint_arithmetic_exp_quad -> .)
    GREATERHANOREQUAL reduce using rule 101 (neupoint_arithmetic_exp_quad -> .)
    LESSTHANOREQUAL reduce using rule 101 (neupoint_arithmetic_exp_quad -> .)
    GREATERTHAN     reduce using rule 101 (neupoint_arithmetic_exp_quad -> .)
    LESSTHAN        reduce using rule 101 (neupoint_arithmetic_exp_quad -> .)
    DIFFERENT       reduce using rule 101 (neupoint_arithmetic_exp_quad -> .)
    AND             reduce using rule 101 (neupoint_arithmetic_exp_quad -> .)
    OR              reduce using rule 101 (neupoint_arithmetic_exp_quad -> .)
    COMMA           reduce using rule 101 (neupoint_arithmetic_exp_quad -> .)
    RIGHTSQRBRACKET reduce using rule 101 (neupoint_arithmetic_exp_quad -> .)
    SEMICOLON       reduce using rule 101 (neupoint_arithmetic_exp_quad -> .)
    TO              reduce using rule 101 (neupoint_arithmetic_exp_quad -> .)
    DO              reduce using rule 101 (neupoint_arithmetic_exp_quad -> .)

    neupoint_arithmetic_exp_quad   shift and go to state 132

state 100

    (90) term -> factor . neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (91) term -> factor . neupoint_arithmetic_term_quad
    (102) neupoint_arithmetic_term_quad -> .

    MULTIPLY        reduce using rule 102 (neupoint_arithmetic_term_quad -> .)
    DIVIDE          reduce using rule 102 (neupoint_arithmetic_term_quad -> .)
    MOD             reduce using rule 102 (neupoint_arithmetic_term_quad -> .)
    PLUS            reduce using rule 102 (neupoint_arithmetic_term_quad -> .)
    MINUS           reduce using rule 102 (neupoint_arithmetic_term_quad -> .)
    RIGHTPARENTHESIS reduce using rule 102 (neupoint_arithmetic_term_quad -> .)
    COMPARISON      reduce using rule 102 (neupoint_arithmetic_term_quad -> .)
    GREATERHANOREQUAL reduce using rule 102 (neupoint_arithmetic_term_quad -> .)
    LESSTHANOREQUAL reduce using rule 102 (neupoint_arithmetic_term_quad -> .)
    GREATERTHAN     reduce using rule 102 (neupoint_arithmetic_term_quad -> .)
    LESSTHAN        reduce using rule 102 (neupoint_arithmetic_term_quad -> .)
    DIFFERENT       reduce using rule 102 (neupoint_arithmetic_term_quad -> .)
    AND             reduce using rule 102 (neupoint_arithmetic_term_quad -> .)
    OR              reduce using rule 102 (neupoint_arithmetic_term_quad -> .)
    COMMA           reduce using rule 102 (neupoint_arithmetic_term_quad -> .)
    RIGHTSQRBRACKET reduce using rule 102 (neupoint_arithmetic_term_quad -> .)
    SEMICOLON       reduce using rule 102 (neupoint_arithmetic_term_quad -> .)
    TO              reduce using rule 102 (neupoint_arithmetic_term_quad -> .)
    DO              reduce using rule 102 (neupoint_arithmetic_term_quad -> .)

    neupoint_arithmetic_term_quad  shift and go to state 133

state 101

    (93) factor -> CTEINT . neupoint_add_cte_operand
    (100) neupoint_add_cte_operand -> .

    MULTIPLY        reduce using rule 100 (neupoint_add_cte_operand -> .)
    DIVIDE          reduce using rule 100 (neupoint_add_cte_operand -> .)
    MOD             reduce using rule 100 (neupoint_add_cte_operand -> .)
    PLUS            reduce using rule 100 (neupoint_add_cte_operand -> .)
    MINUS           reduce using rule 100 (neupoint_add_cte_operand -> .)
    RIGHTPARENTHESIS reduce using rule 100 (neupoint_add_cte_operand -> .)
    COMPARISON      reduce using rule 100 (neupoint_add_cte_operand -> .)
    GREATERHANOREQUAL reduce using rule 100 (neupoint_add_cte_operand -> .)
    LESSTHANOREQUAL reduce using rule 100 (neupoint_add_cte_operand -> .)
    GREATERTHAN     reduce using rule 100 (neupoint_add_cte_operand -> .)
    LESSTHAN        reduce using rule 100 (neupoint_add_cte_operand -> .)
    DIFFERENT       reduce using rule 100 (neupoint_add_cte_operand -> .)
    AND             reduce using rule 100 (neupoint_add_cte_operand -> .)
    OR              reduce using rule 100 (neupoint_add_cte_operand -> .)
    COMMA           reduce using rule 100 (neupoint_add_cte_operand -> .)
    RIGHTSQRBRACKET reduce using rule 100 (neupoint_add_cte_operand -> .)
    SEMICOLON       reduce using rule 100 (neupoint_add_cte_operand -> .)
    TO              reduce using rule 100 (neupoint_add_cte_operand -> .)
    DO              reduce using rule 100 (neupoint_add_cte_operand -> .)

    neupoint_add_cte_operand       shift and go to state 134

state 102

    (94) factor -> CTEFLOAT . neupoint_add_cte_operand
    (100) neupoint_add_cte_operand -> .

    MULTIPLY        reduce using rule 100 (neupoint_add_cte_operand -> .)
    DIVIDE          reduce using rule 100 (neupoint_add_cte_operand -> .)
    MOD             reduce using rule 100 (neupoint_add_cte_operand -> .)
    PLUS            reduce using rule 100 (neupoint_add_cte_operand -> .)
    MINUS           reduce using rule 100 (neupoint_add_cte_operand -> .)
    RIGHTPARENTHESIS reduce using rule 100 (neupoint_add_cte_operand -> .)
    COMPARISON      reduce using rule 100 (neupoint_add_cte_operand -> .)
    GREATERHANOREQUAL reduce using rule 100 (neupoint_add_cte_operand -> .)
    LESSTHANOREQUAL reduce using rule 100 (neupoint_add_cte_operand -> .)
    GREATERTHAN     reduce using rule 100 (neupoint_add_cte_operand -> .)
    LESSTHAN        reduce using rule 100 (neupoint_add_cte_operand -> .)
    DIFFERENT       reduce using rule 100 (neupoint_add_cte_operand -> .)
    AND             reduce using rule 100 (neupoint_add_cte_operand -> .)
    OR              reduce using rule 100 (neupoint_add_cte_operand -> .)
    COMMA           reduce using rule 100 (neupoint_add_cte_operand -> .)
    RIGHTSQRBRACKET reduce using rule 100 (neupoint_add_cte_operand -> .)
    SEMICOLON       reduce using rule 100 (neupoint_add_cte_operand -> .)
    TO              reduce using rule 100 (neupoint_add_cte_operand -> .)
    DO              reduce using rule 100 (neupoint_add_cte_operand -> .)

    neupoint_add_cte_operand       shift and go to state 135

state 103

    (95) factor -> CTECHAR . neupoint_add_cte_operand
    (100) neupoint_add_cte_operand -> .

    MULTIPLY        reduce using rule 100 (neupoint_add_cte_operand -> .)
    DIVIDE          reduce using rule 100 (neupoint_add_cte_operand -> .)
    MOD             reduce using rule 100 (neupoint_add_cte_operand -> .)
    PLUS            reduce using rule 100 (neupoint_add_cte_operand -> .)
    MINUS           reduce using rule 100 (neupoint_add_cte_operand -> .)
    RIGHTPARENTHESIS reduce using rule 100 (neupoint_add_cte_operand -> .)
    COMPARISON      reduce using rule 100 (neupoint_add_cte_operand -> .)
    GREATERHANOREQUAL reduce using rule 100 (neupoint_add_cte_operand -> .)
    LESSTHANOREQUAL reduce using rule 100 (neupoint_add_cte_operand -> .)
    GREATERTHAN     reduce using rule 100 (neupoint_add_cte_operand -> .)
    LESSTHAN        reduce using rule 100 (neupoint_add_cte_operand -> .)
    DIFFERENT       reduce using rule 100 (neupoint_add_cte_operand -> .)
    AND             reduce using rule 100 (neupoint_add_cte_operand -> .)
    OR              reduce using rule 100 (neupoint_add_cte_operand -> .)
    COMMA           reduce using rule 100 (neupoint_add_cte_operand -> .)
    RIGHTSQRBRACKET reduce using rule 100 (neupoint_add_cte_operand -> .)
    SEMICOLON       reduce using rule 100 (neupoint_add_cte_operand -> .)
    TO              reduce using rule 100 (neupoint_add_cte_operand -> .)
    DO              reduce using rule 100 (neupoint_add_cte_operand -> .)

    neupoint_add_cte_operand       shift and go to state 136

state 104

    (96) factor -> function_call .

    MULTIPLY        reduce using rule 96 (factor -> function_call .)
    DIVIDE          reduce using rule 96 (factor -> function_call .)
    MOD             reduce using rule 96 (factor -> function_call .)
    PLUS            reduce using rule 96 (factor -> function_call .)
    MINUS           reduce using rule 96 (factor -> function_call .)
    RIGHTPARENTHESIS reduce using rule 96 (factor -> function_call .)
    COMPARISON      reduce using rule 96 (factor -> function_call .)
    GREATERHANOREQUAL reduce using rule 96 (factor -> function_call .)
    LESSTHANOREQUAL reduce using rule 96 (factor -> function_call .)
    GREATERTHAN     reduce using rule 96 (factor -> function_call .)
    LESSTHAN        reduce using rule 96 (factor -> function_call .)
    DIFFERENT       reduce using rule 96 (factor -> function_call .)
    AND             reduce using rule 96 (factor -> function_call .)
    OR              reduce using rule 96 (factor -> function_call .)
    COMMA           reduce using rule 96 (factor -> function_call .)
    RIGHTSQRBRACKET reduce using rule 96 (factor -> function_call .)
    SEMICOLON       reduce using rule 96 (factor -> function_call .)
    TO              reduce using rule 96 (factor -> function_call .)
    DO              reduce using rule 96 (factor -> function_call .)


state 105

    (97) factor -> identifier . neupoint_add_operand
    (99) neupoint_add_operand -> .

    MULTIPLY        reduce using rule 99 (neupoint_add_operand -> .)
    DIVIDE          reduce using rule 99 (neupoint_add_operand -> .)
    MOD             reduce using rule 99 (neupoint_add_operand -> .)
    PLUS            reduce using rule 99 (neupoint_add_operand -> .)
    MINUS           reduce using rule 99 (neupoint_add_operand -> .)
    RIGHTPARENTHESIS reduce using rule 99 (neupoint_add_operand -> .)
    COMPARISON      reduce using rule 99 (neupoint_add_operand -> .)
    GREATERHANOREQUAL reduce using rule 99 (neupoint_add_operand -> .)
    LESSTHANOREQUAL reduce using rule 99 (neupoint_add_operand -> .)
    GREATERTHAN     reduce using rule 99 (neupoint_add_operand -> .)
    LESSTHAN        reduce using rule 99 (neupoint_add_operand -> .)
    DIFFERENT       reduce using rule 99 (neupoint_add_operand -> .)
    AND             reduce using rule 99 (neupoint_add_operand -> .)
    OR              reduce using rule 99 (neupoint_add_operand -> .)
    COMMA           reduce using rule 99 (neupoint_add_operand -> .)
    RIGHTSQRBRACKET reduce using rule 99 (neupoint_add_operand -> .)
    SEMICOLON       reduce using rule 99 (neupoint_add_operand -> .)
    TO              reduce using rule 99 (neupoint_add_operand -> .)
    DO              reduce using rule 99 (neupoint_add_operand -> .)

    neupoint_add_operand           shift and go to state 137

state 106

    (79) function_call -> ID . neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> ID . neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (16) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> ID .
    (113) neupoint_validate_function -> .

    LEFTSQRBRACKET  shift and go to state 81
    MULTIPLY        reduce using rule 18 (identifier -> ID .)
    DIVIDE          reduce using rule 18 (identifier -> ID .)
    MOD             reduce using rule 18 (identifier -> ID .)
    PLUS            reduce using rule 18 (identifier -> ID .)
    MINUS           reduce using rule 18 (identifier -> ID .)
    RIGHTPARENTHESIS reduce using rule 18 (identifier -> ID .)
    COMPARISON      reduce using rule 18 (identifier -> ID .)
    GREATERHANOREQUAL reduce using rule 18 (identifier -> ID .)
    LESSTHANOREQUAL reduce using rule 18 (identifier -> ID .)
    GREATERTHAN     reduce using rule 18 (identifier -> ID .)
    LESSTHAN        reduce using rule 18 (identifier -> ID .)
    DIFFERENT       reduce using rule 18 (identifier -> ID .)
    AND             reduce using rule 18 (identifier -> ID .)
    OR              reduce using rule 18 (identifier -> ID .)
    COMMA           reduce using rule 18 (identifier -> ID .)
    RIGHTSQRBRACKET reduce using rule 18 (identifier -> ID .)
    SEMICOLON       reduce using rule 18 (identifier -> ID .)
    TO              reduce using rule 18 (identifier -> ID .)
    DO              reduce using rule 18 (identifier -> ID .)
    LEFTPARENTHESIS reduce using rule 113 (neupoint_validate_function -> .)

    neupoint_validate_function     shift and go to state 82

state 107

    (63) reading -> READ LEFTPARENTHESIS reading_list . RIGHTPARENTHESIS SEMICOLON

    RIGHTPARENTHESIS shift and go to state 138


state 108

    (64) reading_list -> identifier . neupoint_add_operand COMMA reading_list
    (65) reading_list -> identifier . neupoint_add_operand
    (99) neupoint_add_operand -> .

    COMMA           reduce using rule 99 (neupoint_add_operand -> .)
    RIGHTPARENTHESIS reduce using rule 99 (neupoint_add_operand -> .)

    neupoint_add_operand           shift and go to state 139

state 109

    (16) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> ID .

    LEFTSQRBRACKET  shift and go to state 81
    COMMA           reduce using rule 18 (identifier -> ID .)
    RIGHTPARENTHESIS reduce using rule 18 (identifier -> ID .)


state 110

    (66) writing -> WRITE LEFTPARENTHESIS writing_list . RIGHTPARENTHESIS SEMICOLON

    RIGHTPARENTHESIS shift and go to state 140


state 111

    (67) writing_list -> CTESTRING . neupoint_add_cte_operand neupoint_write_quad COMMA writing_list
    (69) writing_list -> CTESTRING . neupoint_add_cte_operand neupoint_write_quad
    (100) neupoint_add_cte_operand -> .

    COMMA           reduce using rule 100 (neupoint_add_cte_operand -> .)
    RIGHTPARENTHESIS reduce using rule 100 (neupoint_add_cte_operand -> .)

    neupoint_add_cte_operand       shift and go to state 141

state 112

    (68) writing_list -> expresion . neupoint_write_quad COMMA writing_list
    (70) writing_list -> expresion . neupoint_write_quad
    (118) neupoint_write_quad -> .

    COMMA           reduce using rule 118 (neupoint_write_quad -> .)
    RIGHTPARENTHESIS reduce using rule 118 (neupoint_write_quad -> .)

    neupoint_write_quad            shift and go to state 142

state 113

    (83) expresion -> exp_relational . AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> exp_relational . OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (85) expresion -> exp_relational .

    AND             shift and go to state 143
    OR              shift and go to state 144
    COMMA           reduce using rule 85 (expresion -> exp_relational .)
    RIGHTPARENTHESIS reduce using rule 85 (expresion -> exp_relational .)
    RIGHTSQRBRACKET reduce using rule 85 (expresion -> exp_relational .)
    SEMICOLON       reduce using rule 85 (expresion -> exp_relational .)


state 114

    (86) exp_relational -> exp . comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (87) exp_relational -> exp .
    (36) comparators -> . COMPARISON
    (37) comparators -> . GREATERHANOREQUAL
    (38) comparators -> . LESSTHANOREQUAL
    (39) comparators -> . GREATERTHAN
    (40) comparators -> . LESSTHAN
    (41) comparators -> . DIFFERENT

    AND             reduce using rule 87 (exp_relational -> exp .)
    OR              reduce using rule 87 (exp_relational -> exp .)
    COMMA           reduce using rule 87 (exp_relational -> exp .)
    RIGHTPARENTHESIS reduce using rule 87 (exp_relational -> exp .)
    RIGHTSQRBRACKET reduce using rule 87 (exp_relational -> exp .)
    SEMICOLON       reduce using rule 87 (exp_relational -> exp .)
    COMPARISON      shift and go to state 146
    GREATERHANOREQUAL shift and go to state 147
    LESSTHANOREQUAL shift and go to state 148
    GREATERTHAN     shift and go to state 149
    LESSTHAN        shift and go to state 150
    DIFFERENT       shift and go to state 151

    comparators                    shift and go to state 145

state 115

    (71) decision -> IF LEFTPARENTHESIS expresion . RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (72) decision -> IF LEFTPARENTHESIS expresion . RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad

    RIGHTPARENTHESIS shift and go to state 152


state 116

    (16) identifier -> ID LEFTSQRBRACKET expresion . RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> ID LEFTSQRBRACKET expresion . RIGHTSQRBRACKET

    RIGHTSQRBRACKET shift and go to state 153


state 117

    (79) function_call -> ID neupoint_validate_function LEFTPARENTHESIS . neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> ID neupoint_validate_function LEFTPARENTHESIS . neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (114) neupoint_era_quad -> .

    LEFTPARENTHESIS reduce using rule 114 (neupoint_era_quad -> .)
    CTEINT          reduce using rule 114 (neupoint_era_quad -> .)
    CTEFLOAT        reduce using rule 114 (neupoint_era_quad -> .)
    CTECHAR         reduce using rule 114 (neupoint_era_quad -> .)
    ID              reduce using rule 114 (neupoint_era_quad -> .)
    RIGHTPARENTHESIS reduce using rule 114 (neupoint_era_quad -> .)

    neupoint_era_quad              shift and go to state 154

state 118

    (75) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS . expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end
    (83) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (85) expresion -> . exp_relational
    (86) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (87) exp_relational -> . exp
    (88) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (89) exp -> . term neupoint_arithmetic_exp_quad
    (90) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (91) term -> . factor neupoint_arithmetic_term_quad
    (92) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (93) factor -> . CTEINT neupoint_add_cte_operand
    (94) factor -> . CTEFLOAT neupoint_add_cte_operand
    (95) factor -> . CTECHAR neupoint_add_cte_operand
    (96) factor -> . function_call
    (97) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (16) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    expresion                      shift and go to state 155
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 119

    (76) non_conditional -> FOR ID neupoint_add_operand_integer . EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end

    EQUALS          shift and go to state 156


state 120

    (13) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET . CTEINT RIGHTSQRBRACKET

    CTEINT          shift and go to state 157


state 121

    (24) function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function . block neupoint_check_for_return neupoint_end_function
    (47) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (48) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 158

state 122

    (25) function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block . neupoint_check_for_return neupoint_end_function
    (34) neupoint_check_for_return -> .

    MODULE          reduce using rule 34 (neupoint_check_for_return -> .)
    MAIN            reduce using rule 34 (neupoint_check_for_return -> .)

    neupoint_check_for_return      shift and go to state 159

state 123

    (26) parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS . neupoint_add_parameters
    (31) neupoint_add_parameters -> .

    VAR             reduce using rule 31 (neupoint_add_parameters -> .)
    LEFTBRACKET     reduce using rule 31 (neupoint_add_parameters -> .)

    neupoint_add_parameters        shift and go to state 160

state 124

    (28) parameter -> data_type decla_identifier . COMMA parameter
    (29) parameter -> data_type decla_identifier .

    COMMA           shift and go to state 161
    RIGHTPARENTHESIS reduce using rule 29 (parameter -> data_type decla_identifier .)


state 125

    (58) assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator . expresion neupoint_assignment_quad SEMICOLON
    (83) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (85) expresion -> . exp_relational
    (86) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (87) exp_relational -> . exp
    (88) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (89) exp -> . term neupoint_arithmetic_exp_quad
    (90) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (91) term -> . factor neupoint_arithmetic_term_quad
    (92) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (93) factor -> . CTEINT neupoint_add_cte_operand
    (94) factor -> . CTEFLOAT neupoint_add_cte_operand
    (95) factor -> . CTECHAR neupoint_add_cte_operand
    (96) factor -> . function_call
    (97) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (16) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    identifier                     shift and go to state 105
    expresion                      shift and go to state 162
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104

state 126

    (59) assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator . expresion neupoint_assignment_quad SEMICOLON
    (83) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (85) expresion -> . exp_relational
    (86) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (87) exp_relational -> . exp
    (88) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (89) exp -> . term neupoint_arithmetic_exp_quad
    (90) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (91) term -> . factor neupoint_arithmetic_term_quad
    (92) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (93) factor -> . CTEINT neupoint_add_cte_operand
    (94) factor -> . CTEFLOAT neupoint_add_cte_operand
    (95) factor -> . CTECHAR neupoint_add_cte_operand
    (96) factor -> . function_call
    (97) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (16) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    identifier                     shift and go to state 105
    expresion                      shift and go to state 163
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104

state 127

    (60) assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator . expresion neupoint_assignment_quad SEMICOLON
    (83) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (85) expresion -> . exp_relational
    (86) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (87) exp_relational -> . exp
    (88) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (89) exp -> . term neupoint_arithmetic_exp_quad
    (90) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (91) term -> . factor neupoint_arithmetic_term_quad
    (92) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (93) factor -> . CTEINT neupoint_add_cte_operand
    (94) factor -> . CTEFLOAT neupoint_add_cte_operand
    (95) factor -> . CTECHAR neupoint_add_cte_operand
    (96) factor -> . function_call
    (97) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (16) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    identifier                     shift and go to state 105
    expresion                      shift and go to state 164
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104

state 128

    (61) assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator . neupoint_assignment_single_quad SEMICOLON
    (106) neupoint_assignment_single_quad -> .

    SEMICOLON       reduce using rule 106 (neupoint_assignment_single_quad -> .)

    neupoint_assignment_single_quad shift and go to state 165

state 129

    (62) assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator . neupoint_assignment_single_quad SEMICOLON
    (106) neupoint_assignment_single_quad -> .

    SEMICOLON       reduce using rule 106 (neupoint_assignment_single_quad -> .)

    neupoint_assignment_single_quad shift and go to state 166

state 130

    (92) factor -> LEFTPARENTHESIS neupoint_add_wall . expresion neupoint_remove_wall RIGHTPARENTHESIS
    (83) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (85) expresion -> . exp_relational
    (86) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (87) exp_relational -> . exp
    (88) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (89) exp -> . term neupoint_arithmetic_exp_quad
    (90) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (91) term -> . factor neupoint_arithmetic_term_quad
    (92) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (93) factor -> . CTEINT neupoint_add_cte_operand
    (94) factor -> . CTEFLOAT neupoint_add_cte_operand
    (95) factor -> . CTECHAR neupoint_add_cte_operand
    (96) factor -> . function_call
    (97) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (16) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    expresion                      shift and go to state 167
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 131

    (77) function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 168


state 132

    (88) exp -> term neupoint_arithmetic_exp_quad . exp_operator neupoint_add_operator exp
    (89) exp -> term neupoint_arithmetic_exp_quad .
    (42) exp_operator -> . PLUS
    (43) exp_operator -> . MINUS

    RIGHTPARENTHESIS reduce using rule 89 (exp -> term neupoint_arithmetic_exp_quad .)
    COMPARISON      reduce using rule 89 (exp -> term neupoint_arithmetic_exp_quad .)
    GREATERHANOREQUAL reduce using rule 89 (exp -> term neupoint_arithmetic_exp_quad .)
    LESSTHANOREQUAL reduce using rule 89 (exp -> term neupoint_arithmetic_exp_quad .)
    GREATERTHAN     reduce using rule 89 (exp -> term neupoint_arithmetic_exp_quad .)
    LESSTHAN        reduce using rule 89 (exp -> term neupoint_arithmetic_exp_quad .)
    DIFFERENT       reduce using rule 89 (exp -> term neupoint_arithmetic_exp_quad .)
    AND             reduce using rule 89 (exp -> term neupoint_arithmetic_exp_quad .)
    OR              reduce using rule 89 (exp -> term neupoint_arithmetic_exp_quad .)
    COMMA           reduce using rule 89 (exp -> term neupoint_arithmetic_exp_quad .)
    RIGHTSQRBRACKET reduce using rule 89 (exp -> term neupoint_arithmetic_exp_quad .)
    SEMICOLON       reduce using rule 89 (exp -> term neupoint_arithmetic_exp_quad .)
    TO              reduce using rule 89 (exp -> term neupoint_arithmetic_exp_quad .)
    DO              reduce using rule 89 (exp -> term neupoint_arithmetic_exp_quad .)
    PLUS            shift and go to state 170
    MINUS           shift and go to state 171

    exp_operator                   shift and go to state 169

state 133

    (90) term -> factor neupoint_arithmetic_term_quad . term_operator neupoint_add_operator term
    (91) term -> factor neupoint_arithmetic_term_quad .
    (44) term_operator -> . MULTIPLY
    (45) term_operator -> . DIVIDE
    (46) term_operator -> . MOD

    PLUS            reduce using rule 91 (term -> factor neupoint_arithmetic_term_quad .)
    MINUS           reduce using rule 91 (term -> factor neupoint_arithmetic_term_quad .)
    RIGHTPARENTHESIS reduce using rule 91 (term -> factor neupoint_arithmetic_term_quad .)
    COMPARISON      reduce using rule 91 (term -> factor neupoint_arithmetic_term_quad .)
    GREATERHANOREQUAL reduce using rule 91 (term -> factor neupoint_arithmetic_term_quad .)
    LESSTHANOREQUAL reduce using rule 91 (term -> factor neupoint_arithmetic_term_quad .)
    GREATERTHAN     reduce using rule 91 (term -> factor neupoint_arithmetic_term_quad .)
    LESSTHAN        reduce using rule 91 (term -> factor neupoint_arithmetic_term_quad .)
    DIFFERENT       reduce using rule 91 (term -> factor neupoint_arithmetic_term_quad .)
    AND             reduce using rule 91 (term -> factor neupoint_arithmetic_term_quad .)
    OR              reduce using rule 91 (term -> factor neupoint_arithmetic_term_quad .)
    COMMA           reduce using rule 91 (term -> factor neupoint_arithmetic_term_quad .)
    RIGHTSQRBRACKET reduce using rule 91 (term -> factor neupoint_arithmetic_term_quad .)
    SEMICOLON       reduce using rule 91 (term -> factor neupoint_arithmetic_term_quad .)
    TO              reduce using rule 91 (term -> factor neupoint_arithmetic_term_quad .)
    DO              reduce using rule 91 (term -> factor neupoint_arithmetic_term_quad .)
    MULTIPLY        shift and go to state 173
    DIVIDE          shift and go to state 174
    MOD             shift and go to state 175

    term_operator                  shift and go to state 172

state 134

    (93) factor -> CTEINT neupoint_add_cte_operand .

    MULTIPLY        reduce using rule 93 (factor -> CTEINT neupoint_add_cte_operand .)
    DIVIDE          reduce using rule 93 (factor -> CTEINT neupoint_add_cte_operand .)
    MOD             reduce using rule 93 (factor -> CTEINT neupoint_add_cte_operand .)
    PLUS            reduce using rule 93 (factor -> CTEINT neupoint_add_cte_operand .)
    MINUS           reduce using rule 93 (factor -> CTEINT neupoint_add_cte_operand .)
    RIGHTPARENTHESIS reduce using rule 93 (factor -> CTEINT neupoint_add_cte_operand .)
    COMPARISON      reduce using rule 93 (factor -> CTEINT neupoint_add_cte_operand .)
    GREATERHANOREQUAL reduce using rule 93 (factor -> CTEINT neupoint_add_cte_operand .)
    LESSTHANOREQUAL reduce using rule 93 (factor -> CTEINT neupoint_add_cte_operand .)
    GREATERTHAN     reduce using rule 93 (factor -> CTEINT neupoint_add_cte_operand .)
    LESSTHAN        reduce using rule 93 (factor -> CTEINT neupoint_add_cte_operand .)
    DIFFERENT       reduce using rule 93 (factor -> CTEINT neupoint_add_cte_operand .)
    AND             reduce using rule 93 (factor -> CTEINT neupoint_add_cte_operand .)
    OR              reduce using rule 93 (factor -> CTEINT neupoint_add_cte_operand .)
    COMMA           reduce using rule 93 (factor -> CTEINT neupoint_add_cte_operand .)
    RIGHTSQRBRACKET reduce using rule 93 (factor -> CTEINT neupoint_add_cte_operand .)
    SEMICOLON       reduce using rule 93 (factor -> CTEINT neupoint_add_cte_operand .)
    TO              reduce using rule 93 (factor -> CTEINT neupoint_add_cte_operand .)
    DO              reduce using rule 93 (factor -> CTEINT neupoint_add_cte_operand .)


state 135

    (94) factor -> CTEFLOAT neupoint_add_cte_operand .

    MULTIPLY        reduce using rule 94 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    DIVIDE          reduce using rule 94 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    MOD             reduce using rule 94 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    PLUS            reduce using rule 94 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    MINUS           reduce using rule 94 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    RIGHTPARENTHESIS reduce using rule 94 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    COMPARISON      reduce using rule 94 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    GREATERHANOREQUAL reduce using rule 94 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    LESSTHANOREQUAL reduce using rule 94 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    GREATERTHAN     reduce using rule 94 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    LESSTHAN        reduce using rule 94 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    DIFFERENT       reduce using rule 94 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    AND             reduce using rule 94 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    OR              reduce using rule 94 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    COMMA           reduce using rule 94 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    RIGHTSQRBRACKET reduce using rule 94 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    SEMICOLON       reduce using rule 94 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    TO              reduce using rule 94 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    DO              reduce using rule 94 (factor -> CTEFLOAT neupoint_add_cte_operand .)


state 136

    (95) factor -> CTECHAR neupoint_add_cte_operand .

    MULTIPLY        reduce using rule 95 (factor -> CTECHAR neupoint_add_cte_operand .)
    DIVIDE          reduce using rule 95 (factor -> CTECHAR neupoint_add_cte_operand .)
    MOD             reduce using rule 95 (factor -> CTECHAR neupoint_add_cte_operand .)
    PLUS            reduce using rule 95 (factor -> CTECHAR neupoint_add_cte_operand .)
    MINUS           reduce using rule 95 (factor -> CTECHAR neupoint_add_cte_operand .)
    RIGHTPARENTHESIS reduce using rule 95 (factor -> CTECHAR neupoint_add_cte_operand .)
    COMPARISON      reduce using rule 95 (factor -> CTECHAR neupoint_add_cte_operand .)
    GREATERHANOREQUAL reduce using rule 95 (factor -> CTECHAR neupoint_add_cte_operand .)
    LESSTHANOREQUAL reduce using rule 95 (factor -> CTECHAR neupoint_add_cte_operand .)
    GREATERTHAN     reduce using rule 95 (factor -> CTECHAR neupoint_add_cte_operand .)
    LESSTHAN        reduce using rule 95 (factor -> CTECHAR neupoint_add_cte_operand .)
    DIFFERENT       reduce using rule 95 (factor -> CTECHAR neupoint_add_cte_operand .)
    AND             reduce using rule 95 (factor -> CTECHAR neupoint_add_cte_operand .)
    OR              reduce using rule 95 (factor -> CTECHAR neupoint_add_cte_operand .)
    COMMA           reduce using rule 95 (factor -> CTECHAR neupoint_add_cte_operand .)
    RIGHTSQRBRACKET reduce using rule 95 (factor -> CTECHAR neupoint_add_cte_operand .)
    SEMICOLON       reduce using rule 95 (factor -> CTECHAR neupoint_add_cte_operand .)
    TO              reduce using rule 95 (factor -> CTECHAR neupoint_add_cte_operand .)
    DO              reduce using rule 95 (factor -> CTECHAR neupoint_add_cte_operand .)


state 137

    (97) factor -> identifier neupoint_add_operand .

    MULTIPLY        reduce using rule 97 (factor -> identifier neupoint_add_operand .)
    DIVIDE          reduce using rule 97 (factor -> identifier neupoint_add_operand .)
    MOD             reduce using rule 97 (factor -> identifier neupoint_add_operand .)
    PLUS            reduce using rule 97 (factor -> identifier neupoint_add_operand .)
    MINUS           reduce using rule 97 (factor -> identifier neupoint_add_operand .)
    RIGHTPARENTHESIS reduce using rule 97 (factor -> identifier neupoint_add_operand .)
    COMPARISON      reduce using rule 97 (factor -> identifier neupoint_add_operand .)
    GREATERHANOREQUAL reduce using rule 97 (factor -> identifier neupoint_add_operand .)
    LESSTHANOREQUAL reduce using rule 97 (factor -> identifier neupoint_add_operand .)
    GREATERTHAN     reduce using rule 97 (factor -> identifier neupoint_add_operand .)
    LESSTHAN        reduce using rule 97 (factor -> identifier neupoint_add_operand .)
    DIFFERENT       reduce using rule 97 (factor -> identifier neupoint_add_operand .)
    AND             reduce using rule 97 (factor -> identifier neupoint_add_operand .)
    OR              reduce using rule 97 (factor -> identifier neupoint_add_operand .)
    COMMA           reduce using rule 97 (factor -> identifier neupoint_add_operand .)
    RIGHTSQRBRACKET reduce using rule 97 (factor -> identifier neupoint_add_operand .)
    SEMICOLON       reduce using rule 97 (factor -> identifier neupoint_add_operand .)
    TO              reduce using rule 97 (factor -> identifier neupoint_add_operand .)
    DO              reduce using rule 97 (factor -> identifier neupoint_add_operand .)


state 138

    (63) reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 176


state 139

    (64) reading_list -> identifier neupoint_add_operand . COMMA reading_list
    (65) reading_list -> identifier neupoint_add_operand .

    COMMA           shift and go to state 177
    RIGHTPARENTHESIS reduce using rule 65 (reading_list -> identifier neupoint_add_operand .)


state 140

    (66) writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 178


state 141

    (67) writing_list -> CTESTRING neupoint_add_cte_operand . neupoint_write_quad COMMA writing_list
    (69) writing_list -> CTESTRING neupoint_add_cte_operand . neupoint_write_quad
    (118) neupoint_write_quad -> .

    COMMA           reduce using rule 118 (neupoint_write_quad -> .)
    RIGHTPARENTHESIS reduce using rule 118 (neupoint_write_quad -> .)

    neupoint_write_quad            shift and go to state 179

state 142

    (68) writing_list -> expresion neupoint_write_quad . COMMA writing_list
    (70) writing_list -> expresion neupoint_write_quad .

    COMMA           shift and go to state 180
    RIGHTPARENTHESIS reduce using rule 70 (writing_list -> expresion neupoint_write_quad .)


state 143

    (83) expresion -> exp_relational AND . neupoint_add_operator expresion neupoint_logical_relational_opt
    (98) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 98 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 98 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 98 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 98 (neupoint_add_operator -> .)
    ID              reduce using rule 98 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 181

state 144

    (84) expresion -> exp_relational OR . neupoint_add_operator expresion neupoint_logical_relational_opt
    (98) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 98 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 98 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 98 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 98 (neupoint_add_operator -> .)
    ID              reduce using rule 98 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 182

state 145

    (86) exp_relational -> exp comparators . neupoint_add_operator exp neupoint_logical_relational_opt
    (98) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 98 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 98 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 98 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 98 (neupoint_add_operator -> .)
    ID              reduce using rule 98 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 183

state 146

    (36) comparators -> COMPARISON .

    LEFTPARENTHESIS reduce using rule 36 (comparators -> COMPARISON .)
    CTEINT          reduce using rule 36 (comparators -> COMPARISON .)
    CTEFLOAT        reduce using rule 36 (comparators -> COMPARISON .)
    CTECHAR         reduce using rule 36 (comparators -> COMPARISON .)
    ID              reduce using rule 36 (comparators -> COMPARISON .)


state 147

    (37) comparators -> GREATERHANOREQUAL .

    LEFTPARENTHESIS reduce using rule 37 (comparators -> GREATERHANOREQUAL .)
    CTEINT          reduce using rule 37 (comparators -> GREATERHANOREQUAL .)
    CTEFLOAT        reduce using rule 37 (comparators -> GREATERHANOREQUAL .)
    CTECHAR         reduce using rule 37 (comparators -> GREATERHANOREQUAL .)
    ID              reduce using rule 37 (comparators -> GREATERHANOREQUAL .)


state 148

    (38) comparators -> LESSTHANOREQUAL .

    LEFTPARENTHESIS reduce using rule 38 (comparators -> LESSTHANOREQUAL .)
    CTEINT          reduce using rule 38 (comparators -> LESSTHANOREQUAL .)
    CTEFLOAT        reduce using rule 38 (comparators -> LESSTHANOREQUAL .)
    CTECHAR         reduce using rule 38 (comparators -> LESSTHANOREQUAL .)
    ID              reduce using rule 38 (comparators -> LESSTHANOREQUAL .)


state 149

    (39) comparators -> GREATERTHAN .

    LEFTPARENTHESIS reduce using rule 39 (comparators -> GREATERTHAN .)
    CTEINT          reduce using rule 39 (comparators -> GREATERTHAN .)
    CTEFLOAT        reduce using rule 39 (comparators -> GREATERTHAN .)
    CTECHAR         reduce using rule 39 (comparators -> GREATERTHAN .)
    ID              reduce using rule 39 (comparators -> GREATERTHAN .)


state 150

    (40) comparators -> LESSTHAN .

    LEFTPARENTHESIS reduce using rule 40 (comparators -> LESSTHAN .)
    CTEINT          reduce using rule 40 (comparators -> LESSTHAN .)
    CTEFLOAT        reduce using rule 40 (comparators -> LESSTHAN .)
    CTECHAR         reduce using rule 40 (comparators -> LESSTHAN .)
    ID              reduce using rule 40 (comparators -> LESSTHAN .)


state 151

    (41) comparators -> DIFFERENT .

    LEFTPARENTHESIS reduce using rule 41 (comparators -> DIFFERENT .)
    CTEINT          reduce using rule 41 (comparators -> DIFFERENT .)
    CTEFLOAT        reduce using rule 41 (comparators -> DIFFERENT .)
    CTECHAR         reduce using rule 41 (comparators -> DIFFERENT .)
    ID              reduce using rule 41 (comparators -> DIFFERENT .)


state 152

    (71) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS . neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (72) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS . neupoint_conditional_quad THEN block neupoint_end_conditional_quad
    (108) neupoint_conditional_quad -> .

    THEN            reduce using rule 108 (neupoint_conditional_quad -> .)

    neupoint_conditional_quad      shift and go to state 184

state 153

    (16) identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET . LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .

    LEFTSQRBRACKET  shift and go to state 185
    EQUALS          reduce using rule 17 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    PLUSEQUALS      reduce using rule 17 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    SUBSTRACTEQUALS reduce using rule 17 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    INCREMENT       reduce using rule 17 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DECREMENT       reduce using rule 17 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MULTIPLY        reduce using rule 17 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DIVIDE          reduce using rule 17 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MOD             reduce using rule 17 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    PLUS            reduce using rule 17 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MINUS           reduce using rule 17 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    RIGHTPARENTHESIS reduce using rule 17 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    COMMA           reduce using rule 17 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    COMPARISON      reduce using rule 17 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    GREATERHANOREQUAL reduce using rule 17 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    LESSTHANOREQUAL reduce using rule 17 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    GREATERTHAN     reduce using rule 17 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    LESSTHAN        reduce using rule 17 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DIFFERENT       reduce using rule 17 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    AND             reduce using rule 17 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    OR              reduce using rule 17 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    RIGHTSQRBRACKET reduce using rule 17 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    SEMICOLON       reduce using rule 17 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    TO              reduce using rule 17 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DO              reduce using rule 17 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)


state 154

    (79) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad . neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad . neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (103) neupoint_add_wall -> .

    LEFTPARENTHESIS reduce using rule 103 (neupoint_add_wall -> .)
    CTEINT          reduce using rule 103 (neupoint_add_wall -> .)
    CTEFLOAT        reduce using rule 103 (neupoint_add_wall -> .)
    CTECHAR         reduce using rule 103 (neupoint_add_wall -> .)
    ID              reduce using rule 103 (neupoint_add_wall -> .)
    RIGHTPARENTHESIS reduce using rule 103 (neupoint_add_wall -> .)

    neupoint_add_wall              shift and go to state 186

state 155

    (75) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion . RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end

    RIGHTPARENTHESIS shift and go to state 187


state 156

    (76) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS . neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end
    (98) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 98 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 98 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 98 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 98 (neupoint_add_operator -> .)
    ID              reduce using rule 98 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 188

state 157

    (13) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT . RIGHTSQRBRACKET

    RIGHTSQRBRACKET shift and go to state 189


state 158

    (24) function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block . neupoint_check_for_return neupoint_end_function
    (34) neupoint_check_for_return -> .

    MODULE          reduce using rule 34 (neupoint_check_for_return -> .)
    MAIN            reduce using rule 34 (neupoint_check_for_return -> .)

    neupoint_check_for_return      shift and go to state 190

state 159

    (25) function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return . neupoint_end_function
    (35) neupoint_end_function -> .

    MODULE          reduce using rule 35 (neupoint_end_function -> .)
    MAIN            reduce using rule 35 (neupoint_end_function -> .)

    neupoint_end_function          shift and go to state 191

state 160

    (26) parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS neupoint_add_parameters .

    VAR             reduce using rule 26 (parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS neupoint_add_parameters .)
    LEFTBRACKET     reduce using rule 26 (parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS neupoint_add_parameters .)


state 161

    (28) parameter -> data_type decla_identifier COMMA . parameter
    (28) parameter -> . data_type decla_identifier COMMA parameter
    (29) parameter -> . data_type decla_identifier
    (5) data_type -> . INT
    (6) data_type -> . FLOAT
    (7) data_type -> . CHAR

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19

    data_type                      shift and go to state 90
    parameter                      shift and go to state 192

state 162

    (58) assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion . neupoint_assignment_quad SEMICOLON
    (105) neupoint_assignment_quad -> .

    SEMICOLON       reduce using rule 105 (neupoint_assignment_quad -> .)

    neupoint_assignment_quad       shift and go to state 193

state 163

    (59) assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion . neupoint_assignment_quad SEMICOLON
    (105) neupoint_assignment_quad -> .

    SEMICOLON       reduce using rule 105 (neupoint_assignment_quad -> .)

    neupoint_assignment_quad       shift and go to state 194

state 164

    (60) assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion . neupoint_assignment_quad SEMICOLON
    (105) neupoint_assignment_quad -> .

    SEMICOLON       reduce using rule 105 (neupoint_assignment_quad -> .)

    neupoint_assignment_quad       shift and go to state 195

state 165

    (61) assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad . SEMICOLON

    SEMICOLON       shift and go to state 196


state 166

    (62) assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad . SEMICOLON

    SEMICOLON       shift and go to state 197


state 167

    (92) factor -> LEFTPARENTHESIS neupoint_add_wall expresion . neupoint_remove_wall RIGHTPARENTHESIS
    (104) neupoint_remove_wall -> .

    RIGHTPARENTHESIS reduce using rule 104 (neupoint_remove_wall -> .)

    neupoint_remove_wall           shift and go to state 198

state 168

    (77) function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .

    RETURN          reduce using rule 77 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    READ            reduce using rule 77 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    WRITE           reduce using rule 77 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    IF              reduce using rule 77 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    ID              reduce using rule 77 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 77 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    FOR             reduce using rule 77 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 77 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)


state 169

    (88) exp -> term neupoint_arithmetic_exp_quad exp_operator . neupoint_add_operator exp
    (98) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 98 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 98 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 98 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 98 (neupoint_add_operator -> .)
    ID              reduce using rule 98 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 199

state 170

    (42) exp_operator -> PLUS .

    LEFTPARENTHESIS reduce using rule 42 (exp_operator -> PLUS .)
    CTEINT          reduce using rule 42 (exp_operator -> PLUS .)
    CTEFLOAT        reduce using rule 42 (exp_operator -> PLUS .)
    CTECHAR         reduce using rule 42 (exp_operator -> PLUS .)
    ID              reduce using rule 42 (exp_operator -> PLUS .)


state 171

    (43) exp_operator -> MINUS .

    LEFTPARENTHESIS reduce using rule 43 (exp_operator -> MINUS .)
    CTEINT          reduce using rule 43 (exp_operator -> MINUS .)
    CTEFLOAT        reduce using rule 43 (exp_operator -> MINUS .)
    CTECHAR         reduce using rule 43 (exp_operator -> MINUS .)
    ID              reduce using rule 43 (exp_operator -> MINUS .)


state 172

    (90) term -> factor neupoint_arithmetic_term_quad term_operator . neupoint_add_operator term
    (98) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 98 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 98 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 98 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 98 (neupoint_add_operator -> .)
    ID              reduce using rule 98 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 200

state 173

    (44) term_operator -> MULTIPLY .

    LEFTPARENTHESIS reduce using rule 44 (term_operator -> MULTIPLY .)
    CTEINT          reduce using rule 44 (term_operator -> MULTIPLY .)
    CTEFLOAT        reduce using rule 44 (term_operator -> MULTIPLY .)
    CTECHAR         reduce using rule 44 (term_operator -> MULTIPLY .)
    ID              reduce using rule 44 (term_operator -> MULTIPLY .)


state 174

    (45) term_operator -> DIVIDE .

    LEFTPARENTHESIS reduce using rule 45 (term_operator -> DIVIDE .)
    CTEINT          reduce using rule 45 (term_operator -> DIVIDE .)
    CTEFLOAT        reduce using rule 45 (term_operator -> DIVIDE .)
    CTECHAR         reduce using rule 45 (term_operator -> DIVIDE .)
    ID              reduce using rule 45 (term_operator -> DIVIDE .)


state 175

    (46) term_operator -> MOD .

    LEFTPARENTHESIS reduce using rule 46 (term_operator -> MOD .)
    CTEINT          reduce using rule 46 (term_operator -> MOD .)
    CTEFLOAT        reduce using rule 46 (term_operator -> MOD .)
    CTECHAR         reduce using rule 46 (term_operator -> MOD .)
    ID              reduce using rule 46 (term_operator -> MOD .)


state 176

    (63) reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .

    RETURN          reduce using rule 63 (reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .)
    READ            reduce using rule 63 (reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .)
    WRITE           reduce using rule 63 (reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .)
    IF              reduce using rule 63 (reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .)
    ID              reduce using rule 63 (reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 63 (reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .)
    FOR             reduce using rule 63 (reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 63 (reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .)


state 177

    (64) reading_list -> identifier neupoint_add_operand COMMA . reading_list
    (64) reading_list -> . identifier neupoint_add_operand COMMA reading_list
    (65) reading_list -> . identifier neupoint_add_operand
    (16) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> . ID

    ID              shift and go to state 109

    identifier                     shift and go to state 108
    reading_list                   shift and go to state 201

state 178

    (66) writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .

    RETURN          reduce using rule 66 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    READ            reduce using rule 66 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    WRITE           reduce using rule 66 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    IF              reduce using rule 66 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    ID              reduce using rule 66 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 66 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    FOR             reduce using rule 66 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 66 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)


state 179

    (67) writing_list -> CTESTRING neupoint_add_cte_operand neupoint_write_quad . COMMA writing_list
    (69) writing_list -> CTESTRING neupoint_add_cte_operand neupoint_write_quad .

    COMMA           shift and go to state 202
    RIGHTPARENTHESIS reduce using rule 69 (writing_list -> CTESTRING neupoint_add_cte_operand neupoint_write_quad .)


state 180

    (68) writing_list -> expresion neupoint_write_quad COMMA . writing_list
    (67) writing_list -> . CTESTRING neupoint_add_cte_operand neupoint_write_quad COMMA writing_list
    (68) writing_list -> . expresion neupoint_write_quad COMMA writing_list
    (69) writing_list -> . CTESTRING neupoint_add_cte_operand neupoint_write_quad
    (70) writing_list -> . expresion neupoint_write_quad
    (83) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (85) expresion -> . exp_relational
    (86) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (87) exp_relational -> . exp
    (88) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (89) exp -> . term neupoint_arithmetic_exp_quad
    (90) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (91) term -> . factor neupoint_arithmetic_term_quad
    (92) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (93) factor -> . CTEINT neupoint_add_cte_operand
    (94) factor -> . CTEFLOAT neupoint_add_cte_operand
    (95) factor -> . CTECHAR neupoint_add_cte_operand
    (96) factor -> . function_call
    (97) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (16) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> . ID

    CTESTRING       shift and go to state 111
    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    expresion                      shift and go to state 112
    writing_list                   shift and go to state 203
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 181

    (83) expresion -> exp_relational AND neupoint_add_operator . expresion neupoint_logical_relational_opt
    (83) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (85) expresion -> . exp_relational
    (86) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (87) exp_relational -> . exp
    (88) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (89) exp -> . term neupoint_arithmetic_exp_quad
    (90) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (91) term -> . factor neupoint_arithmetic_term_quad
    (92) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (93) factor -> . CTEINT neupoint_add_cte_operand
    (94) factor -> . CTEFLOAT neupoint_add_cte_operand
    (95) factor -> . CTECHAR neupoint_add_cte_operand
    (96) factor -> . function_call
    (97) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (16) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    exp_relational                 shift and go to state 113
    expresion                      shift and go to state 204
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 182

    (84) expresion -> exp_relational OR neupoint_add_operator . expresion neupoint_logical_relational_opt
    (83) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (85) expresion -> . exp_relational
    (86) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (87) exp_relational -> . exp
    (88) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (89) exp -> . term neupoint_arithmetic_exp_quad
    (90) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (91) term -> . factor neupoint_arithmetic_term_quad
    (92) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (93) factor -> . CTEINT neupoint_add_cte_operand
    (94) factor -> . CTEFLOAT neupoint_add_cte_operand
    (95) factor -> . CTECHAR neupoint_add_cte_operand
    (96) factor -> . function_call
    (97) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (16) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    exp_relational                 shift and go to state 113
    expresion                      shift and go to state 205
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 183

    (86) exp_relational -> exp comparators neupoint_add_operator . exp neupoint_logical_relational_opt
    (88) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (89) exp -> . term neupoint_arithmetic_exp_quad
    (90) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (91) term -> . factor neupoint_arithmetic_term_quad
    (92) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (93) factor -> . CTEINT neupoint_add_cte_operand
    (94) factor -> . CTEFLOAT neupoint_add_cte_operand
    (95) factor -> . CTECHAR neupoint_add_cte_operand
    (96) factor -> . function_call
    (97) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (16) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    exp                            shift and go to state 206
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 184

    (71) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad . THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (72) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad . THEN block neupoint_end_conditional_quad

    THEN            shift and go to state 207


state 185

    (16) identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET . expresion RIGHTSQRBRACKET
    (83) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (85) expresion -> . exp_relational
    (86) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (87) exp_relational -> . exp
    (88) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (89) exp -> . term neupoint_arithmetic_exp_quad
    (90) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (91) term -> . factor neupoint_arithmetic_term_quad
    (92) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (93) factor -> . CTEINT neupoint_add_cte_operand
    (94) factor -> . CTEFLOAT neupoint_add_cte_operand
    (95) factor -> . CTECHAR neupoint_add_cte_operand
    (96) factor -> . function_call
    (97) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (16) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    expresion                      shift and go to state 208
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 186

    (79) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall . ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall . neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (81) ags_list -> . expresion neupoint_validate_args COMMA ags_list
    (82) ags_list -> . expresion neupoint_validate_args
    (116) neupoint_validate_num_args -> .
    (83) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (85) expresion -> . exp_relational
    (86) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (87) exp_relational -> . exp
    (88) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (89) exp -> . term neupoint_arithmetic_exp_quad
    (90) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (91) term -> . factor neupoint_arithmetic_term_quad
    (92) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (93) factor -> . CTEINT neupoint_add_cte_operand
    (94) factor -> . CTEFLOAT neupoint_add_cte_operand
    (95) factor -> . CTECHAR neupoint_add_cte_operand
    (96) factor -> . function_call
    (97) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (16) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> . ID

    RIGHTPARENTHESIS reduce using rule 116 (neupoint_validate_num_args -> .)
    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    ags_list                       shift and go to state 209
    neupoint_validate_num_args     shift and go to state 210
    expresion                      shift and go to state 211
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 187

    (75) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS . neupoint_conditional_quad DO block neupoint_while_end
    (108) neupoint_conditional_quad -> .

    DO              reduce using rule 108 (neupoint_conditional_quad -> .)

    neupoint_conditional_quad      shift and go to state 212

state 188

    (76) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator . exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end
    (88) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (89) exp -> . term neupoint_arithmetic_exp_quad
    (90) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (91) term -> . factor neupoint_arithmetic_term_quad
    (92) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (93) factor -> . CTEINT neupoint_add_cte_operand
    (94) factor -> . CTEFLOAT neupoint_add_cte_operand
    (95) factor -> . CTECHAR neupoint_add_cte_operand
    (96) factor -> . function_call
    (97) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (16) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    exp                            shift and go to state 213
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 189

    (13) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .

    COMMA           reduce using rule 13 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)
    SEMICOLON       reduce using rule 13 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)
    RIGHTPARENTHESIS reduce using rule 13 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)


state 190

    (24) function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return . neupoint_end_function
    (35) neupoint_end_function -> .

    MODULE          reduce using rule 35 (neupoint_end_function -> .)
    MAIN            reduce using rule 35 (neupoint_end_function -> .)

    neupoint_end_function          shift and go to state 214

state 191

    (25) function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function .

    MODULE          reduce using rule 25 (function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function .)
    MAIN            reduce using rule 25 (function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function .)


state 192

    (28) parameter -> data_type decla_identifier COMMA parameter .

    RIGHTPARENTHESIS reduce using rule 28 (parameter -> data_type decla_identifier COMMA parameter .)


state 193

    (58) assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad . SEMICOLON

    SEMICOLON       shift and go to state 215


state 194

    (59) assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad . SEMICOLON

    SEMICOLON       shift and go to state 216


state 195

    (60) assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad . SEMICOLON

    SEMICOLON       shift and go to state 217


state 196

    (61) assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .

    RETURN          reduce using rule 61 (assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    READ            reduce using rule 61 (assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    WRITE           reduce using rule 61 (assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    IF              reduce using rule 61 (assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    ID              reduce using rule 61 (assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    WHILE           reduce using rule 61 (assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    FOR             reduce using rule 61 (assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    RIGHTBRACKET    reduce using rule 61 (assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)


state 197

    (62) assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .

    RETURN          reduce using rule 62 (assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    READ            reduce using rule 62 (assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    WRITE           reduce using rule 62 (assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    IF              reduce using rule 62 (assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    ID              reduce using rule 62 (assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    WHILE           reduce using rule 62 (assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    FOR             reduce using rule 62 (assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    RIGHTBRACKET    reduce using rule 62 (assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)


state 198

    (92) factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall . RIGHTPARENTHESIS

    RIGHTPARENTHESIS shift and go to state 218


state 199

    (88) exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator . exp
    (88) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (89) exp -> . term neupoint_arithmetic_exp_quad
    (90) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (91) term -> . factor neupoint_arithmetic_term_quad
    (92) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (93) factor -> . CTEINT neupoint_add_cte_operand
    (94) factor -> . CTEFLOAT neupoint_add_cte_operand
    (95) factor -> . CTECHAR neupoint_add_cte_operand
    (96) factor -> . function_call
    (97) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (16) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    term                           shift and go to state 99
    exp                            shift and go to state 219
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 200

    (90) term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator . term
    (90) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (91) term -> . factor neupoint_arithmetic_term_quad
    (92) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (93) factor -> . CTEINT neupoint_add_cte_operand
    (94) factor -> . CTEFLOAT neupoint_add_cte_operand
    (95) factor -> . CTECHAR neupoint_add_cte_operand
    (96) factor -> . function_call
    (97) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (16) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    factor                         shift and go to state 100
    term                           shift and go to state 220
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 201

    (64) reading_list -> identifier neupoint_add_operand COMMA reading_list .

    RIGHTPARENTHESIS reduce using rule 64 (reading_list -> identifier neupoint_add_operand COMMA reading_list .)


state 202

    (67) writing_list -> CTESTRING neupoint_add_cte_operand neupoint_write_quad COMMA . writing_list
    (67) writing_list -> . CTESTRING neupoint_add_cte_operand neupoint_write_quad COMMA writing_list
    (68) writing_list -> . expresion neupoint_write_quad COMMA writing_list
    (69) writing_list -> . CTESTRING neupoint_add_cte_operand neupoint_write_quad
    (70) writing_list -> . expresion neupoint_write_quad
    (83) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (85) expresion -> . exp_relational
    (86) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (87) exp_relational -> . exp
    (88) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (89) exp -> . term neupoint_arithmetic_exp_quad
    (90) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (91) term -> . factor neupoint_arithmetic_term_quad
    (92) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (93) factor -> . CTEINT neupoint_add_cte_operand
    (94) factor -> . CTEFLOAT neupoint_add_cte_operand
    (95) factor -> . CTECHAR neupoint_add_cte_operand
    (96) factor -> . function_call
    (97) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (16) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> . ID

    CTESTRING       shift and go to state 111
    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    writing_list                   shift and go to state 221
    expresion                      shift and go to state 112
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 203

    (68) writing_list -> expresion neupoint_write_quad COMMA writing_list .

    RIGHTPARENTHESIS reduce using rule 68 (writing_list -> expresion neupoint_write_quad COMMA writing_list .)


state 204

    (83) expresion -> exp_relational AND neupoint_add_operator expresion . neupoint_logical_relational_opt
    (107) neupoint_logical_relational_opt -> .

    COMMA           reduce using rule 107 (neupoint_logical_relational_opt -> .)
    RIGHTPARENTHESIS reduce using rule 107 (neupoint_logical_relational_opt -> .)
    RIGHTSQRBRACKET reduce using rule 107 (neupoint_logical_relational_opt -> .)
    SEMICOLON       reduce using rule 107 (neupoint_logical_relational_opt -> .)

    neupoint_logical_relational_opt shift and go to state 222

state 205

    (84) expresion -> exp_relational OR neupoint_add_operator expresion . neupoint_logical_relational_opt
    (107) neupoint_logical_relational_opt -> .

    COMMA           reduce using rule 107 (neupoint_logical_relational_opt -> .)
    RIGHTPARENTHESIS reduce using rule 107 (neupoint_logical_relational_opt -> .)
    RIGHTSQRBRACKET reduce using rule 107 (neupoint_logical_relational_opt -> .)
    SEMICOLON       reduce using rule 107 (neupoint_logical_relational_opt -> .)

    neupoint_logical_relational_opt shift and go to state 223

state 206

    (86) exp_relational -> exp comparators neupoint_add_operator exp . neupoint_logical_relational_opt
    (107) neupoint_logical_relational_opt -> .

    AND             reduce using rule 107 (neupoint_logical_relational_opt -> .)
    OR              reduce using rule 107 (neupoint_logical_relational_opt -> .)
    COMMA           reduce using rule 107 (neupoint_logical_relational_opt -> .)
    RIGHTPARENTHESIS reduce using rule 107 (neupoint_logical_relational_opt -> .)
    RIGHTSQRBRACKET reduce using rule 107 (neupoint_logical_relational_opt -> .)
    SEMICOLON       reduce using rule 107 (neupoint_logical_relational_opt -> .)

    neupoint_logical_relational_opt shift and go to state 224

state 207

    (71) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN . block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (72) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN . block neupoint_end_conditional_quad
    (47) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (48) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 225

state 208

    (16) identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion . RIGHTSQRBRACKET

    RIGHTSQRBRACKET shift and go to state 226


state 209

    (79) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list . neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (116) neupoint_validate_num_args -> .

    RIGHTPARENTHESIS reduce using rule 116 (neupoint_validate_num_args -> .)

    neupoint_validate_num_args     shift and go to state 227

state 210

    (80) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args . RIGHTPARENTHESIS neupoint_gosub_quad

    RIGHTPARENTHESIS shift and go to state 228


state 211

    (81) ags_list -> expresion . neupoint_validate_args COMMA ags_list
    (82) ags_list -> expresion . neupoint_validate_args
    (115) neupoint_validate_args -> .

    COMMA           reduce using rule 115 (neupoint_validate_args -> .)
    RIGHTPARENTHESIS reduce using rule 115 (neupoint_validate_args -> .)

    neupoint_validate_args         shift and go to state 229

state 212

    (75) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad . DO block neupoint_while_end

    DO              shift and go to state 230


state 213

    (76) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp . neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end
    (105) neupoint_assignment_quad -> .

    TO              reduce using rule 105 (neupoint_assignment_quad -> .)

    neupoint_assignment_quad       shift and go to state 231

state 214

    (24) function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function .

    MODULE          reduce using rule 24 (function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function .)
    MAIN            reduce using rule 24 (function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function .)


state 215

    (58) assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .

    RETURN          reduce using rule 58 (assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    READ            reduce using rule 58 (assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    WRITE           reduce using rule 58 (assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    IF              reduce using rule 58 (assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    ID              reduce using rule 58 (assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    WHILE           reduce using rule 58 (assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    FOR             reduce using rule 58 (assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    RIGHTBRACKET    reduce using rule 58 (assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)


state 216

    (59) assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .

    RETURN          reduce using rule 59 (assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    READ            reduce using rule 59 (assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    WRITE           reduce using rule 59 (assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    IF              reduce using rule 59 (assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    ID              reduce using rule 59 (assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    WHILE           reduce using rule 59 (assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    FOR             reduce using rule 59 (assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    RIGHTBRACKET    reduce using rule 59 (assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)


state 217

    (60) assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .

    RETURN          reduce using rule 60 (assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    READ            reduce using rule 60 (assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    WRITE           reduce using rule 60 (assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    IF              reduce using rule 60 (assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    ID              reduce using rule 60 (assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    WHILE           reduce using rule 60 (assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    FOR             reduce using rule 60 (assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    RIGHTBRACKET    reduce using rule 60 (assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)


state 218

    (92) factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .

    MULTIPLY        reduce using rule 92 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    DIVIDE          reduce using rule 92 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    MOD             reduce using rule 92 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    PLUS            reduce using rule 92 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    MINUS           reduce using rule 92 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    RIGHTPARENTHESIS reduce using rule 92 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    COMPARISON      reduce using rule 92 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    GREATERHANOREQUAL reduce using rule 92 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    LESSTHANOREQUAL reduce using rule 92 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    GREATERTHAN     reduce using rule 92 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    LESSTHAN        reduce using rule 92 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    DIFFERENT       reduce using rule 92 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    AND             reduce using rule 92 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    OR              reduce using rule 92 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    COMMA           reduce using rule 92 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    RIGHTSQRBRACKET reduce using rule 92 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    SEMICOLON       reduce using rule 92 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    TO              reduce using rule 92 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    DO              reduce using rule 92 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)


state 219

    (88) exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .

    RIGHTPARENTHESIS reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    COMPARISON      reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    GREATERHANOREQUAL reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    LESSTHANOREQUAL reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    GREATERTHAN     reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    LESSTHAN        reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    DIFFERENT       reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    AND             reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    OR              reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    COMMA           reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    RIGHTSQRBRACKET reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    SEMICOLON       reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    TO              reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    DO              reduce using rule 88 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)


state 220

    (90) term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .

    PLUS            reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    MINUS           reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    RIGHTPARENTHESIS reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    COMPARISON      reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    GREATERHANOREQUAL reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    LESSTHANOREQUAL reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    GREATERTHAN     reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    LESSTHAN        reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    DIFFERENT       reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    AND             reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    OR              reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    COMMA           reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    RIGHTSQRBRACKET reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    SEMICOLON       reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    TO              reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    DO              reduce using rule 90 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)


state 221

    (67) writing_list -> CTESTRING neupoint_add_cte_operand neupoint_write_quad COMMA writing_list .

    RIGHTPARENTHESIS reduce using rule 67 (writing_list -> CTESTRING neupoint_add_cte_operand neupoint_write_quad COMMA writing_list .)


state 222

    (83) expresion -> exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt .

    COMMA           reduce using rule 83 (expresion -> exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt .)
    RIGHTPARENTHESIS reduce using rule 83 (expresion -> exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt .)
    RIGHTSQRBRACKET reduce using rule 83 (expresion -> exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt .)
    SEMICOLON       reduce using rule 83 (expresion -> exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt .)


state 223

    (84) expresion -> exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt .

    COMMA           reduce using rule 84 (expresion -> exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt .)
    RIGHTPARENTHESIS reduce using rule 84 (expresion -> exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt .)
    RIGHTSQRBRACKET reduce using rule 84 (expresion -> exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt .)
    SEMICOLON       reduce using rule 84 (expresion -> exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt .)


state 224

    (86) exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .

    AND             reduce using rule 86 (exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .)
    OR              reduce using rule 86 (exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .)
    COMMA           reduce using rule 86 (exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .)
    RIGHTPARENTHESIS reduce using rule 86 (exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .)
    RIGHTSQRBRACKET reduce using rule 86 (exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .)
    SEMICOLON       reduce using rule 86 (exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .)


state 225

    (71) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block . ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (72) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block . neupoint_end_conditional_quad
    (110) neupoint_end_conditional_quad -> .

    ELSE            shift and go to state 232
    RETURN          reduce using rule 110 (neupoint_end_conditional_quad -> .)
    READ            reduce using rule 110 (neupoint_end_conditional_quad -> .)
    WRITE           reduce using rule 110 (neupoint_end_conditional_quad -> .)
    IF              reduce using rule 110 (neupoint_end_conditional_quad -> .)
    ID              reduce using rule 110 (neupoint_end_conditional_quad -> .)
    WHILE           reduce using rule 110 (neupoint_end_conditional_quad -> .)
    FOR             reduce using rule 110 (neupoint_end_conditional_quad -> .)
    RIGHTBRACKET    reduce using rule 110 (neupoint_end_conditional_quad -> .)

    neupoint_end_conditional_quad  shift and go to state 233

state 226

    (16) identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .

    EQUALS          reduce using rule 16 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    PLUSEQUALS      reduce using rule 16 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    SUBSTRACTEQUALS reduce using rule 16 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    INCREMENT       reduce using rule 16 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DECREMENT       reduce using rule 16 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MULTIPLY        reduce using rule 16 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DIVIDE          reduce using rule 16 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MOD             reduce using rule 16 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    PLUS            reduce using rule 16 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MINUS           reduce using rule 16 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    RIGHTPARENTHESIS reduce using rule 16 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    COMMA           reduce using rule 16 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    COMPARISON      reduce using rule 16 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    GREATERHANOREQUAL reduce using rule 16 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    LESSTHANOREQUAL reduce using rule 16 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    GREATERTHAN     reduce using rule 16 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    LESSTHAN        reduce using rule 16 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DIFFERENT       reduce using rule 16 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    AND             reduce using rule 16 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    OR              reduce using rule 16 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    RIGHTSQRBRACKET reduce using rule 16 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    SEMICOLON       reduce using rule 16 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    TO              reduce using rule 16 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DO              reduce using rule 16 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)


state 227

    (79) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args . RIGHTPARENTHESIS neupoint_gosub_quad

    RIGHTPARENTHESIS shift and go to state 234


state 228

    (80) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS . neupoint_gosub_quad
    (117) neupoint_gosub_quad -> .

    SEMICOLON       reduce using rule 117 (neupoint_gosub_quad -> .)
    MULTIPLY        reduce using rule 117 (neupoint_gosub_quad -> .)
    DIVIDE          reduce using rule 117 (neupoint_gosub_quad -> .)
    MOD             reduce using rule 117 (neupoint_gosub_quad -> .)
    PLUS            reduce using rule 117 (neupoint_gosub_quad -> .)
    MINUS           reduce using rule 117 (neupoint_gosub_quad -> .)
    RIGHTPARENTHESIS reduce using rule 117 (neupoint_gosub_quad -> .)
    COMPARISON      reduce using rule 117 (neupoint_gosub_quad -> .)
    GREATERHANOREQUAL reduce using rule 117 (neupoint_gosub_quad -> .)
    LESSTHANOREQUAL reduce using rule 117 (neupoint_gosub_quad -> .)
    GREATERTHAN     reduce using rule 117 (neupoint_gosub_quad -> .)
    LESSTHAN        reduce using rule 117 (neupoint_gosub_quad -> .)
    DIFFERENT       reduce using rule 117 (neupoint_gosub_quad -> .)
    AND             reduce using rule 117 (neupoint_gosub_quad -> .)
    OR              reduce using rule 117 (neupoint_gosub_quad -> .)
    COMMA           reduce using rule 117 (neupoint_gosub_quad -> .)
    RIGHTSQRBRACKET reduce using rule 117 (neupoint_gosub_quad -> .)
    TO              reduce using rule 117 (neupoint_gosub_quad -> .)
    DO              reduce using rule 117 (neupoint_gosub_quad -> .)

    neupoint_gosub_quad            shift and go to state 235

state 229

    (81) ags_list -> expresion neupoint_validate_args . COMMA ags_list
    (82) ags_list -> expresion neupoint_validate_args .

    COMMA           shift and go to state 236
    RIGHTPARENTHESIS reduce using rule 82 (ags_list -> expresion neupoint_validate_args .)


state 230

    (75) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO . block neupoint_while_end
    (47) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (48) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 237

state 231

    (76) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad . neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end
    (120) neupoint_add_operand_for -> .

    TO              reduce using rule 120 (neupoint_add_operand_for -> .)

    neupoint_add_operand_for       shift and go to state 238

state 232

    (71) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE . neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (109) neupoint_else_conditional_quad -> .

    LEFTBRACKET     reduce using rule 109 (neupoint_else_conditional_quad -> .)

    neupoint_else_conditional_quad shift and go to state 239

state 233

    (72) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .

    RETURN          reduce using rule 72 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    READ            reduce using rule 72 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    WRITE           reduce using rule 72 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    IF              reduce using rule 72 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    ID              reduce using rule 72 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    WHILE           reduce using rule 72 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    FOR             reduce using rule 72 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    RIGHTBRACKET    reduce using rule 72 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)


state 234

    (79) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS . neupoint_gosub_quad
    (117) neupoint_gosub_quad -> .

    SEMICOLON       reduce using rule 117 (neupoint_gosub_quad -> .)
    MULTIPLY        reduce using rule 117 (neupoint_gosub_quad -> .)
    DIVIDE          reduce using rule 117 (neupoint_gosub_quad -> .)
    MOD             reduce using rule 117 (neupoint_gosub_quad -> .)
    PLUS            reduce using rule 117 (neupoint_gosub_quad -> .)
    MINUS           reduce using rule 117 (neupoint_gosub_quad -> .)
    RIGHTPARENTHESIS reduce using rule 117 (neupoint_gosub_quad -> .)
    COMPARISON      reduce using rule 117 (neupoint_gosub_quad -> .)
    GREATERHANOREQUAL reduce using rule 117 (neupoint_gosub_quad -> .)
    LESSTHANOREQUAL reduce using rule 117 (neupoint_gosub_quad -> .)
    GREATERTHAN     reduce using rule 117 (neupoint_gosub_quad -> .)
    LESSTHAN        reduce using rule 117 (neupoint_gosub_quad -> .)
    DIFFERENT       reduce using rule 117 (neupoint_gosub_quad -> .)
    AND             reduce using rule 117 (neupoint_gosub_quad -> .)
    OR              reduce using rule 117 (neupoint_gosub_quad -> .)
    COMMA           reduce using rule 117 (neupoint_gosub_quad -> .)
    RIGHTSQRBRACKET reduce using rule 117 (neupoint_gosub_quad -> .)
    TO              reduce using rule 117 (neupoint_gosub_quad -> .)
    DO              reduce using rule 117 (neupoint_gosub_quad -> .)

    neupoint_gosub_quad            shift and go to state 240

state 235

    (80) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .

    SEMICOLON       reduce using rule 80 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    MULTIPLY        reduce using rule 80 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    DIVIDE          reduce using rule 80 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    MOD             reduce using rule 80 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    PLUS            reduce using rule 80 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    MINUS           reduce using rule 80 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    RIGHTPARENTHESIS reduce using rule 80 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    COMPARISON      reduce using rule 80 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    GREATERHANOREQUAL reduce using rule 80 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    LESSTHANOREQUAL reduce using rule 80 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    GREATERTHAN     reduce using rule 80 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    LESSTHAN        reduce using rule 80 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    DIFFERENT       reduce using rule 80 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    AND             reduce using rule 80 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    OR              reduce using rule 80 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    COMMA           reduce using rule 80 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    RIGHTSQRBRACKET reduce using rule 80 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    TO              reduce using rule 80 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    DO              reduce using rule 80 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)


state 236

    (81) ags_list -> expresion neupoint_validate_args COMMA . ags_list
    (81) ags_list -> . expresion neupoint_validate_args COMMA ags_list
    (82) ags_list -> . expresion neupoint_validate_args
    (83) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (84) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (85) expresion -> . exp_relational
    (86) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (87) exp_relational -> . exp
    (88) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (89) exp -> . term neupoint_arithmetic_exp_quad
    (90) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (91) term -> . factor neupoint_arithmetic_term_quad
    (92) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (93) factor -> . CTEINT neupoint_add_cte_operand
    (94) factor -> . CTEFLOAT neupoint_add_cte_operand
    (95) factor -> . CTECHAR neupoint_add_cte_operand
    (96) factor -> . function_call
    (97) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (16) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    expresion                      shift and go to state 211
    ags_list                       shift and go to state 241
    exp_relational                 shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 237

    (75) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block . neupoint_while_end
    (112) neupoint_while_end -> .

    RETURN          reduce using rule 112 (neupoint_while_end -> .)
    READ            reduce using rule 112 (neupoint_while_end -> .)
    WRITE           reduce using rule 112 (neupoint_while_end -> .)
    IF              reduce using rule 112 (neupoint_while_end -> .)
    ID              reduce using rule 112 (neupoint_while_end -> .)
    WHILE           reduce using rule 112 (neupoint_while_end -> .)
    FOR             reduce using rule 112 (neupoint_while_end -> .)
    RIGHTBRACKET    reduce using rule 112 (neupoint_while_end -> .)

    neupoint_while_end             shift and go to state 242

state 238

    (76) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for . TO exp neupoint_comparison_quad DO block neupoint_for_end

    TO              shift and go to state 243


state 239

    (71) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad . block neupoint_end_conditional_quad
    (47) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (48) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 244

state 240

    (79) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .

    SEMICOLON       reduce using rule 79 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    MULTIPLY        reduce using rule 79 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    DIVIDE          reduce using rule 79 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    MOD             reduce using rule 79 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    PLUS            reduce using rule 79 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    MINUS           reduce using rule 79 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    RIGHTPARENTHESIS reduce using rule 79 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    COMPARISON      reduce using rule 79 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    GREATERHANOREQUAL reduce using rule 79 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    LESSTHANOREQUAL reduce using rule 79 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    GREATERTHAN     reduce using rule 79 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    LESSTHAN        reduce using rule 79 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    DIFFERENT       reduce using rule 79 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    AND             reduce using rule 79 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    OR              reduce using rule 79 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    COMMA           reduce using rule 79 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    RIGHTSQRBRACKET reduce using rule 79 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    TO              reduce using rule 79 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    DO              reduce using rule 79 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)


state 241

    (81) ags_list -> expresion neupoint_validate_args COMMA ags_list .

    RIGHTPARENTHESIS reduce using rule 81 (ags_list -> expresion neupoint_validate_args COMMA ags_list .)


state 242

    (75) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .

    RETURN          reduce using rule 75 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    READ            reduce using rule 75 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    WRITE           reduce using rule 75 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    IF              reduce using rule 75 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    ID              reduce using rule 75 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    WHILE           reduce using rule 75 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    FOR             reduce using rule 75 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    RIGHTBRACKET    reduce using rule 75 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)


state 243

    (76) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO . exp neupoint_comparison_quad DO block neupoint_for_end
    (88) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (89) exp -> . term neupoint_arithmetic_exp_quad
    (90) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (91) term -> . factor neupoint_arithmetic_term_quad
    (92) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (93) factor -> . CTEINT neupoint_add_cte_operand
    (94) factor -> . CTEFLOAT neupoint_add_cte_operand
    (95) factor -> . CTECHAR neupoint_add_cte_operand
    (96) factor -> . function_call
    (97) factor -> . identifier neupoint_add_operand
    (79) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (80) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (16) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (17) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (18) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 106

    exp                            shift and go to state 245
    term                           shift and go to state 99
    factor                         shift and go to state 100
    function_call                  shift and go to state 104
    identifier                     shift and go to state 105

state 244

    (71) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block . neupoint_end_conditional_quad
    (110) neupoint_end_conditional_quad -> .

    RETURN          reduce using rule 110 (neupoint_end_conditional_quad -> .)
    READ            reduce using rule 110 (neupoint_end_conditional_quad -> .)
    WRITE           reduce using rule 110 (neupoint_end_conditional_quad -> .)
    IF              reduce using rule 110 (neupoint_end_conditional_quad -> .)
    ID              reduce using rule 110 (neupoint_end_conditional_quad -> .)
    WHILE           reduce using rule 110 (neupoint_end_conditional_quad -> .)
    FOR             reduce using rule 110 (neupoint_end_conditional_quad -> .)
    RIGHTBRACKET    reduce using rule 110 (neupoint_end_conditional_quad -> .)

    neupoint_end_conditional_quad  shift and go to state 246

state 245

    (76) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp . neupoint_comparison_quad DO block neupoint_for_end
    (121) neupoint_comparison_quad -> .

    DO              reduce using rule 121 (neupoint_comparison_quad -> .)

    neupoint_comparison_quad       shift and go to state 247

state 246

    (71) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .

    RETURN          reduce using rule 71 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    READ            reduce using rule 71 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    WRITE           reduce using rule 71 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    IF              reduce using rule 71 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    ID              reduce using rule 71 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    WHILE           reduce using rule 71 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    FOR             reduce using rule 71 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    RIGHTBRACKET    reduce using rule 71 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)


state 247

    (76) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad . DO block neupoint_for_end

    DO              shift and go to state 248


state 248

    (76) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO . block neupoint_for_end
    (47) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (48) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 249

state 249

    (76) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block . neupoint_for_end
    (122) neupoint_for_end -> .

    RETURN          reduce using rule 122 (neupoint_for_end -> .)
    READ            reduce using rule 122 (neupoint_for_end -> .)
    WRITE           reduce using rule 122 (neupoint_for_end -> .)
    IF              reduce using rule 122 (neupoint_for_end -> .)
    ID              reduce using rule 122 (neupoint_for_end -> .)
    WHILE           reduce using rule 122 (neupoint_for_end -> .)
    FOR             reduce using rule 122 (neupoint_for_end -> .)
    RIGHTBRACKET    reduce using rule 122 (neupoint_for_end -> .)

    neupoint_for_end               shift and go to state 250

state 250

    (76) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .

    RETURN          reduce using rule 76 (non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .)
    READ            reduce using rule 76 (non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .)
    WRITE           reduce using rule 76 (non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .)
    IF              reduce using rule 76 (non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .)
    ID              reduce using rule 76 (non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .)
    WHILE           reduce using rule 76 (non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .)
    FOR             reduce using rule 76 (non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .)
    RIGHTBRACKET    reduce using rule 76 (non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .)

