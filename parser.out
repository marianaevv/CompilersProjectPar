Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
Rule 2     program -> PROGRAM ID SEMICOLON functions_list MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
Rule 3     program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
Rule 4     data_type -> INT
Rule 5     data_type -> FLOAT
Rule 6     data_type -> CHAR
Rule 7     vars -> VAR vars_lists
Rule 8     vars_lists -> data_type ids_list SEMICOLON vars_lists
Rule 9     vars_lists -> data_type ids_list SEMICOLON functions_list
Rule 10    vars_lists -> data_type ids_list SEMICOLON
Rule 11    ids_list -> identifier COMMA ids_list
Rule 12    ids_list -> identifier
Rule 13    identifier -> ID id_dimensions id_dimensions
Rule 14    identifier -> ID id_dimensions
Rule 15    identifier -> ID
Rule 16    id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET
Rule 17    return_type -> data_type
Rule 18    return_type -> VOID
Rule 19    function -> return_type MODULE ID parameters_list vars block
Rule 20    function -> return_type MODULE ID parameters_list block
Rule 21    functions_list -> function functions_list
Rule 22    functions_list -> function
Rule 23    parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS
Rule 24    parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS
Rule 25    parameter -> data_type identifier COMMA parameter
Rule 26    parameter -> data_type identifier
Rule 27    comparators -> COMPARISON
Rule 28    comparators -> GREATERHANOREQUAL
Rule 29    comparators -> LESSTHANOREQUAL
Rule 30    comparators -> GREATERTHAN
Rule 31    comparators -> LESSTHAN
Rule 32    comparators -> DIFFERENT
Rule 33    comparators -> OR
Rule 34    comparators -> AND
Rule 35    exp_operator -> PLUS
Rule 36    exp_operator -> MINUS
Rule 37    term_operator -> MULTIPLY
Rule 38    term_operator -> DIVIDE
Rule 39    term_operator -> MOD
Rule 40    block -> LEFTBRACKET statutes_list RIGHTBRACKET
Rule 41    block -> LEFTBRACKET RIGHTBRACKET
Rule 42    statutes_list -> statute statutes_list
Rule 43    statutes_list -> statute
Rule 44    statute -> asignation
Rule 45    statute -> reading
Rule 46    statute -> writing
Rule 47    statute -> decision
Rule 48    statute -> loop
Rule 49    statute -> function_return
Rule 50    statute -> function_call SEMICOLON
Rule 51    asignation -> identifier EQUALS expresion SEMICOLON
Rule 52    asignation -> identifier PLUSEQUALS expresion SEMICOLON
Rule 53    asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON
Rule 54    asignation -> identifier INCREMENT SEMICOLON
Rule 55    asignation -> identifier DECREMENT SEMICOLON
Rule 56    reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON
Rule 57    writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON
Rule 58    writing_list -> CTESTRING COMMA writing_list
Rule 59    writing_list -> expresion COMMA writing_list
Rule 60    writing_list -> CTESTRING
Rule 61    writing_list -> expresion
Rule 62    decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block
Rule 63    decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block
Rule 64    loop -> conditional block
Rule 65    loop -> non_conditional block
Rule 66    conditional -> WHILE LEFTPARENTHESIS expresion RIGHTPARENTHESIS DO
Rule 67    non_conditional -> FOR ID EQUALS exp TO exp DO
Rule 68    function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON
Rule 69    function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
Rule 70    expresion_list -> expresion COMMA expresion_list
Rule 71    expresion_list -> expresion
Rule 72    expresion -> exp comparators exp
Rule 73    expresion -> exp
Rule 74    exp -> term exp_operator exp
Rule 75    exp -> term
Rule 76    term -> factor term_operator term
Rule 77    term -> factor
Rule 78    factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS
Rule 79    factor -> exp_operator opt_value
Rule 80    factor -> opt_value
Rule 81    opt_value -> CTEINT
Rule 82    opt_value -> CTEFLOAT
Rule 83    opt_value -> CTECHAR
Rule 84    opt_value -> function_call
Rule 85    opt_value -> identifier

Terminals, with rules where they appear

AND                  : 34
CHAR                 : 6
COMMA                : 11 25 58 59 70
COMPARISON           : 27
CTECHAR              : 83
CTEFLOAT             : 82
CTEINT               : 81
CTESTRING            : 58 60
DECREMENT            : 55
DIFFERENT            : 32
DIVIDE               : 38
DO                   : 66 67
ELSE                 : 62
EQUALS               : 51 67
FLOAT                : 5
FOR                  : 67
GREATERHANOREQUAL    : 28
GREATERTHAN          : 30
ID                   : 1 2 3 13 14 15 19 20 67 69
IF                   : 62 63
INCREMENT            : 54
INT                  : 4
LEFTBRACKET          : 40 41
LEFTPARENTHESIS      : 1 2 3 23 24 56 57 62 63 66 68 69 78
LEFTSQRBRACKET       : 16
LESSTHAN             : 31
LESSTHANOREQUAL      : 29
MAIN                 : 1 2 3
MINUS                : 36
MOD                  : 39
MODULE               : 19 20
MULTIPLY             : 37
OR                   : 33
PLUS                 : 35
PLUSEQUALS           : 52
PROGRAM              : 1 2 3
READ                 : 56
RETURN               : 68
RIGHTBRACKET         : 40 41
RIGHTPARENTHESIS     : 1 2 3 23 24 56 57 62 63 66 68 69 78
RIGHTSQRBRACKET      : 16
SEMICOLON            : 1 2 3 8 9 10 50 51 52 53 54 55 56 57 68
SUBSTRACTEQUALS      : 53
THEN                 : 62 63
TO                   : 67
VAR                  : 7
VOID                 : 18
WHILE                : 66
WRITE                : 57
error                : 

Nonterminals, with rules where they appear

asignation           : 44
block                : 1 2 3 19 20 62 62 63 64 65
comparators          : 72
conditional          : 64
data_type            : 8 9 10 17 25 26
decision             : 47
exp                  : 67 67 68 72 72 73 74
exp_operator         : 74 79
expresion            : 16 51 52 53 59 61 62 63 66 70 71 78
expresion_list       : 69 70
factor               : 76 77
function             : 21 22
function_call        : 50 84
function_return      : 49
functions_list       : 2 9 21
id_dimensions        : 13 13 14
identifier           : 11 12 25 26 51 52 53 54 55 85
ids_list             : 8 9 10 11 56
loop                 : 48
non_conditional      : 65
opt_value            : 79 80
parameter            : 23 25
parameters_list      : 19 20
program              : 0
reading              : 45
return_type          : 19 20
statute              : 42 43
statutes_list        : 40 42
term                 : 74 75 76
term_operator        : 76
vars                 : 1 19
vars_lists           : 7 8
writing              : 46
writing_list         : 57 58 59

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (2) program -> . PROGRAM ID SEMICOLON functions_list MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (3) program -> . PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (2) program -> PROGRAM . ID SEMICOLON functions_list MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (3) program -> PROGRAM . ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (2) program -> PROGRAM ID . SEMICOLON functions_list MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (3) program -> PROGRAM ID . SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (2) program -> PROGRAM ID SEMICOLON . functions_list MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (3) program -> PROGRAM ID SEMICOLON . MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (7) vars -> . VAR vars_lists
    (21) functions_list -> . function functions_list
    (22) functions_list -> . function
    (19) function -> . return_type MODULE ID parameters_list vars block
    (20) function -> . return_type MODULE ID parameters_list block
    (17) return_type -> . data_type
    (18) return_type -> . VOID
    (4) data_type -> . INT
    (5) data_type -> . FLOAT
    (6) data_type -> . CHAR

    MAIN            shift and go to state 6
    VAR             shift and go to state 8
    VOID            shift and go to state 12
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    vars                           shift and go to state 5
    functions_list                 shift and go to state 7
    function                       shift and go to state 9
    return_type                    shift and go to state 10
    data_type                      shift and go to state 11

state 5

    (1) program -> PROGRAM ID SEMICOLON vars . MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block

    MAIN            shift and go to state 16


state 6

    (3) program -> PROGRAM ID SEMICOLON MAIN . LEFTPARENTHESIS RIGHTPARENTHESIS block

    LEFTPARENTHESIS shift and go to state 17


state 7

    (2) program -> PROGRAM ID SEMICOLON functions_list . MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block

    MAIN            shift and go to state 18


state 8

    (7) vars -> VAR . vars_lists
    (8) vars_lists -> . data_type ids_list SEMICOLON vars_lists
    (9) vars_lists -> . data_type ids_list SEMICOLON functions_list
    (10) vars_lists -> . data_type ids_list SEMICOLON
    (4) data_type -> . INT
    (5) data_type -> . FLOAT
    (6) data_type -> . CHAR

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    vars_lists                     shift and go to state 19
    data_type                      shift and go to state 20

state 9

    (21) functions_list -> function . functions_list
    (22) functions_list -> function .
    (21) functions_list -> . function functions_list
    (22) functions_list -> . function
    (19) function -> . return_type MODULE ID parameters_list vars block
    (20) function -> . return_type MODULE ID parameters_list block
    (17) return_type -> . data_type
    (18) return_type -> . VOID
    (4) data_type -> . INT
    (5) data_type -> . FLOAT
    (6) data_type -> . CHAR

    MAIN            reduce using rule 22 (functions_list -> function .)
    LEFTBRACKET     reduce using rule 22 (functions_list -> function .)
    VOID            shift and go to state 12
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    function                       shift and go to state 9
    functions_list                 shift and go to state 21
    return_type                    shift and go to state 10
    data_type                      shift and go to state 11

state 10

    (19) function -> return_type . MODULE ID parameters_list vars block
    (20) function -> return_type . MODULE ID parameters_list block

    MODULE          shift and go to state 22


state 11

    (17) return_type -> data_type .

    MODULE          reduce using rule 17 (return_type -> data_type .)


state 12

    (18) return_type -> VOID .

    MODULE          reduce using rule 18 (return_type -> VOID .)


state 13

    (4) data_type -> INT .

    MODULE          reduce using rule 4 (data_type -> INT .)
    ID              reduce using rule 4 (data_type -> INT .)


state 14

    (5) data_type -> FLOAT .

    MODULE          reduce using rule 5 (data_type -> FLOAT .)
    ID              reduce using rule 5 (data_type -> FLOAT .)


state 15

    (6) data_type -> CHAR .

    MODULE          reduce using rule 6 (data_type -> CHAR .)
    ID              reduce using rule 6 (data_type -> CHAR .)


state 16

    (1) program -> PROGRAM ID SEMICOLON vars MAIN . LEFTPARENTHESIS RIGHTPARENTHESIS block

    LEFTPARENTHESIS shift and go to state 23


state 17

    (3) program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS . RIGHTPARENTHESIS block

    RIGHTPARENTHESIS shift and go to state 24


state 18

    (2) program -> PROGRAM ID SEMICOLON functions_list MAIN . LEFTPARENTHESIS RIGHTPARENTHESIS block

    LEFTPARENTHESIS shift and go to state 25


state 19

    (7) vars -> VAR vars_lists .

    MAIN            reduce using rule 7 (vars -> VAR vars_lists .)
    LEFTBRACKET     reduce using rule 7 (vars -> VAR vars_lists .)


state 20

    (8) vars_lists -> data_type . ids_list SEMICOLON vars_lists
    (9) vars_lists -> data_type . ids_list SEMICOLON functions_list
    (10) vars_lists -> data_type . ids_list SEMICOLON
    (11) ids_list -> . identifier COMMA ids_list
    (12) ids_list -> . identifier
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID

    ID              shift and go to state 28

    ids_list                       shift and go to state 26
    identifier                     shift and go to state 27

state 21

    (21) functions_list -> function functions_list .

    MAIN            reduce using rule 21 (functions_list -> function functions_list .)
    LEFTBRACKET     reduce using rule 21 (functions_list -> function functions_list .)


state 22

    (19) function -> return_type MODULE . ID parameters_list vars block
    (20) function -> return_type MODULE . ID parameters_list block

    ID              shift and go to state 29


state 23

    (1) program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS . RIGHTPARENTHESIS block

    RIGHTPARENTHESIS shift and go to state 30


state 24

    (3) program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS . block
    (40) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (41) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 32

    block                          shift and go to state 31

state 25

    (2) program -> PROGRAM ID SEMICOLON functions_list MAIN LEFTPARENTHESIS . RIGHTPARENTHESIS block

    RIGHTPARENTHESIS shift and go to state 33


state 26

    (8) vars_lists -> data_type ids_list . SEMICOLON vars_lists
    (9) vars_lists -> data_type ids_list . SEMICOLON functions_list
    (10) vars_lists -> data_type ids_list . SEMICOLON

    SEMICOLON       shift and go to state 34


state 27

    (11) ids_list -> identifier . COMMA ids_list
    (12) ids_list -> identifier .

    COMMA           shift and go to state 35
    SEMICOLON       reduce using rule 12 (ids_list -> identifier .)
    RIGHTPARENTHESIS reduce using rule 12 (ids_list -> identifier .)


state 28

    (13) identifier -> ID . id_dimensions id_dimensions
    (14) identifier -> ID . id_dimensions
    (15) identifier -> ID .
    (16) id_dimensions -> . LEFTSQRBRACKET expresion RIGHTSQRBRACKET

    COMMA           reduce using rule 15 (identifier -> ID .)
    SEMICOLON       reduce using rule 15 (identifier -> ID .)
    RIGHTPARENTHESIS reduce using rule 15 (identifier -> ID .)
    LEFTSQRBRACKET  shift and go to state 37

    id_dimensions                  shift and go to state 36

state 29

    (19) function -> return_type MODULE ID . parameters_list vars block
    (20) function -> return_type MODULE ID . parameters_list block
    (23) parameters_list -> . LEFTPARENTHESIS parameter RIGHTPARENTHESIS
    (24) parameters_list -> . LEFTPARENTHESIS RIGHTPARENTHESIS

    LEFTPARENTHESIS shift and go to state 39

    parameters_list                shift and go to state 38

state 30

    (1) program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS . block
    (40) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (41) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 32

    block                          shift and go to state 40

state 31

    (3) program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .

    $end            reduce using rule 3 (program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .)


state 32

    (40) block -> LEFTBRACKET . statutes_list RIGHTBRACKET
    (41) block -> LEFTBRACKET . RIGHTBRACKET
    (42) statutes_list -> . statute statutes_list
    (43) statutes_list -> . statute
    (44) statute -> . asignation
    (45) statute -> . reading
    (46) statute -> . writing
    (47) statute -> . decision
    (48) statute -> . loop
    (49) statute -> . function_return
    (50) statute -> . function_call SEMICOLON
    (51) asignation -> . identifier EQUALS expresion SEMICOLON
    (52) asignation -> . identifier PLUSEQUALS expresion SEMICOLON
    (53) asignation -> . identifier SUBSTRACTEQUALS expresion SEMICOLON
    (54) asignation -> . identifier INCREMENT SEMICOLON
    (55) asignation -> . identifier DECREMENT SEMICOLON
    (56) reading -> . READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON
    (57) writing -> . WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON
    (62) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block
    (63) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block
    (64) loop -> . conditional block
    (65) loop -> . non_conditional block
    (68) function_return -> . RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON
    (69) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID
    (66) conditional -> . WHILE LEFTPARENTHESIS expresion RIGHTPARENTHESIS DO
    (67) non_conditional -> . FOR ID EQUALS exp TO exp DO

    RIGHTBRACKET    shift and go to state 42
    READ            shift and go to state 52
    WRITE           shift and go to state 53
    IF              shift and go to state 54
    RETURN          shift and go to state 57
    ID              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60

    statutes_list                  shift and go to state 41
    statute                        shift and go to state 43
    asignation                     shift and go to state 44
    reading                        shift and go to state 45
    writing                        shift and go to state 46
    decision                       shift and go to state 47
    loop                           shift and go to state 48
    function_return                shift and go to state 49
    function_call                  shift and go to state 50
    identifier                     shift and go to state 51
    conditional                    shift and go to state 55
    non_conditional                shift and go to state 56

state 33

    (2) program -> PROGRAM ID SEMICOLON functions_list MAIN LEFTPARENTHESIS RIGHTPARENTHESIS . block
    (40) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (41) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 32

    block                          shift and go to state 61

state 34

    (8) vars_lists -> data_type ids_list SEMICOLON . vars_lists
    (9) vars_lists -> data_type ids_list SEMICOLON . functions_list
    (10) vars_lists -> data_type ids_list SEMICOLON .
    (8) vars_lists -> . data_type ids_list SEMICOLON vars_lists
    (9) vars_lists -> . data_type ids_list SEMICOLON functions_list
    (10) vars_lists -> . data_type ids_list SEMICOLON
    (21) functions_list -> . function functions_list
    (22) functions_list -> . function
    (4) data_type -> . INT
    (5) data_type -> . FLOAT
    (6) data_type -> . CHAR
    (19) function -> . return_type MODULE ID parameters_list vars block
    (20) function -> . return_type MODULE ID parameters_list block
    (17) return_type -> . data_type
    (18) return_type -> . VOID

    MAIN            reduce using rule 10 (vars_lists -> data_type ids_list SEMICOLON .)
    LEFTBRACKET     reduce using rule 10 (vars_lists -> data_type ids_list SEMICOLON .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 12

    data_type                      shift and go to state 62
    vars_lists                     shift and go to state 63
    functions_list                 shift and go to state 64
    function                       shift and go to state 9
    return_type                    shift and go to state 10

state 35

    (11) ids_list -> identifier COMMA . ids_list
    (11) ids_list -> . identifier COMMA ids_list
    (12) ids_list -> . identifier
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID

    ID              shift and go to state 28

    identifier                     shift and go to state 27
    ids_list                       shift and go to state 65

state 36

    (13) identifier -> ID id_dimensions . id_dimensions
    (14) identifier -> ID id_dimensions .
    (16) id_dimensions -> . LEFTSQRBRACKET expresion RIGHTSQRBRACKET

    COMMA           reduce using rule 14 (identifier -> ID id_dimensions .)
    SEMICOLON       reduce using rule 14 (identifier -> ID id_dimensions .)
    EQUALS          reduce using rule 14 (identifier -> ID id_dimensions .)
    PLUSEQUALS      reduce using rule 14 (identifier -> ID id_dimensions .)
    SUBSTRACTEQUALS reduce using rule 14 (identifier -> ID id_dimensions .)
    INCREMENT       reduce using rule 14 (identifier -> ID id_dimensions .)
    DECREMENT       reduce using rule 14 (identifier -> ID id_dimensions .)
    RIGHTPARENTHESIS reduce using rule 14 (identifier -> ID id_dimensions .)
    MULTIPLY        reduce using rule 14 (identifier -> ID id_dimensions .)
    DIVIDE          reduce using rule 14 (identifier -> ID id_dimensions .)
    MOD             reduce using rule 14 (identifier -> ID id_dimensions .)
    PLUS            reduce using rule 14 (identifier -> ID id_dimensions .)
    MINUS           reduce using rule 14 (identifier -> ID id_dimensions .)
    COMPARISON      reduce using rule 14 (identifier -> ID id_dimensions .)
    GREATERHANOREQUAL reduce using rule 14 (identifier -> ID id_dimensions .)
    LESSTHANOREQUAL reduce using rule 14 (identifier -> ID id_dimensions .)
    GREATERTHAN     reduce using rule 14 (identifier -> ID id_dimensions .)
    LESSTHAN        reduce using rule 14 (identifier -> ID id_dimensions .)
    DIFFERENT       reduce using rule 14 (identifier -> ID id_dimensions .)
    OR              reduce using rule 14 (identifier -> ID id_dimensions .)
    AND             reduce using rule 14 (identifier -> ID id_dimensions .)
    RIGHTSQRBRACKET reduce using rule 14 (identifier -> ID id_dimensions .)
    TO              reduce using rule 14 (identifier -> ID id_dimensions .)
    DO              reduce using rule 14 (identifier -> ID id_dimensions .)
    LEFTSQRBRACKET  shift and go to state 37

    id_dimensions                  shift and go to state 66

state 37

    (16) id_dimensions -> LEFTSQRBRACKET . expresion RIGHTSQRBRACKET
    (72) expresion -> . exp comparators exp
    (73) expresion -> . exp
    (74) exp -> . term exp_operator exp
    (75) exp -> . term
    (76) term -> . factor term_operator term
    (77) term -> . factor
    (78) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (79) factor -> . exp_operator opt_value
    (80) factor -> . opt_value
    (35) exp_operator -> . PLUS
    (36) exp_operator -> . MINUS
    (81) opt_value -> . CTEINT
    (82) opt_value -> . CTEFLOAT
    (83) opt_value -> . CTECHAR
    (84) opt_value -> . function_call
    (85) opt_value -> . identifier
    (69) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CTEINT          shift and go to state 76
    CTEFLOAT        shift and go to state 77
    CTECHAR         shift and go to state 78
    ID              shift and go to state 58

    expresion                      shift and go to state 67
    exp                            shift and go to state 68
    term                           shift and go to state 69
    exp_operator                   shift and go to state 70
    factor                         shift and go to state 71
    opt_value                      shift and go to state 73
    function_call                  shift and go to state 79
    identifier                     shift and go to state 80

state 38

    (19) function -> return_type MODULE ID parameters_list . vars block
    (20) function -> return_type MODULE ID parameters_list . block
    (7) vars -> . VAR vars_lists
    (40) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (41) block -> . LEFTBRACKET RIGHTBRACKET

    VAR             shift and go to state 8
    LEFTBRACKET     shift and go to state 32

    vars                           shift and go to state 81
    block                          shift and go to state 82

state 39

    (23) parameters_list -> LEFTPARENTHESIS . parameter RIGHTPARENTHESIS
    (24) parameters_list -> LEFTPARENTHESIS . RIGHTPARENTHESIS
    (25) parameter -> . data_type identifier COMMA parameter
    (26) parameter -> . data_type identifier
    (4) data_type -> . INT
    (5) data_type -> . FLOAT
    (6) data_type -> . CHAR

    RIGHTPARENTHESIS shift and go to state 84
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    parameter                      shift and go to state 83
    data_type                      shift and go to state 85

state 40

    (1) program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .)


state 41

    (40) block -> LEFTBRACKET statutes_list . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 86


state 42

    (41) block -> LEFTBRACKET RIGHTBRACKET .

    $end            reduce using rule 41 (block -> LEFTBRACKET RIGHTBRACKET .)
    VOID            reduce using rule 41 (block -> LEFTBRACKET RIGHTBRACKET .)
    INT             reduce using rule 41 (block -> LEFTBRACKET RIGHTBRACKET .)
    FLOAT           reduce using rule 41 (block -> LEFTBRACKET RIGHTBRACKET .)
    CHAR            reduce using rule 41 (block -> LEFTBRACKET RIGHTBRACKET .)
    MAIN            reduce using rule 41 (block -> LEFTBRACKET RIGHTBRACKET .)
    LEFTBRACKET     reduce using rule 41 (block -> LEFTBRACKET RIGHTBRACKET .)
    READ            reduce using rule 41 (block -> LEFTBRACKET RIGHTBRACKET .)
    WRITE           reduce using rule 41 (block -> LEFTBRACKET RIGHTBRACKET .)
    IF              reduce using rule 41 (block -> LEFTBRACKET RIGHTBRACKET .)
    RETURN          reduce using rule 41 (block -> LEFTBRACKET RIGHTBRACKET .)
    ID              reduce using rule 41 (block -> LEFTBRACKET RIGHTBRACKET .)
    WHILE           reduce using rule 41 (block -> LEFTBRACKET RIGHTBRACKET .)
    FOR             reduce using rule 41 (block -> LEFTBRACKET RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 41 (block -> LEFTBRACKET RIGHTBRACKET .)
    ELSE            reduce using rule 41 (block -> LEFTBRACKET RIGHTBRACKET .)


state 43

    (42) statutes_list -> statute . statutes_list
    (43) statutes_list -> statute .
    (42) statutes_list -> . statute statutes_list
    (43) statutes_list -> . statute
    (44) statute -> . asignation
    (45) statute -> . reading
    (46) statute -> . writing
    (47) statute -> . decision
    (48) statute -> . loop
    (49) statute -> . function_return
    (50) statute -> . function_call SEMICOLON
    (51) asignation -> . identifier EQUALS expresion SEMICOLON
    (52) asignation -> . identifier PLUSEQUALS expresion SEMICOLON
    (53) asignation -> . identifier SUBSTRACTEQUALS expresion SEMICOLON
    (54) asignation -> . identifier INCREMENT SEMICOLON
    (55) asignation -> . identifier DECREMENT SEMICOLON
    (56) reading -> . READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON
    (57) writing -> . WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON
    (62) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block
    (63) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block
    (64) loop -> . conditional block
    (65) loop -> . non_conditional block
    (68) function_return -> . RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON
    (69) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID
    (66) conditional -> . WHILE LEFTPARENTHESIS expresion RIGHTPARENTHESIS DO
    (67) non_conditional -> . FOR ID EQUALS exp TO exp DO

    RIGHTBRACKET    reduce using rule 43 (statutes_list -> statute .)
    READ            shift and go to state 52
    WRITE           shift and go to state 53
    IF              shift and go to state 54
    RETURN          shift and go to state 57
    ID              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60

    statute                        shift and go to state 43
    statutes_list                  shift and go to state 87
    asignation                     shift and go to state 44
    reading                        shift and go to state 45
    writing                        shift and go to state 46
    decision                       shift and go to state 47
    loop                           shift and go to state 48
    function_return                shift and go to state 49
    function_call                  shift and go to state 50
    identifier                     shift and go to state 51
    conditional                    shift and go to state 55
    non_conditional                shift and go to state 56

state 44

    (44) statute -> asignation .

    READ            reduce using rule 44 (statute -> asignation .)
    WRITE           reduce using rule 44 (statute -> asignation .)
    IF              reduce using rule 44 (statute -> asignation .)
    RETURN          reduce using rule 44 (statute -> asignation .)
    ID              reduce using rule 44 (statute -> asignation .)
    WHILE           reduce using rule 44 (statute -> asignation .)
    FOR             reduce using rule 44 (statute -> asignation .)
    RIGHTBRACKET    reduce using rule 44 (statute -> asignation .)


state 45

    (45) statute -> reading .

    READ            reduce using rule 45 (statute -> reading .)
    WRITE           reduce using rule 45 (statute -> reading .)
    IF              reduce using rule 45 (statute -> reading .)
    RETURN          reduce using rule 45 (statute -> reading .)
    ID              reduce using rule 45 (statute -> reading .)
    WHILE           reduce using rule 45 (statute -> reading .)
    FOR             reduce using rule 45 (statute -> reading .)
    RIGHTBRACKET    reduce using rule 45 (statute -> reading .)


state 46

    (46) statute -> writing .

    READ            reduce using rule 46 (statute -> writing .)
    WRITE           reduce using rule 46 (statute -> writing .)
    IF              reduce using rule 46 (statute -> writing .)
    RETURN          reduce using rule 46 (statute -> writing .)
    ID              reduce using rule 46 (statute -> writing .)
    WHILE           reduce using rule 46 (statute -> writing .)
    FOR             reduce using rule 46 (statute -> writing .)
    RIGHTBRACKET    reduce using rule 46 (statute -> writing .)


state 47

    (47) statute -> decision .

    READ            reduce using rule 47 (statute -> decision .)
    WRITE           reduce using rule 47 (statute -> decision .)
    IF              reduce using rule 47 (statute -> decision .)
    RETURN          reduce using rule 47 (statute -> decision .)
    ID              reduce using rule 47 (statute -> decision .)
    WHILE           reduce using rule 47 (statute -> decision .)
    FOR             reduce using rule 47 (statute -> decision .)
    RIGHTBRACKET    reduce using rule 47 (statute -> decision .)


state 48

    (48) statute -> loop .

    READ            reduce using rule 48 (statute -> loop .)
    WRITE           reduce using rule 48 (statute -> loop .)
    IF              reduce using rule 48 (statute -> loop .)
    RETURN          reduce using rule 48 (statute -> loop .)
    ID              reduce using rule 48 (statute -> loop .)
    WHILE           reduce using rule 48 (statute -> loop .)
    FOR             reduce using rule 48 (statute -> loop .)
    RIGHTBRACKET    reduce using rule 48 (statute -> loop .)


state 49

    (49) statute -> function_return .

    READ            reduce using rule 49 (statute -> function_return .)
    WRITE           reduce using rule 49 (statute -> function_return .)
    IF              reduce using rule 49 (statute -> function_return .)
    RETURN          reduce using rule 49 (statute -> function_return .)
    ID              reduce using rule 49 (statute -> function_return .)
    WHILE           reduce using rule 49 (statute -> function_return .)
    FOR             reduce using rule 49 (statute -> function_return .)
    RIGHTBRACKET    reduce using rule 49 (statute -> function_return .)


state 50

    (50) statute -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 88


state 51

    (51) asignation -> identifier . EQUALS expresion SEMICOLON
    (52) asignation -> identifier . PLUSEQUALS expresion SEMICOLON
    (53) asignation -> identifier . SUBSTRACTEQUALS expresion SEMICOLON
    (54) asignation -> identifier . INCREMENT SEMICOLON
    (55) asignation -> identifier . DECREMENT SEMICOLON

    EQUALS          shift and go to state 89
    PLUSEQUALS      shift and go to state 90
    SUBSTRACTEQUALS shift and go to state 91
    INCREMENT       shift and go to state 92
    DECREMENT       shift and go to state 93


state 52

    (56) reading -> READ . LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON

    LEFTPARENTHESIS shift and go to state 94


state 53

    (57) writing -> WRITE . LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON

    LEFTPARENTHESIS shift and go to state 95


state 54

    (62) decision -> IF . LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block
    (63) decision -> IF . LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block

    LEFTPARENTHESIS shift and go to state 96


state 55

    (64) loop -> conditional . block
    (40) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (41) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 32

    block                          shift and go to state 97

state 56

    (65) loop -> non_conditional . block
    (40) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (41) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 32

    block                          shift and go to state 98

state 57

    (68) function_return -> RETURN . LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON

    LEFTPARENTHESIS shift and go to state 99


state 58

    (69) function_call -> ID . LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (13) identifier -> ID . id_dimensions id_dimensions
    (14) identifier -> ID . id_dimensions
    (15) identifier -> ID .
    (16) id_dimensions -> . LEFTSQRBRACKET expresion RIGHTSQRBRACKET

    LEFTPARENTHESIS shift and go to state 100
    EQUALS          reduce using rule 15 (identifier -> ID .)
    PLUSEQUALS      reduce using rule 15 (identifier -> ID .)
    SUBSTRACTEQUALS reduce using rule 15 (identifier -> ID .)
    INCREMENT       reduce using rule 15 (identifier -> ID .)
    DECREMENT       reduce using rule 15 (identifier -> ID .)
    MULTIPLY        reduce using rule 15 (identifier -> ID .)
    DIVIDE          reduce using rule 15 (identifier -> ID .)
    MOD             reduce using rule 15 (identifier -> ID .)
    PLUS            reduce using rule 15 (identifier -> ID .)
    MINUS           reduce using rule 15 (identifier -> ID .)
    COMPARISON      reduce using rule 15 (identifier -> ID .)
    GREATERHANOREQUAL reduce using rule 15 (identifier -> ID .)
    LESSTHANOREQUAL reduce using rule 15 (identifier -> ID .)
    GREATERTHAN     reduce using rule 15 (identifier -> ID .)
    LESSTHAN        reduce using rule 15 (identifier -> ID .)
    DIFFERENT       reduce using rule 15 (identifier -> ID .)
    OR              reduce using rule 15 (identifier -> ID .)
    AND             reduce using rule 15 (identifier -> ID .)
    RIGHTSQRBRACKET reduce using rule 15 (identifier -> ID .)
    RIGHTPARENTHESIS reduce using rule 15 (identifier -> ID .)
    SEMICOLON       reduce using rule 15 (identifier -> ID .)
    COMMA           reduce using rule 15 (identifier -> ID .)
    TO              reduce using rule 15 (identifier -> ID .)
    DO              reduce using rule 15 (identifier -> ID .)
    LEFTSQRBRACKET  shift and go to state 37

    id_dimensions                  shift and go to state 36

state 59

    (66) conditional -> WHILE . LEFTPARENTHESIS expresion RIGHTPARENTHESIS DO

    LEFTPARENTHESIS shift and go to state 101


state 60

    (67) non_conditional -> FOR . ID EQUALS exp TO exp DO

    ID              shift and go to state 102


state 61

    (2) program -> PROGRAM ID SEMICOLON functions_list MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .

    $end            reduce using rule 2 (program -> PROGRAM ID SEMICOLON functions_list MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .)


state 62

    (8) vars_lists -> data_type . ids_list SEMICOLON vars_lists
    (9) vars_lists -> data_type . ids_list SEMICOLON functions_list
    (10) vars_lists -> data_type . ids_list SEMICOLON
    (17) return_type -> data_type .
    (11) ids_list -> . identifier COMMA ids_list
    (12) ids_list -> . identifier
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID

    MODULE          reduce using rule 17 (return_type -> data_type .)
    ID              shift and go to state 28

    ids_list                       shift and go to state 26
    identifier                     shift and go to state 27

state 63

    (8) vars_lists -> data_type ids_list SEMICOLON vars_lists .

    MAIN            reduce using rule 8 (vars_lists -> data_type ids_list SEMICOLON vars_lists .)
    LEFTBRACKET     reduce using rule 8 (vars_lists -> data_type ids_list SEMICOLON vars_lists .)


state 64

    (9) vars_lists -> data_type ids_list SEMICOLON functions_list .

    MAIN            reduce using rule 9 (vars_lists -> data_type ids_list SEMICOLON functions_list .)
    LEFTBRACKET     reduce using rule 9 (vars_lists -> data_type ids_list SEMICOLON functions_list .)


state 65

    (11) ids_list -> identifier COMMA ids_list .

    SEMICOLON       reduce using rule 11 (ids_list -> identifier COMMA ids_list .)
    RIGHTPARENTHESIS reduce using rule 11 (ids_list -> identifier COMMA ids_list .)


state 66

    (13) identifier -> ID id_dimensions id_dimensions .

    COMMA           reduce using rule 13 (identifier -> ID id_dimensions id_dimensions .)
    SEMICOLON       reduce using rule 13 (identifier -> ID id_dimensions id_dimensions .)
    EQUALS          reduce using rule 13 (identifier -> ID id_dimensions id_dimensions .)
    PLUSEQUALS      reduce using rule 13 (identifier -> ID id_dimensions id_dimensions .)
    SUBSTRACTEQUALS reduce using rule 13 (identifier -> ID id_dimensions id_dimensions .)
    INCREMENT       reduce using rule 13 (identifier -> ID id_dimensions id_dimensions .)
    DECREMENT       reduce using rule 13 (identifier -> ID id_dimensions id_dimensions .)
    RIGHTPARENTHESIS reduce using rule 13 (identifier -> ID id_dimensions id_dimensions .)
    MULTIPLY        reduce using rule 13 (identifier -> ID id_dimensions id_dimensions .)
    DIVIDE          reduce using rule 13 (identifier -> ID id_dimensions id_dimensions .)
    MOD             reduce using rule 13 (identifier -> ID id_dimensions id_dimensions .)
    PLUS            reduce using rule 13 (identifier -> ID id_dimensions id_dimensions .)
    MINUS           reduce using rule 13 (identifier -> ID id_dimensions id_dimensions .)
    COMPARISON      reduce using rule 13 (identifier -> ID id_dimensions id_dimensions .)
    GREATERHANOREQUAL reduce using rule 13 (identifier -> ID id_dimensions id_dimensions .)
    LESSTHANOREQUAL reduce using rule 13 (identifier -> ID id_dimensions id_dimensions .)
    GREATERTHAN     reduce using rule 13 (identifier -> ID id_dimensions id_dimensions .)
    LESSTHAN        reduce using rule 13 (identifier -> ID id_dimensions id_dimensions .)
    DIFFERENT       reduce using rule 13 (identifier -> ID id_dimensions id_dimensions .)
    OR              reduce using rule 13 (identifier -> ID id_dimensions id_dimensions .)
    AND             reduce using rule 13 (identifier -> ID id_dimensions id_dimensions .)
    RIGHTSQRBRACKET reduce using rule 13 (identifier -> ID id_dimensions id_dimensions .)
    TO              reduce using rule 13 (identifier -> ID id_dimensions id_dimensions .)
    DO              reduce using rule 13 (identifier -> ID id_dimensions id_dimensions .)


state 67

    (16) id_dimensions -> LEFTSQRBRACKET expresion . RIGHTSQRBRACKET

    RIGHTSQRBRACKET shift and go to state 103


state 68

    (72) expresion -> exp . comparators exp
    (73) expresion -> exp .
    (27) comparators -> . COMPARISON
    (28) comparators -> . GREATERHANOREQUAL
    (29) comparators -> . LESSTHANOREQUAL
    (30) comparators -> . GREATERTHAN
    (31) comparators -> . LESSTHAN
    (32) comparators -> . DIFFERENT
    (33) comparators -> . OR
    (34) comparators -> . AND

    RIGHTSQRBRACKET reduce using rule 73 (expresion -> exp .)
    RIGHTPARENTHESIS reduce using rule 73 (expresion -> exp .)
    SEMICOLON       reduce using rule 73 (expresion -> exp .)
    COMMA           reduce using rule 73 (expresion -> exp .)
    COMPARISON      shift and go to state 105
    GREATERHANOREQUAL shift and go to state 106
    LESSTHANOREQUAL shift and go to state 107
    GREATERTHAN     shift and go to state 108
    LESSTHAN        shift and go to state 109
    DIFFERENT       shift and go to state 110
    OR              shift and go to state 111
    AND             shift and go to state 112

    comparators                    shift and go to state 104

state 69

    (74) exp -> term . exp_operator exp
    (75) exp -> term .
    (35) exp_operator -> . PLUS
    (36) exp_operator -> . MINUS

    COMPARISON      reduce using rule 75 (exp -> term .)
    GREATERHANOREQUAL reduce using rule 75 (exp -> term .)
    LESSTHANOREQUAL reduce using rule 75 (exp -> term .)
    GREATERTHAN     reduce using rule 75 (exp -> term .)
    LESSTHAN        reduce using rule 75 (exp -> term .)
    DIFFERENT       reduce using rule 75 (exp -> term .)
    OR              reduce using rule 75 (exp -> term .)
    AND             reduce using rule 75 (exp -> term .)
    RIGHTSQRBRACKET reduce using rule 75 (exp -> term .)
    RIGHTPARENTHESIS reduce using rule 75 (exp -> term .)
    SEMICOLON       reduce using rule 75 (exp -> term .)
    COMMA           reduce using rule 75 (exp -> term .)
    TO              reduce using rule 75 (exp -> term .)
    DO              reduce using rule 75 (exp -> term .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75

    exp_operator                   shift and go to state 113

state 70

    (79) factor -> exp_operator . opt_value
    (81) opt_value -> . CTEINT
    (82) opt_value -> . CTEFLOAT
    (83) opt_value -> . CTECHAR
    (84) opt_value -> . function_call
    (85) opt_value -> . identifier
    (69) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID

    CTEINT          shift and go to state 76
    CTEFLOAT        shift and go to state 77
    CTECHAR         shift and go to state 78
    ID              shift and go to state 58

    opt_value                      shift and go to state 114
    function_call                  shift and go to state 79
    identifier                     shift and go to state 80

state 71

    (76) term -> factor . term_operator term
    (77) term -> factor .
    (37) term_operator -> . MULTIPLY
    (38) term_operator -> . DIVIDE
    (39) term_operator -> . MOD

    PLUS            reduce using rule 77 (term -> factor .)
    MINUS           reduce using rule 77 (term -> factor .)
    COMPARISON      reduce using rule 77 (term -> factor .)
    GREATERHANOREQUAL reduce using rule 77 (term -> factor .)
    LESSTHANOREQUAL reduce using rule 77 (term -> factor .)
    GREATERTHAN     reduce using rule 77 (term -> factor .)
    LESSTHAN        reduce using rule 77 (term -> factor .)
    DIFFERENT       reduce using rule 77 (term -> factor .)
    OR              reduce using rule 77 (term -> factor .)
    AND             reduce using rule 77 (term -> factor .)
    RIGHTSQRBRACKET reduce using rule 77 (term -> factor .)
    RIGHTPARENTHESIS reduce using rule 77 (term -> factor .)
    SEMICOLON       reduce using rule 77 (term -> factor .)
    COMMA           reduce using rule 77 (term -> factor .)
    TO              reduce using rule 77 (term -> factor .)
    DO              reduce using rule 77 (term -> factor .)
    MULTIPLY        shift and go to state 116
    DIVIDE          shift and go to state 117
    MOD             shift and go to state 118

    term_operator                  shift and go to state 115

state 72

    (78) factor -> LEFTPARENTHESIS . expresion RIGHTPARENTHESIS
    (72) expresion -> . exp comparators exp
    (73) expresion -> . exp
    (74) exp -> . term exp_operator exp
    (75) exp -> . term
    (76) term -> . factor term_operator term
    (77) term -> . factor
    (78) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (79) factor -> . exp_operator opt_value
    (80) factor -> . opt_value
    (35) exp_operator -> . PLUS
    (36) exp_operator -> . MINUS
    (81) opt_value -> . CTEINT
    (82) opt_value -> . CTEFLOAT
    (83) opt_value -> . CTECHAR
    (84) opt_value -> . function_call
    (85) opt_value -> . identifier
    (69) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CTEINT          shift and go to state 76
    CTEFLOAT        shift and go to state 77
    CTECHAR         shift and go to state 78
    ID              shift and go to state 58

    expresion                      shift and go to state 119
    exp                            shift and go to state 68
    term                           shift and go to state 69
    exp_operator                   shift and go to state 70
    factor                         shift and go to state 71
    opt_value                      shift and go to state 73
    function_call                  shift and go to state 79
    identifier                     shift and go to state 80

state 73

    (80) factor -> opt_value .

    MULTIPLY        reduce using rule 80 (factor -> opt_value .)
    DIVIDE          reduce using rule 80 (factor -> opt_value .)
    MOD             reduce using rule 80 (factor -> opt_value .)
    PLUS            reduce using rule 80 (factor -> opt_value .)
    MINUS           reduce using rule 80 (factor -> opt_value .)
    COMPARISON      reduce using rule 80 (factor -> opt_value .)
    GREATERHANOREQUAL reduce using rule 80 (factor -> opt_value .)
    LESSTHANOREQUAL reduce using rule 80 (factor -> opt_value .)
    GREATERTHAN     reduce using rule 80 (factor -> opt_value .)
    LESSTHAN        reduce using rule 80 (factor -> opt_value .)
    DIFFERENT       reduce using rule 80 (factor -> opt_value .)
    OR              reduce using rule 80 (factor -> opt_value .)
    AND             reduce using rule 80 (factor -> opt_value .)
    RIGHTSQRBRACKET reduce using rule 80 (factor -> opt_value .)
    RIGHTPARENTHESIS reduce using rule 80 (factor -> opt_value .)
    SEMICOLON       reduce using rule 80 (factor -> opt_value .)
    COMMA           reduce using rule 80 (factor -> opt_value .)
    TO              reduce using rule 80 (factor -> opt_value .)
    DO              reduce using rule 80 (factor -> opt_value .)


state 74

    (35) exp_operator -> PLUS .

    CTEINT          reduce using rule 35 (exp_operator -> PLUS .)
    CTEFLOAT        reduce using rule 35 (exp_operator -> PLUS .)
    CTECHAR         reduce using rule 35 (exp_operator -> PLUS .)
    ID              reduce using rule 35 (exp_operator -> PLUS .)
    LEFTPARENTHESIS reduce using rule 35 (exp_operator -> PLUS .)
    PLUS            reduce using rule 35 (exp_operator -> PLUS .)
    MINUS           reduce using rule 35 (exp_operator -> PLUS .)


state 75

    (36) exp_operator -> MINUS .

    CTEINT          reduce using rule 36 (exp_operator -> MINUS .)
    CTEFLOAT        reduce using rule 36 (exp_operator -> MINUS .)
    CTECHAR         reduce using rule 36 (exp_operator -> MINUS .)
    ID              reduce using rule 36 (exp_operator -> MINUS .)
    LEFTPARENTHESIS reduce using rule 36 (exp_operator -> MINUS .)
    PLUS            reduce using rule 36 (exp_operator -> MINUS .)
    MINUS           reduce using rule 36 (exp_operator -> MINUS .)


state 76

    (81) opt_value -> CTEINT .

    MULTIPLY        reduce using rule 81 (opt_value -> CTEINT .)
    DIVIDE          reduce using rule 81 (opt_value -> CTEINT .)
    MOD             reduce using rule 81 (opt_value -> CTEINT .)
    PLUS            reduce using rule 81 (opt_value -> CTEINT .)
    MINUS           reduce using rule 81 (opt_value -> CTEINT .)
    COMPARISON      reduce using rule 81 (opt_value -> CTEINT .)
    GREATERHANOREQUAL reduce using rule 81 (opt_value -> CTEINT .)
    LESSTHANOREQUAL reduce using rule 81 (opt_value -> CTEINT .)
    GREATERTHAN     reduce using rule 81 (opt_value -> CTEINT .)
    LESSTHAN        reduce using rule 81 (opt_value -> CTEINT .)
    DIFFERENT       reduce using rule 81 (opt_value -> CTEINT .)
    OR              reduce using rule 81 (opt_value -> CTEINT .)
    AND             reduce using rule 81 (opt_value -> CTEINT .)
    RIGHTSQRBRACKET reduce using rule 81 (opt_value -> CTEINT .)
    RIGHTPARENTHESIS reduce using rule 81 (opt_value -> CTEINT .)
    SEMICOLON       reduce using rule 81 (opt_value -> CTEINT .)
    COMMA           reduce using rule 81 (opt_value -> CTEINT .)
    TO              reduce using rule 81 (opt_value -> CTEINT .)
    DO              reduce using rule 81 (opt_value -> CTEINT .)


state 77

    (82) opt_value -> CTEFLOAT .

    MULTIPLY        reduce using rule 82 (opt_value -> CTEFLOAT .)
    DIVIDE          reduce using rule 82 (opt_value -> CTEFLOAT .)
    MOD             reduce using rule 82 (opt_value -> CTEFLOAT .)
    PLUS            reduce using rule 82 (opt_value -> CTEFLOAT .)
    MINUS           reduce using rule 82 (opt_value -> CTEFLOAT .)
    COMPARISON      reduce using rule 82 (opt_value -> CTEFLOAT .)
    GREATERHANOREQUAL reduce using rule 82 (opt_value -> CTEFLOAT .)
    LESSTHANOREQUAL reduce using rule 82 (opt_value -> CTEFLOAT .)
    GREATERTHAN     reduce using rule 82 (opt_value -> CTEFLOAT .)
    LESSTHAN        reduce using rule 82 (opt_value -> CTEFLOAT .)
    DIFFERENT       reduce using rule 82 (opt_value -> CTEFLOAT .)
    OR              reduce using rule 82 (opt_value -> CTEFLOAT .)
    AND             reduce using rule 82 (opt_value -> CTEFLOAT .)
    RIGHTSQRBRACKET reduce using rule 82 (opt_value -> CTEFLOAT .)
    RIGHTPARENTHESIS reduce using rule 82 (opt_value -> CTEFLOAT .)
    SEMICOLON       reduce using rule 82 (opt_value -> CTEFLOAT .)
    COMMA           reduce using rule 82 (opt_value -> CTEFLOAT .)
    TO              reduce using rule 82 (opt_value -> CTEFLOAT .)
    DO              reduce using rule 82 (opt_value -> CTEFLOAT .)


state 78

    (83) opt_value -> CTECHAR .

    MULTIPLY        reduce using rule 83 (opt_value -> CTECHAR .)
    DIVIDE          reduce using rule 83 (opt_value -> CTECHAR .)
    MOD             reduce using rule 83 (opt_value -> CTECHAR .)
    PLUS            reduce using rule 83 (opt_value -> CTECHAR .)
    MINUS           reduce using rule 83 (opt_value -> CTECHAR .)
    COMPARISON      reduce using rule 83 (opt_value -> CTECHAR .)
    GREATERHANOREQUAL reduce using rule 83 (opt_value -> CTECHAR .)
    LESSTHANOREQUAL reduce using rule 83 (opt_value -> CTECHAR .)
    GREATERTHAN     reduce using rule 83 (opt_value -> CTECHAR .)
    LESSTHAN        reduce using rule 83 (opt_value -> CTECHAR .)
    DIFFERENT       reduce using rule 83 (opt_value -> CTECHAR .)
    OR              reduce using rule 83 (opt_value -> CTECHAR .)
    AND             reduce using rule 83 (opt_value -> CTECHAR .)
    RIGHTSQRBRACKET reduce using rule 83 (opt_value -> CTECHAR .)
    RIGHTPARENTHESIS reduce using rule 83 (opt_value -> CTECHAR .)
    SEMICOLON       reduce using rule 83 (opt_value -> CTECHAR .)
    COMMA           reduce using rule 83 (opt_value -> CTECHAR .)
    TO              reduce using rule 83 (opt_value -> CTECHAR .)
    DO              reduce using rule 83 (opt_value -> CTECHAR .)


state 79

    (84) opt_value -> function_call .

    MULTIPLY        reduce using rule 84 (opt_value -> function_call .)
    DIVIDE          reduce using rule 84 (opt_value -> function_call .)
    MOD             reduce using rule 84 (opt_value -> function_call .)
    PLUS            reduce using rule 84 (opt_value -> function_call .)
    MINUS           reduce using rule 84 (opt_value -> function_call .)
    COMPARISON      reduce using rule 84 (opt_value -> function_call .)
    GREATERHANOREQUAL reduce using rule 84 (opt_value -> function_call .)
    LESSTHANOREQUAL reduce using rule 84 (opt_value -> function_call .)
    GREATERTHAN     reduce using rule 84 (opt_value -> function_call .)
    LESSTHAN        reduce using rule 84 (opt_value -> function_call .)
    DIFFERENT       reduce using rule 84 (opt_value -> function_call .)
    OR              reduce using rule 84 (opt_value -> function_call .)
    AND             reduce using rule 84 (opt_value -> function_call .)
    RIGHTSQRBRACKET reduce using rule 84 (opt_value -> function_call .)
    RIGHTPARENTHESIS reduce using rule 84 (opt_value -> function_call .)
    SEMICOLON       reduce using rule 84 (opt_value -> function_call .)
    COMMA           reduce using rule 84 (opt_value -> function_call .)
    TO              reduce using rule 84 (opt_value -> function_call .)
    DO              reduce using rule 84 (opt_value -> function_call .)


state 80

    (85) opt_value -> identifier .

    MULTIPLY        reduce using rule 85 (opt_value -> identifier .)
    DIVIDE          reduce using rule 85 (opt_value -> identifier .)
    MOD             reduce using rule 85 (opt_value -> identifier .)
    PLUS            reduce using rule 85 (opt_value -> identifier .)
    MINUS           reduce using rule 85 (opt_value -> identifier .)
    COMPARISON      reduce using rule 85 (opt_value -> identifier .)
    GREATERHANOREQUAL reduce using rule 85 (opt_value -> identifier .)
    LESSTHANOREQUAL reduce using rule 85 (opt_value -> identifier .)
    GREATERTHAN     reduce using rule 85 (opt_value -> identifier .)
    LESSTHAN        reduce using rule 85 (opt_value -> identifier .)
    DIFFERENT       reduce using rule 85 (opt_value -> identifier .)
    OR              reduce using rule 85 (opt_value -> identifier .)
    AND             reduce using rule 85 (opt_value -> identifier .)
    RIGHTSQRBRACKET reduce using rule 85 (opt_value -> identifier .)
    RIGHTPARENTHESIS reduce using rule 85 (opt_value -> identifier .)
    SEMICOLON       reduce using rule 85 (opt_value -> identifier .)
    COMMA           reduce using rule 85 (opt_value -> identifier .)
    TO              reduce using rule 85 (opt_value -> identifier .)
    DO              reduce using rule 85 (opt_value -> identifier .)


state 81

    (19) function -> return_type MODULE ID parameters_list vars . block
    (40) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (41) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 32

    block                          shift and go to state 120

state 82

    (20) function -> return_type MODULE ID parameters_list block .

    VOID            reduce using rule 20 (function -> return_type MODULE ID parameters_list block .)
    INT             reduce using rule 20 (function -> return_type MODULE ID parameters_list block .)
    FLOAT           reduce using rule 20 (function -> return_type MODULE ID parameters_list block .)
    CHAR            reduce using rule 20 (function -> return_type MODULE ID parameters_list block .)
    MAIN            reduce using rule 20 (function -> return_type MODULE ID parameters_list block .)
    LEFTBRACKET     reduce using rule 20 (function -> return_type MODULE ID parameters_list block .)


state 83

    (23) parameters_list -> LEFTPARENTHESIS parameter . RIGHTPARENTHESIS

    RIGHTPARENTHESIS shift and go to state 121


state 84

    (24) parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS .

    VAR             reduce using rule 24 (parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS .)
    LEFTBRACKET     reduce using rule 24 (parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS .)


state 85

    (25) parameter -> data_type . identifier COMMA parameter
    (26) parameter -> data_type . identifier
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID

    ID              shift and go to state 28

    identifier                     shift and go to state 122

state 86

    (40) block -> LEFTBRACKET statutes_list RIGHTBRACKET .

    $end            reduce using rule 40 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    VOID            reduce using rule 40 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    INT             reduce using rule 40 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    FLOAT           reduce using rule 40 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    CHAR            reduce using rule 40 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    MAIN            reduce using rule 40 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    LEFTBRACKET     reduce using rule 40 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    READ            reduce using rule 40 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    WRITE           reduce using rule 40 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    IF              reduce using rule 40 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    RETURN          reduce using rule 40 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    ID              reduce using rule 40 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    WHILE           reduce using rule 40 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    FOR             reduce using rule 40 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 40 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    ELSE            reduce using rule 40 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)


state 87

    (42) statutes_list -> statute statutes_list .

    RIGHTBRACKET    reduce using rule 42 (statutes_list -> statute statutes_list .)


state 88

    (50) statute -> function_call SEMICOLON .

    READ            reduce using rule 50 (statute -> function_call SEMICOLON .)
    WRITE           reduce using rule 50 (statute -> function_call SEMICOLON .)
    IF              reduce using rule 50 (statute -> function_call SEMICOLON .)
    RETURN          reduce using rule 50 (statute -> function_call SEMICOLON .)
    ID              reduce using rule 50 (statute -> function_call SEMICOLON .)
    WHILE           reduce using rule 50 (statute -> function_call SEMICOLON .)
    FOR             reduce using rule 50 (statute -> function_call SEMICOLON .)
    RIGHTBRACKET    reduce using rule 50 (statute -> function_call SEMICOLON .)


state 89

    (51) asignation -> identifier EQUALS . expresion SEMICOLON
    (72) expresion -> . exp comparators exp
    (73) expresion -> . exp
    (74) exp -> . term exp_operator exp
    (75) exp -> . term
    (76) term -> . factor term_operator term
    (77) term -> . factor
    (78) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (79) factor -> . exp_operator opt_value
    (80) factor -> . opt_value
    (35) exp_operator -> . PLUS
    (36) exp_operator -> . MINUS
    (81) opt_value -> . CTEINT
    (82) opt_value -> . CTEFLOAT
    (83) opt_value -> . CTECHAR
    (84) opt_value -> . function_call
    (85) opt_value -> . identifier
    (69) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CTEINT          shift and go to state 76
    CTEFLOAT        shift and go to state 77
    CTECHAR         shift and go to state 78
    ID              shift and go to state 58

    identifier                     shift and go to state 80
    expresion                      shift and go to state 123
    exp                            shift and go to state 68
    term                           shift and go to state 69
    exp_operator                   shift and go to state 70
    factor                         shift and go to state 71
    opt_value                      shift and go to state 73
    function_call                  shift and go to state 79

state 90

    (52) asignation -> identifier PLUSEQUALS . expresion SEMICOLON
    (72) expresion -> . exp comparators exp
    (73) expresion -> . exp
    (74) exp -> . term exp_operator exp
    (75) exp -> . term
    (76) term -> . factor term_operator term
    (77) term -> . factor
    (78) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (79) factor -> . exp_operator opt_value
    (80) factor -> . opt_value
    (35) exp_operator -> . PLUS
    (36) exp_operator -> . MINUS
    (81) opt_value -> . CTEINT
    (82) opt_value -> . CTEFLOAT
    (83) opt_value -> . CTECHAR
    (84) opt_value -> . function_call
    (85) opt_value -> . identifier
    (69) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CTEINT          shift and go to state 76
    CTEFLOAT        shift and go to state 77
    CTECHAR         shift and go to state 78
    ID              shift and go to state 58

    identifier                     shift and go to state 80
    expresion                      shift and go to state 124
    exp                            shift and go to state 68
    term                           shift and go to state 69
    exp_operator                   shift and go to state 70
    factor                         shift and go to state 71
    opt_value                      shift and go to state 73
    function_call                  shift and go to state 79

state 91

    (53) asignation -> identifier SUBSTRACTEQUALS . expresion SEMICOLON
    (72) expresion -> . exp comparators exp
    (73) expresion -> . exp
    (74) exp -> . term exp_operator exp
    (75) exp -> . term
    (76) term -> . factor term_operator term
    (77) term -> . factor
    (78) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (79) factor -> . exp_operator opt_value
    (80) factor -> . opt_value
    (35) exp_operator -> . PLUS
    (36) exp_operator -> . MINUS
    (81) opt_value -> . CTEINT
    (82) opt_value -> . CTEFLOAT
    (83) opt_value -> . CTECHAR
    (84) opt_value -> . function_call
    (85) opt_value -> . identifier
    (69) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CTEINT          shift and go to state 76
    CTEFLOAT        shift and go to state 77
    CTECHAR         shift and go to state 78
    ID              shift and go to state 58

    identifier                     shift and go to state 80
    expresion                      shift and go to state 125
    exp                            shift and go to state 68
    term                           shift and go to state 69
    exp_operator                   shift and go to state 70
    factor                         shift and go to state 71
    opt_value                      shift and go to state 73
    function_call                  shift and go to state 79

state 92

    (54) asignation -> identifier INCREMENT . SEMICOLON

    SEMICOLON       shift and go to state 126


state 93

    (55) asignation -> identifier DECREMENT . SEMICOLON

    SEMICOLON       shift and go to state 127


state 94

    (56) reading -> READ LEFTPARENTHESIS . ids_list RIGHTPARENTHESIS SEMICOLON
    (11) ids_list -> . identifier COMMA ids_list
    (12) ids_list -> . identifier
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID

    ID              shift and go to state 28

    ids_list                       shift and go to state 128
    identifier                     shift and go to state 27

state 95

    (57) writing -> WRITE LEFTPARENTHESIS . writing_list RIGHTPARENTHESIS SEMICOLON
    (58) writing_list -> . CTESTRING COMMA writing_list
    (59) writing_list -> . expresion COMMA writing_list
    (60) writing_list -> . CTESTRING
    (61) writing_list -> . expresion
    (72) expresion -> . exp comparators exp
    (73) expresion -> . exp
    (74) exp -> . term exp_operator exp
    (75) exp -> . term
    (76) term -> . factor term_operator term
    (77) term -> . factor
    (78) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (79) factor -> . exp_operator opt_value
    (80) factor -> . opt_value
    (35) exp_operator -> . PLUS
    (36) exp_operator -> . MINUS
    (81) opt_value -> . CTEINT
    (82) opt_value -> . CTEFLOAT
    (83) opt_value -> . CTECHAR
    (84) opt_value -> . function_call
    (85) opt_value -> . identifier
    (69) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID

    CTESTRING       shift and go to state 130
    LEFTPARENTHESIS shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CTEINT          shift and go to state 76
    CTEFLOAT        shift and go to state 77
    CTECHAR         shift and go to state 78
    ID              shift and go to state 58

    writing_list                   shift and go to state 129
    expresion                      shift and go to state 131
    exp                            shift and go to state 68
    term                           shift and go to state 69
    exp_operator                   shift and go to state 70
    factor                         shift and go to state 71
    opt_value                      shift and go to state 73
    function_call                  shift and go to state 79
    identifier                     shift and go to state 80

state 96

    (62) decision -> IF LEFTPARENTHESIS . expresion RIGHTPARENTHESIS THEN block ELSE block
    (63) decision -> IF LEFTPARENTHESIS . expresion RIGHTPARENTHESIS THEN block
    (72) expresion -> . exp comparators exp
    (73) expresion -> . exp
    (74) exp -> . term exp_operator exp
    (75) exp -> . term
    (76) term -> . factor term_operator term
    (77) term -> . factor
    (78) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (79) factor -> . exp_operator opt_value
    (80) factor -> . opt_value
    (35) exp_operator -> . PLUS
    (36) exp_operator -> . MINUS
    (81) opt_value -> . CTEINT
    (82) opt_value -> . CTEFLOAT
    (83) opt_value -> . CTECHAR
    (84) opt_value -> . function_call
    (85) opt_value -> . identifier
    (69) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CTEINT          shift and go to state 76
    CTEFLOAT        shift and go to state 77
    CTECHAR         shift and go to state 78
    ID              shift and go to state 58

    expresion                      shift and go to state 132
    exp                            shift and go to state 68
    term                           shift and go to state 69
    exp_operator                   shift and go to state 70
    factor                         shift and go to state 71
    opt_value                      shift and go to state 73
    function_call                  shift and go to state 79
    identifier                     shift and go to state 80

state 97

    (64) loop -> conditional block .

    READ            reduce using rule 64 (loop -> conditional block .)
    WRITE           reduce using rule 64 (loop -> conditional block .)
    IF              reduce using rule 64 (loop -> conditional block .)
    RETURN          reduce using rule 64 (loop -> conditional block .)
    ID              reduce using rule 64 (loop -> conditional block .)
    WHILE           reduce using rule 64 (loop -> conditional block .)
    FOR             reduce using rule 64 (loop -> conditional block .)
    RIGHTBRACKET    reduce using rule 64 (loop -> conditional block .)


state 98

    (65) loop -> non_conditional block .

    READ            reduce using rule 65 (loop -> non_conditional block .)
    WRITE           reduce using rule 65 (loop -> non_conditional block .)
    IF              reduce using rule 65 (loop -> non_conditional block .)
    RETURN          reduce using rule 65 (loop -> non_conditional block .)
    ID              reduce using rule 65 (loop -> non_conditional block .)
    WHILE           reduce using rule 65 (loop -> non_conditional block .)
    FOR             reduce using rule 65 (loop -> non_conditional block .)
    RIGHTBRACKET    reduce using rule 65 (loop -> non_conditional block .)


state 99

    (68) function_return -> RETURN LEFTPARENTHESIS . exp RIGHTPARENTHESIS SEMICOLON
    (74) exp -> . term exp_operator exp
    (75) exp -> . term
    (76) term -> . factor term_operator term
    (77) term -> . factor
    (78) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (79) factor -> . exp_operator opt_value
    (80) factor -> . opt_value
    (35) exp_operator -> . PLUS
    (36) exp_operator -> . MINUS
    (81) opt_value -> . CTEINT
    (82) opt_value -> . CTEFLOAT
    (83) opt_value -> . CTECHAR
    (84) opt_value -> . function_call
    (85) opt_value -> . identifier
    (69) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CTEINT          shift and go to state 76
    CTEFLOAT        shift and go to state 77
    CTECHAR         shift and go to state 78
    ID              shift and go to state 58

    exp                            shift and go to state 133
    term                           shift and go to state 69
    exp_operator                   shift and go to state 70
    factor                         shift and go to state 71
    opt_value                      shift and go to state 73
    function_call                  shift and go to state 79
    identifier                     shift and go to state 80

state 100

    (69) function_call -> ID LEFTPARENTHESIS . expresion_list RIGHTPARENTHESIS
    (70) expresion_list -> . expresion COMMA expresion_list
    (71) expresion_list -> . expresion
    (72) expresion -> . exp comparators exp
    (73) expresion -> . exp
    (74) exp -> . term exp_operator exp
    (75) exp -> . term
    (76) term -> . factor term_operator term
    (77) term -> . factor
    (78) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (79) factor -> . exp_operator opt_value
    (80) factor -> . opt_value
    (35) exp_operator -> . PLUS
    (36) exp_operator -> . MINUS
    (81) opt_value -> . CTEINT
    (82) opt_value -> . CTEFLOAT
    (83) opt_value -> . CTECHAR
    (84) opt_value -> . function_call
    (85) opt_value -> . identifier
    (69) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CTEINT          shift and go to state 76
    CTEFLOAT        shift and go to state 77
    CTECHAR         shift and go to state 78
    ID              shift and go to state 58

    expresion_list                 shift and go to state 134
    expresion                      shift and go to state 135
    exp                            shift and go to state 68
    term                           shift and go to state 69
    exp_operator                   shift and go to state 70
    factor                         shift and go to state 71
    opt_value                      shift and go to state 73
    function_call                  shift and go to state 79
    identifier                     shift and go to state 80

state 101

    (66) conditional -> WHILE LEFTPARENTHESIS . expresion RIGHTPARENTHESIS DO
    (72) expresion -> . exp comparators exp
    (73) expresion -> . exp
    (74) exp -> . term exp_operator exp
    (75) exp -> . term
    (76) term -> . factor term_operator term
    (77) term -> . factor
    (78) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (79) factor -> . exp_operator opt_value
    (80) factor -> . opt_value
    (35) exp_operator -> . PLUS
    (36) exp_operator -> . MINUS
    (81) opt_value -> . CTEINT
    (82) opt_value -> . CTEFLOAT
    (83) opt_value -> . CTECHAR
    (84) opt_value -> . function_call
    (85) opt_value -> . identifier
    (69) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CTEINT          shift and go to state 76
    CTEFLOAT        shift and go to state 77
    CTECHAR         shift and go to state 78
    ID              shift and go to state 58

    expresion                      shift and go to state 136
    exp                            shift and go to state 68
    term                           shift and go to state 69
    exp_operator                   shift and go to state 70
    factor                         shift and go to state 71
    opt_value                      shift and go to state 73
    function_call                  shift and go to state 79
    identifier                     shift and go to state 80

state 102

    (67) non_conditional -> FOR ID . EQUALS exp TO exp DO

    EQUALS          shift and go to state 137


state 103

    (16) id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .

    LEFTSQRBRACKET  reduce using rule 16 (id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    COMMA           reduce using rule 16 (id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    SEMICOLON       reduce using rule 16 (id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    RIGHTPARENTHESIS reduce using rule 16 (id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    EQUALS          reduce using rule 16 (id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    PLUSEQUALS      reduce using rule 16 (id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    SUBSTRACTEQUALS reduce using rule 16 (id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    INCREMENT       reduce using rule 16 (id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DECREMENT       reduce using rule 16 (id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MULTIPLY        reduce using rule 16 (id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DIVIDE          reduce using rule 16 (id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MOD             reduce using rule 16 (id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    PLUS            reduce using rule 16 (id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MINUS           reduce using rule 16 (id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    COMPARISON      reduce using rule 16 (id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    GREATERHANOREQUAL reduce using rule 16 (id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    LESSTHANOREQUAL reduce using rule 16 (id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    GREATERTHAN     reduce using rule 16 (id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    LESSTHAN        reduce using rule 16 (id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DIFFERENT       reduce using rule 16 (id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    OR              reduce using rule 16 (id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    AND             reduce using rule 16 (id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    RIGHTSQRBRACKET reduce using rule 16 (id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    TO              reduce using rule 16 (id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DO              reduce using rule 16 (id_dimensions -> LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)


state 104

    (72) expresion -> exp comparators . exp
    (74) exp -> . term exp_operator exp
    (75) exp -> . term
    (76) term -> . factor term_operator term
    (77) term -> . factor
    (78) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (79) factor -> . exp_operator opt_value
    (80) factor -> . opt_value
    (35) exp_operator -> . PLUS
    (36) exp_operator -> . MINUS
    (81) opt_value -> . CTEINT
    (82) opt_value -> . CTEFLOAT
    (83) opt_value -> . CTECHAR
    (84) opt_value -> . function_call
    (85) opt_value -> . identifier
    (69) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CTEINT          shift and go to state 76
    CTEFLOAT        shift and go to state 77
    CTECHAR         shift and go to state 78
    ID              shift and go to state 58

    exp                            shift and go to state 138
    term                           shift and go to state 69
    exp_operator                   shift and go to state 70
    factor                         shift and go to state 71
    opt_value                      shift and go to state 73
    function_call                  shift and go to state 79
    identifier                     shift and go to state 80

state 105

    (27) comparators -> COMPARISON .

    LEFTPARENTHESIS reduce using rule 27 (comparators -> COMPARISON .)
    PLUS            reduce using rule 27 (comparators -> COMPARISON .)
    MINUS           reduce using rule 27 (comparators -> COMPARISON .)
    CTEINT          reduce using rule 27 (comparators -> COMPARISON .)
    CTEFLOAT        reduce using rule 27 (comparators -> COMPARISON .)
    CTECHAR         reduce using rule 27 (comparators -> COMPARISON .)
    ID              reduce using rule 27 (comparators -> COMPARISON .)


state 106

    (28) comparators -> GREATERHANOREQUAL .

    LEFTPARENTHESIS reduce using rule 28 (comparators -> GREATERHANOREQUAL .)
    PLUS            reduce using rule 28 (comparators -> GREATERHANOREQUAL .)
    MINUS           reduce using rule 28 (comparators -> GREATERHANOREQUAL .)
    CTEINT          reduce using rule 28 (comparators -> GREATERHANOREQUAL .)
    CTEFLOAT        reduce using rule 28 (comparators -> GREATERHANOREQUAL .)
    CTECHAR         reduce using rule 28 (comparators -> GREATERHANOREQUAL .)
    ID              reduce using rule 28 (comparators -> GREATERHANOREQUAL .)


state 107

    (29) comparators -> LESSTHANOREQUAL .

    LEFTPARENTHESIS reduce using rule 29 (comparators -> LESSTHANOREQUAL .)
    PLUS            reduce using rule 29 (comparators -> LESSTHANOREQUAL .)
    MINUS           reduce using rule 29 (comparators -> LESSTHANOREQUAL .)
    CTEINT          reduce using rule 29 (comparators -> LESSTHANOREQUAL .)
    CTEFLOAT        reduce using rule 29 (comparators -> LESSTHANOREQUAL .)
    CTECHAR         reduce using rule 29 (comparators -> LESSTHANOREQUAL .)
    ID              reduce using rule 29 (comparators -> LESSTHANOREQUAL .)


state 108

    (30) comparators -> GREATERTHAN .

    LEFTPARENTHESIS reduce using rule 30 (comparators -> GREATERTHAN .)
    PLUS            reduce using rule 30 (comparators -> GREATERTHAN .)
    MINUS           reduce using rule 30 (comparators -> GREATERTHAN .)
    CTEINT          reduce using rule 30 (comparators -> GREATERTHAN .)
    CTEFLOAT        reduce using rule 30 (comparators -> GREATERTHAN .)
    CTECHAR         reduce using rule 30 (comparators -> GREATERTHAN .)
    ID              reduce using rule 30 (comparators -> GREATERTHAN .)


state 109

    (31) comparators -> LESSTHAN .

    LEFTPARENTHESIS reduce using rule 31 (comparators -> LESSTHAN .)
    PLUS            reduce using rule 31 (comparators -> LESSTHAN .)
    MINUS           reduce using rule 31 (comparators -> LESSTHAN .)
    CTEINT          reduce using rule 31 (comparators -> LESSTHAN .)
    CTEFLOAT        reduce using rule 31 (comparators -> LESSTHAN .)
    CTECHAR         reduce using rule 31 (comparators -> LESSTHAN .)
    ID              reduce using rule 31 (comparators -> LESSTHAN .)


state 110

    (32) comparators -> DIFFERENT .

    LEFTPARENTHESIS reduce using rule 32 (comparators -> DIFFERENT .)
    PLUS            reduce using rule 32 (comparators -> DIFFERENT .)
    MINUS           reduce using rule 32 (comparators -> DIFFERENT .)
    CTEINT          reduce using rule 32 (comparators -> DIFFERENT .)
    CTEFLOAT        reduce using rule 32 (comparators -> DIFFERENT .)
    CTECHAR         reduce using rule 32 (comparators -> DIFFERENT .)
    ID              reduce using rule 32 (comparators -> DIFFERENT .)


state 111

    (33) comparators -> OR .

    LEFTPARENTHESIS reduce using rule 33 (comparators -> OR .)
    PLUS            reduce using rule 33 (comparators -> OR .)
    MINUS           reduce using rule 33 (comparators -> OR .)
    CTEINT          reduce using rule 33 (comparators -> OR .)
    CTEFLOAT        reduce using rule 33 (comparators -> OR .)
    CTECHAR         reduce using rule 33 (comparators -> OR .)
    ID              reduce using rule 33 (comparators -> OR .)


state 112

    (34) comparators -> AND .

    LEFTPARENTHESIS reduce using rule 34 (comparators -> AND .)
    PLUS            reduce using rule 34 (comparators -> AND .)
    MINUS           reduce using rule 34 (comparators -> AND .)
    CTEINT          reduce using rule 34 (comparators -> AND .)
    CTEFLOAT        reduce using rule 34 (comparators -> AND .)
    CTECHAR         reduce using rule 34 (comparators -> AND .)
    ID              reduce using rule 34 (comparators -> AND .)


state 113

    (74) exp -> term exp_operator . exp
    (74) exp -> . term exp_operator exp
    (75) exp -> . term
    (76) term -> . factor term_operator term
    (77) term -> . factor
    (78) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (79) factor -> . exp_operator opt_value
    (80) factor -> . opt_value
    (35) exp_operator -> . PLUS
    (36) exp_operator -> . MINUS
    (81) opt_value -> . CTEINT
    (82) opt_value -> . CTEFLOAT
    (83) opt_value -> . CTECHAR
    (84) opt_value -> . function_call
    (85) opt_value -> . identifier
    (69) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CTEINT          shift and go to state 76
    CTEFLOAT        shift and go to state 77
    CTECHAR         shift and go to state 78
    ID              shift and go to state 58

    term                           shift and go to state 69
    exp_operator                   shift and go to state 70
    exp                            shift and go to state 139
    factor                         shift and go to state 71
    opt_value                      shift and go to state 73
    function_call                  shift and go to state 79
    identifier                     shift and go to state 80

state 114

    (79) factor -> exp_operator opt_value .

    MULTIPLY        reduce using rule 79 (factor -> exp_operator opt_value .)
    DIVIDE          reduce using rule 79 (factor -> exp_operator opt_value .)
    MOD             reduce using rule 79 (factor -> exp_operator opt_value .)
    PLUS            reduce using rule 79 (factor -> exp_operator opt_value .)
    MINUS           reduce using rule 79 (factor -> exp_operator opt_value .)
    COMPARISON      reduce using rule 79 (factor -> exp_operator opt_value .)
    GREATERHANOREQUAL reduce using rule 79 (factor -> exp_operator opt_value .)
    LESSTHANOREQUAL reduce using rule 79 (factor -> exp_operator opt_value .)
    GREATERTHAN     reduce using rule 79 (factor -> exp_operator opt_value .)
    LESSTHAN        reduce using rule 79 (factor -> exp_operator opt_value .)
    DIFFERENT       reduce using rule 79 (factor -> exp_operator opt_value .)
    OR              reduce using rule 79 (factor -> exp_operator opt_value .)
    AND             reduce using rule 79 (factor -> exp_operator opt_value .)
    RIGHTSQRBRACKET reduce using rule 79 (factor -> exp_operator opt_value .)
    RIGHTPARENTHESIS reduce using rule 79 (factor -> exp_operator opt_value .)
    SEMICOLON       reduce using rule 79 (factor -> exp_operator opt_value .)
    COMMA           reduce using rule 79 (factor -> exp_operator opt_value .)
    TO              reduce using rule 79 (factor -> exp_operator opt_value .)
    DO              reduce using rule 79 (factor -> exp_operator opt_value .)


state 115

    (76) term -> factor term_operator . term
    (76) term -> . factor term_operator term
    (77) term -> . factor
    (78) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (79) factor -> . exp_operator opt_value
    (80) factor -> . opt_value
    (35) exp_operator -> . PLUS
    (36) exp_operator -> . MINUS
    (81) opt_value -> . CTEINT
    (82) opt_value -> . CTEFLOAT
    (83) opt_value -> . CTECHAR
    (84) opt_value -> . function_call
    (85) opt_value -> . identifier
    (69) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CTEINT          shift and go to state 76
    CTEFLOAT        shift and go to state 77
    CTECHAR         shift and go to state 78
    ID              shift and go to state 58

    factor                         shift and go to state 71
    term                           shift and go to state 140
    exp_operator                   shift and go to state 70
    opt_value                      shift and go to state 73
    function_call                  shift and go to state 79
    identifier                     shift and go to state 80

state 116

    (37) term_operator -> MULTIPLY .

    LEFTPARENTHESIS reduce using rule 37 (term_operator -> MULTIPLY .)
    PLUS            reduce using rule 37 (term_operator -> MULTIPLY .)
    MINUS           reduce using rule 37 (term_operator -> MULTIPLY .)
    CTEINT          reduce using rule 37 (term_operator -> MULTIPLY .)
    CTEFLOAT        reduce using rule 37 (term_operator -> MULTIPLY .)
    CTECHAR         reduce using rule 37 (term_operator -> MULTIPLY .)
    ID              reduce using rule 37 (term_operator -> MULTIPLY .)


state 117

    (38) term_operator -> DIVIDE .

    LEFTPARENTHESIS reduce using rule 38 (term_operator -> DIVIDE .)
    PLUS            reduce using rule 38 (term_operator -> DIVIDE .)
    MINUS           reduce using rule 38 (term_operator -> DIVIDE .)
    CTEINT          reduce using rule 38 (term_operator -> DIVIDE .)
    CTEFLOAT        reduce using rule 38 (term_operator -> DIVIDE .)
    CTECHAR         reduce using rule 38 (term_operator -> DIVIDE .)
    ID              reduce using rule 38 (term_operator -> DIVIDE .)


state 118

    (39) term_operator -> MOD .

    LEFTPARENTHESIS reduce using rule 39 (term_operator -> MOD .)
    PLUS            reduce using rule 39 (term_operator -> MOD .)
    MINUS           reduce using rule 39 (term_operator -> MOD .)
    CTEINT          reduce using rule 39 (term_operator -> MOD .)
    CTEFLOAT        reduce using rule 39 (term_operator -> MOD .)
    CTECHAR         reduce using rule 39 (term_operator -> MOD .)
    ID              reduce using rule 39 (term_operator -> MOD .)


state 119

    (78) factor -> LEFTPARENTHESIS expresion . RIGHTPARENTHESIS

    RIGHTPARENTHESIS shift and go to state 141


state 120

    (19) function -> return_type MODULE ID parameters_list vars block .

    VOID            reduce using rule 19 (function -> return_type MODULE ID parameters_list vars block .)
    INT             reduce using rule 19 (function -> return_type MODULE ID parameters_list vars block .)
    FLOAT           reduce using rule 19 (function -> return_type MODULE ID parameters_list vars block .)
    CHAR            reduce using rule 19 (function -> return_type MODULE ID parameters_list vars block .)
    MAIN            reduce using rule 19 (function -> return_type MODULE ID parameters_list vars block .)
    LEFTBRACKET     reduce using rule 19 (function -> return_type MODULE ID parameters_list vars block .)


state 121

    (23) parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS .

    VAR             reduce using rule 23 (parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS .)
    LEFTBRACKET     reduce using rule 23 (parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS .)


state 122

    (25) parameter -> data_type identifier . COMMA parameter
    (26) parameter -> data_type identifier .

    COMMA           shift and go to state 142
    RIGHTPARENTHESIS reduce using rule 26 (parameter -> data_type identifier .)


state 123

    (51) asignation -> identifier EQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 143


state 124

    (52) asignation -> identifier PLUSEQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 144


state 125

    (53) asignation -> identifier SUBSTRACTEQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 145


state 126

    (54) asignation -> identifier INCREMENT SEMICOLON .

    READ            reduce using rule 54 (asignation -> identifier INCREMENT SEMICOLON .)
    WRITE           reduce using rule 54 (asignation -> identifier INCREMENT SEMICOLON .)
    IF              reduce using rule 54 (asignation -> identifier INCREMENT SEMICOLON .)
    RETURN          reduce using rule 54 (asignation -> identifier INCREMENT SEMICOLON .)
    ID              reduce using rule 54 (asignation -> identifier INCREMENT SEMICOLON .)
    WHILE           reduce using rule 54 (asignation -> identifier INCREMENT SEMICOLON .)
    FOR             reduce using rule 54 (asignation -> identifier INCREMENT SEMICOLON .)
    RIGHTBRACKET    reduce using rule 54 (asignation -> identifier INCREMENT SEMICOLON .)


state 127

    (55) asignation -> identifier DECREMENT SEMICOLON .

    READ            reduce using rule 55 (asignation -> identifier DECREMENT SEMICOLON .)
    WRITE           reduce using rule 55 (asignation -> identifier DECREMENT SEMICOLON .)
    IF              reduce using rule 55 (asignation -> identifier DECREMENT SEMICOLON .)
    RETURN          reduce using rule 55 (asignation -> identifier DECREMENT SEMICOLON .)
    ID              reduce using rule 55 (asignation -> identifier DECREMENT SEMICOLON .)
    WHILE           reduce using rule 55 (asignation -> identifier DECREMENT SEMICOLON .)
    FOR             reduce using rule 55 (asignation -> identifier DECREMENT SEMICOLON .)
    RIGHTBRACKET    reduce using rule 55 (asignation -> identifier DECREMENT SEMICOLON .)


state 128

    (56) reading -> READ LEFTPARENTHESIS ids_list . RIGHTPARENTHESIS SEMICOLON

    RIGHTPARENTHESIS shift and go to state 146


state 129

    (57) writing -> WRITE LEFTPARENTHESIS writing_list . RIGHTPARENTHESIS SEMICOLON

    RIGHTPARENTHESIS shift and go to state 147


state 130

    (58) writing_list -> CTESTRING . COMMA writing_list
    (60) writing_list -> CTESTRING .

    COMMA           shift and go to state 148
    RIGHTPARENTHESIS reduce using rule 60 (writing_list -> CTESTRING .)


state 131

    (59) writing_list -> expresion . COMMA writing_list
    (61) writing_list -> expresion .

    COMMA           shift and go to state 149
    RIGHTPARENTHESIS reduce using rule 61 (writing_list -> expresion .)


state 132

    (62) decision -> IF LEFTPARENTHESIS expresion . RIGHTPARENTHESIS THEN block ELSE block
    (63) decision -> IF LEFTPARENTHESIS expresion . RIGHTPARENTHESIS THEN block

    RIGHTPARENTHESIS shift and go to state 150


state 133

    (68) function_return -> RETURN LEFTPARENTHESIS exp . RIGHTPARENTHESIS SEMICOLON

    RIGHTPARENTHESIS shift and go to state 151


state 134

    (69) function_call -> ID LEFTPARENTHESIS expresion_list . RIGHTPARENTHESIS

    RIGHTPARENTHESIS shift and go to state 152


state 135

    (70) expresion_list -> expresion . COMMA expresion_list
    (71) expresion_list -> expresion .

    COMMA           shift and go to state 153
    RIGHTPARENTHESIS reduce using rule 71 (expresion_list -> expresion .)


state 136

    (66) conditional -> WHILE LEFTPARENTHESIS expresion . RIGHTPARENTHESIS DO

    RIGHTPARENTHESIS shift and go to state 154


state 137

    (67) non_conditional -> FOR ID EQUALS . exp TO exp DO
    (74) exp -> . term exp_operator exp
    (75) exp -> . term
    (76) term -> . factor term_operator term
    (77) term -> . factor
    (78) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (79) factor -> . exp_operator opt_value
    (80) factor -> . opt_value
    (35) exp_operator -> . PLUS
    (36) exp_operator -> . MINUS
    (81) opt_value -> . CTEINT
    (82) opt_value -> . CTEFLOAT
    (83) opt_value -> . CTECHAR
    (84) opt_value -> . function_call
    (85) opt_value -> . identifier
    (69) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CTEINT          shift and go to state 76
    CTEFLOAT        shift and go to state 77
    CTECHAR         shift and go to state 78
    ID              shift and go to state 58

    exp                            shift and go to state 155
    term                           shift and go to state 69
    exp_operator                   shift and go to state 70
    factor                         shift and go to state 71
    opt_value                      shift and go to state 73
    function_call                  shift and go to state 79
    identifier                     shift and go to state 80

state 138

    (72) expresion -> exp comparators exp .

    RIGHTSQRBRACKET reduce using rule 72 (expresion -> exp comparators exp .)
    RIGHTPARENTHESIS reduce using rule 72 (expresion -> exp comparators exp .)
    SEMICOLON       reduce using rule 72 (expresion -> exp comparators exp .)
    COMMA           reduce using rule 72 (expresion -> exp comparators exp .)


state 139

    (74) exp -> term exp_operator exp .

    COMPARISON      reduce using rule 74 (exp -> term exp_operator exp .)
    GREATERHANOREQUAL reduce using rule 74 (exp -> term exp_operator exp .)
    LESSTHANOREQUAL reduce using rule 74 (exp -> term exp_operator exp .)
    GREATERTHAN     reduce using rule 74 (exp -> term exp_operator exp .)
    LESSTHAN        reduce using rule 74 (exp -> term exp_operator exp .)
    DIFFERENT       reduce using rule 74 (exp -> term exp_operator exp .)
    OR              reduce using rule 74 (exp -> term exp_operator exp .)
    AND             reduce using rule 74 (exp -> term exp_operator exp .)
    RIGHTSQRBRACKET reduce using rule 74 (exp -> term exp_operator exp .)
    RIGHTPARENTHESIS reduce using rule 74 (exp -> term exp_operator exp .)
    SEMICOLON       reduce using rule 74 (exp -> term exp_operator exp .)
    COMMA           reduce using rule 74 (exp -> term exp_operator exp .)
    TO              reduce using rule 74 (exp -> term exp_operator exp .)
    DO              reduce using rule 74 (exp -> term exp_operator exp .)


state 140

    (76) term -> factor term_operator term .

    PLUS            reduce using rule 76 (term -> factor term_operator term .)
    MINUS           reduce using rule 76 (term -> factor term_operator term .)
    COMPARISON      reduce using rule 76 (term -> factor term_operator term .)
    GREATERHANOREQUAL reduce using rule 76 (term -> factor term_operator term .)
    LESSTHANOREQUAL reduce using rule 76 (term -> factor term_operator term .)
    GREATERTHAN     reduce using rule 76 (term -> factor term_operator term .)
    LESSTHAN        reduce using rule 76 (term -> factor term_operator term .)
    DIFFERENT       reduce using rule 76 (term -> factor term_operator term .)
    OR              reduce using rule 76 (term -> factor term_operator term .)
    AND             reduce using rule 76 (term -> factor term_operator term .)
    RIGHTSQRBRACKET reduce using rule 76 (term -> factor term_operator term .)
    RIGHTPARENTHESIS reduce using rule 76 (term -> factor term_operator term .)
    SEMICOLON       reduce using rule 76 (term -> factor term_operator term .)
    COMMA           reduce using rule 76 (term -> factor term_operator term .)
    TO              reduce using rule 76 (term -> factor term_operator term .)
    DO              reduce using rule 76 (term -> factor term_operator term .)


state 141

    (78) factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .

    MULTIPLY        reduce using rule 78 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    DIVIDE          reduce using rule 78 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    MOD             reduce using rule 78 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    PLUS            reduce using rule 78 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    MINUS           reduce using rule 78 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    COMPARISON      reduce using rule 78 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    GREATERHANOREQUAL reduce using rule 78 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    LESSTHANOREQUAL reduce using rule 78 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    GREATERTHAN     reduce using rule 78 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    LESSTHAN        reduce using rule 78 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    DIFFERENT       reduce using rule 78 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    OR              reduce using rule 78 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    AND             reduce using rule 78 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    RIGHTSQRBRACKET reduce using rule 78 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    RIGHTPARENTHESIS reduce using rule 78 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    SEMICOLON       reduce using rule 78 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    COMMA           reduce using rule 78 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    TO              reduce using rule 78 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    DO              reduce using rule 78 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)


state 142

    (25) parameter -> data_type identifier COMMA . parameter
    (25) parameter -> . data_type identifier COMMA parameter
    (26) parameter -> . data_type identifier
    (4) data_type -> . INT
    (5) data_type -> . FLOAT
    (6) data_type -> . CHAR

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    data_type                      shift and go to state 85
    parameter                      shift and go to state 156

state 143

    (51) asignation -> identifier EQUALS expresion SEMICOLON .

    READ            reduce using rule 51 (asignation -> identifier EQUALS expresion SEMICOLON .)
    WRITE           reduce using rule 51 (asignation -> identifier EQUALS expresion SEMICOLON .)
    IF              reduce using rule 51 (asignation -> identifier EQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 51 (asignation -> identifier EQUALS expresion SEMICOLON .)
    ID              reduce using rule 51 (asignation -> identifier EQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 51 (asignation -> identifier EQUALS expresion SEMICOLON .)
    FOR             reduce using rule 51 (asignation -> identifier EQUALS expresion SEMICOLON .)
    RIGHTBRACKET    reduce using rule 51 (asignation -> identifier EQUALS expresion SEMICOLON .)


state 144

    (52) asignation -> identifier PLUSEQUALS expresion SEMICOLON .

    READ            reduce using rule 52 (asignation -> identifier PLUSEQUALS expresion SEMICOLON .)
    WRITE           reduce using rule 52 (asignation -> identifier PLUSEQUALS expresion SEMICOLON .)
    IF              reduce using rule 52 (asignation -> identifier PLUSEQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 52 (asignation -> identifier PLUSEQUALS expresion SEMICOLON .)
    ID              reduce using rule 52 (asignation -> identifier PLUSEQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 52 (asignation -> identifier PLUSEQUALS expresion SEMICOLON .)
    FOR             reduce using rule 52 (asignation -> identifier PLUSEQUALS expresion SEMICOLON .)
    RIGHTBRACKET    reduce using rule 52 (asignation -> identifier PLUSEQUALS expresion SEMICOLON .)


state 145

    (53) asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .

    READ            reduce using rule 53 (asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .)
    WRITE           reduce using rule 53 (asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .)
    IF              reduce using rule 53 (asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 53 (asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .)
    ID              reduce using rule 53 (asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 53 (asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .)
    FOR             reduce using rule 53 (asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .)
    RIGHTBRACKET    reduce using rule 53 (asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .)


state 146

    (56) reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 157


state 147

    (57) writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 158


state 148

    (58) writing_list -> CTESTRING COMMA . writing_list
    (58) writing_list -> . CTESTRING COMMA writing_list
    (59) writing_list -> . expresion COMMA writing_list
    (60) writing_list -> . CTESTRING
    (61) writing_list -> . expresion
    (72) expresion -> . exp comparators exp
    (73) expresion -> . exp
    (74) exp -> . term exp_operator exp
    (75) exp -> . term
    (76) term -> . factor term_operator term
    (77) term -> . factor
    (78) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (79) factor -> . exp_operator opt_value
    (80) factor -> . opt_value
    (35) exp_operator -> . PLUS
    (36) exp_operator -> . MINUS
    (81) opt_value -> . CTEINT
    (82) opt_value -> . CTEFLOAT
    (83) opt_value -> . CTECHAR
    (84) opt_value -> . function_call
    (85) opt_value -> . identifier
    (69) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID

    CTESTRING       shift and go to state 130
    LEFTPARENTHESIS shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CTEINT          shift and go to state 76
    CTEFLOAT        shift and go to state 77
    CTECHAR         shift and go to state 78
    ID              shift and go to state 58

    writing_list                   shift and go to state 159
    expresion                      shift and go to state 131
    exp                            shift and go to state 68
    term                           shift and go to state 69
    exp_operator                   shift and go to state 70
    factor                         shift and go to state 71
    opt_value                      shift and go to state 73
    function_call                  shift and go to state 79
    identifier                     shift and go to state 80

state 149

    (59) writing_list -> expresion COMMA . writing_list
    (58) writing_list -> . CTESTRING COMMA writing_list
    (59) writing_list -> . expresion COMMA writing_list
    (60) writing_list -> . CTESTRING
    (61) writing_list -> . expresion
    (72) expresion -> . exp comparators exp
    (73) expresion -> . exp
    (74) exp -> . term exp_operator exp
    (75) exp -> . term
    (76) term -> . factor term_operator term
    (77) term -> . factor
    (78) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (79) factor -> . exp_operator opt_value
    (80) factor -> . opt_value
    (35) exp_operator -> . PLUS
    (36) exp_operator -> . MINUS
    (81) opt_value -> . CTEINT
    (82) opt_value -> . CTEFLOAT
    (83) opt_value -> . CTECHAR
    (84) opt_value -> . function_call
    (85) opt_value -> . identifier
    (69) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID

    CTESTRING       shift and go to state 130
    LEFTPARENTHESIS shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CTEINT          shift and go to state 76
    CTEFLOAT        shift and go to state 77
    CTECHAR         shift and go to state 78
    ID              shift and go to state 58

    expresion                      shift and go to state 131
    writing_list                   shift and go to state 160
    exp                            shift and go to state 68
    term                           shift and go to state 69
    exp_operator                   shift and go to state 70
    factor                         shift and go to state 71
    opt_value                      shift and go to state 73
    function_call                  shift and go to state 79
    identifier                     shift and go to state 80

state 150

    (62) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS . THEN block ELSE block
    (63) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS . THEN block

    THEN            shift and go to state 161


state 151

    (68) function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 162


state 152

    (69) function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .

    SEMICOLON       reduce using rule 69 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    MULTIPLY        reduce using rule 69 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    DIVIDE          reduce using rule 69 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    MOD             reduce using rule 69 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    PLUS            reduce using rule 69 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    MINUS           reduce using rule 69 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    COMPARISON      reduce using rule 69 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    GREATERHANOREQUAL reduce using rule 69 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    LESSTHANOREQUAL reduce using rule 69 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    GREATERTHAN     reduce using rule 69 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    LESSTHAN        reduce using rule 69 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    DIFFERENT       reduce using rule 69 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    OR              reduce using rule 69 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    AND             reduce using rule 69 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    RIGHTSQRBRACKET reduce using rule 69 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    RIGHTPARENTHESIS reduce using rule 69 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    COMMA           reduce using rule 69 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    TO              reduce using rule 69 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    DO              reduce using rule 69 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)


state 153

    (70) expresion_list -> expresion COMMA . expresion_list
    (70) expresion_list -> . expresion COMMA expresion_list
    (71) expresion_list -> . expresion
    (72) expresion -> . exp comparators exp
    (73) expresion -> . exp
    (74) exp -> . term exp_operator exp
    (75) exp -> . term
    (76) term -> . factor term_operator term
    (77) term -> . factor
    (78) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (79) factor -> . exp_operator opt_value
    (80) factor -> . opt_value
    (35) exp_operator -> . PLUS
    (36) exp_operator -> . MINUS
    (81) opt_value -> . CTEINT
    (82) opt_value -> . CTEFLOAT
    (83) opt_value -> . CTECHAR
    (84) opt_value -> . function_call
    (85) opt_value -> . identifier
    (69) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CTEINT          shift and go to state 76
    CTEFLOAT        shift and go to state 77
    CTECHAR         shift and go to state 78
    ID              shift and go to state 58

    expresion                      shift and go to state 135
    expresion_list                 shift and go to state 163
    exp                            shift and go to state 68
    term                           shift and go to state 69
    exp_operator                   shift and go to state 70
    factor                         shift and go to state 71
    opt_value                      shift and go to state 73
    function_call                  shift and go to state 79
    identifier                     shift and go to state 80

state 154

    (66) conditional -> WHILE LEFTPARENTHESIS expresion RIGHTPARENTHESIS . DO

    DO              shift and go to state 164


state 155

    (67) non_conditional -> FOR ID EQUALS exp . TO exp DO

    TO              shift and go to state 165


state 156

    (25) parameter -> data_type identifier COMMA parameter .

    RIGHTPARENTHESIS reduce using rule 25 (parameter -> data_type identifier COMMA parameter .)


state 157

    (56) reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .

    READ            reduce using rule 56 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    WRITE           reduce using rule 56 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    IF              reduce using rule 56 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 56 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    ID              reduce using rule 56 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 56 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    FOR             reduce using rule 56 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 56 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)


state 158

    (57) writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .

    READ            reduce using rule 57 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    WRITE           reduce using rule 57 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    IF              reduce using rule 57 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 57 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    ID              reduce using rule 57 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 57 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    FOR             reduce using rule 57 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 57 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)


state 159

    (58) writing_list -> CTESTRING COMMA writing_list .

    RIGHTPARENTHESIS reduce using rule 58 (writing_list -> CTESTRING COMMA writing_list .)


state 160

    (59) writing_list -> expresion COMMA writing_list .

    RIGHTPARENTHESIS reduce using rule 59 (writing_list -> expresion COMMA writing_list .)


state 161

    (62) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN . block ELSE block
    (63) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN . block
    (40) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (41) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 32

    block                          shift and go to state 166

state 162

    (68) function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .

    READ            reduce using rule 68 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    WRITE           reduce using rule 68 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    IF              reduce using rule 68 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 68 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    ID              reduce using rule 68 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 68 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    FOR             reduce using rule 68 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 68 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)


state 163

    (70) expresion_list -> expresion COMMA expresion_list .

    RIGHTPARENTHESIS reduce using rule 70 (expresion_list -> expresion COMMA expresion_list .)


state 164

    (66) conditional -> WHILE LEFTPARENTHESIS expresion RIGHTPARENTHESIS DO .

    LEFTBRACKET     reduce using rule 66 (conditional -> WHILE LEFTPARENTHESIS expresion RIGHTPARENTHESIS DO .)


state 165

    (67) non_conditional -> FOR ID EQUALS exp TO . exp DO
    (74) exp -> . term exp_operator exp
    (75) exp -> . term
    (76) term -> . factor term_operator term
    (77) term -> . factor
    (78) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (79) factor -> . exp_operator opt_value
    (80) factor -> . opt_value
    (35) exp_operator -> . PLUS
    (36) exp_operator -> . MINUS
    (81) opt_value -> . CTEINT
    (82) opt_value -> . CTEFLOAT
    (83) opt_value -> . CTECHAR
    (84) opt_value -> . function_call
    (85) opt_value -> . identifier
    (69) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (13) identifier -> . ID id_dimensions id_dimensions
    (14) identifier -> . ID id_dimensions
    (15) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CTEINT          shift and go to state 76
    CTEFLOAT        shift and go to state 77
    CTECHAR         shift and go to state 78
    ID              shift and go to state 58

    exp                            shift and go to state 167
    term                           shift and go to state 69
    exp_operator                   shift and go to state 70
    factor                         shift and go to state 71
    opt_value                      shift and go to state 73
    function_call                  shift and go to state 79
    identifier                     shift and go to state 80

state 166

    (62) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block . ELSE block
    (63) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .

    ELSE            shift and go to state 168
    READ            reduce using rule 63 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .)
    WRITE           reduce using rule 63 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .)
    IF              reduce using rule 63 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .)
    RETURN          reduce using rule 63 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .)
    ID              reduce using rule 63 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .)
    WHILE           reduce using rule 63 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .)
    FOR             reduce using rule 63 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .)
    RIGHTBRACKET    reduce using rule 63 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .)


state 167

    (67) non_conditional -> FOR ID EQUALS exp TO exp . DO

    DO              shift and go to state 169


state 168

    (62) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE . block
    (40) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (41) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 32

    block                          shift and go to state 170

state 169

    (67) non_conditional -> FOR ID EQUALS exp TO exp DO .

    LEFTBRACKET     reduce using rule 67 (non_conditional -> FOR ID EQUALS exp TO exp DO .)


state 170

    (62) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .

    READ            reduce using rule 62 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .)
    WRITE           reduce using rule 62 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .)
    IF              reduce using rule 62 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .)
    RETURN          reduce using rule 62 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .)
    ID              reduce using rule 62 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .)
    WHILE           reduce using rule 62 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .)
    FOR             reduce using rule 62 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .)
    RIGHTBRACKET    reduce using rule 62 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .)

