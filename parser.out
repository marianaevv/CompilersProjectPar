Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
Rule 2     program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
Rule 3     program -> PROGRAM ID SEMICOLON functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
Rule 4     program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
Rule 5     data_type -> INT
Rule 6     data_type -> FLOAT
Rule 7     data_type -> CHAR
Rule 8     vars -> VAR vars_lists neupoint_add_vars
Rule 9     vars_lists -> data_type decla_ids_list SEMICOLON vars_lists
Rule 10    vars_lists -> data_type decla_ids_list SEMICOLON
Rule 11    decla_ids_list -> decla_identifier COMMA decla_ids_list
Rule 12    decla_ids_list -> decla_identifier
Rule 13    decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
Rule 14    decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
Rule 15    decla_identifier -> ID
Rule 16    ids_list -> identifier COMMA ids_list
Rule 17    ids_list -> identifier
Rule 18    identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
Rule 19    identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
Rule 20    identifier -> ID
Rule 21    neupoint_add_vars -> <empty>
Rule 22    return_type -> data_type
Rule 23    return_type -> VOID
Rule 24    functions_list -> function functions_list
Rule 25    functions_list -> function
Rule 26    function -> MODULE return_type ID neupoint_add_function parameters_list vars block
Rule 27    function -> MODULE return_type ID neupoint_add_function parameters_list block
Rule 28    parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS neupoint_add_parameters
Rule 29    parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS
Rule 30    parameter -> data_type decla_identifier COMMA parameter
Rule 31    parameter -> data_type decla_identifier
Rule 32    neupoint_add_function -> <empty>
Rule 33    neupoint_add_parameters -> <empty>
Rule 34    neupoint_back_global -> <empty>
Rule 35    comparators -> COMPARISON
Rule 36    comparators -> GREATERHANOREQUAL
Rule 37    comparators -> LESSTHANOREQUAL
Rule 38    comparators -> GREATERTHAN
Rule 39    comparators -> LESSTHAN
Rule 40    comparators -> DIFFERENT
Rule 41    comparators -> OR
Rule 42    comparators -> AND
Rule 43    exp_operator -> PLUS
Rule 44    exp_operator -> MINUS
Rule 45    term_operator -> MULTIPLY
Rule 46    term_operator -> DIVIDE
Rule 47    term_operator -> MOD
Rule 48    block -> LEFTBRACKET statutes_list RIGHTBRACKET
Rule 49    block -> LEFTBRACKET RIGHTBRACKET
Rule 50    statutes_list -> statute statutes_list
Rule 51    statutes_list -> statute
Rule 52    statute -> asignation
Rule 53    statute -> reading
Rule 54    statute -> writing
Rule 55    statute -> decision
Rule 56    statute -> loop
Rule 57    statute -> function_return
Rule 58    statute -> function_call SEMICOLON
Rule 59    asignation -> identifier EQUALS expresion SEMICOLON
Rule 60    asignation -> identifier PLUSEQUALS expresion SEMICOLON
Rule 61    asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON
Rule 62    asignation -> identifier INCREMENT SEMICOLON
Rule 63    asignation -> identifier DECREMENT SEMICOLON
Rule 64    reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON
Rule 65    writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON
Rule 66    writing_list -> CTESTRING COMMA writing_list
Rule 67    writing_list -> expresion COMMA writing_list
Rule 68    writing_list -> CTESTRING
Rule 69    writing_list -> expresion
Rule 70    decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block
Rule 71    decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block
Rule 72    loop -> conditional block
Rule 73    loop -> non_conditional block
Rule 74    conditional -> WHILE LEFTPARENTHESIS expresion RIGHTPARENTHESIS DO
Rule 75    non_conditional -> FOR ID EQUALS exp TO exp DO
Rule 76    function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON
Rule 77    function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
Rule 78    expresion_list -> expresion COMMA expresion_list
Rule 79    expresion_list -> expresion
Rule 80    expresion -> exp comparators neupoint_add_operator exp
Rule 81    expresion -> exp
Rule 82    exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
Rule 83    exp -> term neupoint_arithmetic_exp_quad
Rule 84    term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
Rule 85    term -> factor neupoint_arithmetic_term_quad
Rule 86    factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS
Rule 87    factor -> CTEINT neupoint_add_cte_operand
Rule 88    factor -> CTEFLOAT neupoint_add_cte_operand
Rule 89    factor -> CTECHAR neupoint_add_cte_operand
Rule 90    factor -> function_call
Rule 91    factor -> identifier neupoint_add_operand
Rule 92    neupoint_add_operator -> <empty>
Rule 93    neupoint_add_operand -> <empty>
Rule 94    neupoint_add_cte_operand -> <empty>
Rule 95    neupoint_arithmetic_exp_quad -> <empty>
Rule 96    neupoint_arithmetic_term_quad -> <empty>

Terminals, with rules where they appear

AND                  : 42
CHAR                 : 7
COMMA                : 11 16 30 66 67 78
COMPARISON           : 35
CTECHAR              : 89
CTEFLOAT             : 88
CTEINT               : 13 13 14 87
CTESTRING            : 66 68
DECREMENT            : 63
DIFFERENT            : 40
DIVIDE               : 46
DO                   : 74 75
ELSE                 : 70
EQUALS               : 59 75
FLOAT                : 6
FOR                  : 75
GREATERHANOREQUAL    : 36
GREATERTHAN          : 38
ID                   : 1 2 3 4 13 14 15 18 19 20 26 27 75 77
IF                   : 70 71
INCREMENT            : 62
INT                  : 5
LEFTBRACKET          : 48 49
LEFTPARENTHESIS      : 1 2 3 4 28 29 64 65 70 71 74 76 77 86
LEFTSQRBRACKET       : 13 13 14 18 18 19
LESSTHAN             : 39
LESSTHANOREQUAL      : 37
MAIN                 : 1 2 3 4
MINUS                : 44
MOD                  : 47
MODULE               : 26 27
MULTIPLY             : 45
OR                   : 41
PLUS                 : 43
PLUSEQUALS           : 60
PROGRAM              : 1 2 3 4
READ                 : 64
RETURN               : 76
RIGHTBRACKET         : 48 49
RIGHTPARENTHESIS     : 1 2 3 4 28 29 64 65 70 71 74 76 77 86
RIGHTSQRBRACKET      : 13 13 14 18 18 19
SEMICOLON            : 1 2 3 4 9 10 58 59 60 61 62 63 64 65 76
SUBSTRACTEQUALS      : 61
THEN                 : 70 71
TO                   : 75
VAR                  : 8
VOID                 : 23
WHILE                : 74
WRITE                : 65
error                : 

Nonterminals, with rules where they appear

asignation           : 52
block                : 1 2 3 4 26 27 70 70 71 72 73
comparators          : 80
conditional          : 72
data_type            : 9 10 22 30 31
decision             : 55
decla_identifier     : 11 12 30 31
decla_ids_list       : 9 10 11
exp                  : 75 75 76 80 80 81 82
exp_operator         : 82
expresion            : 18 18 19 59 60 61 67 69 70 71 74 78 79 86
expresion_list       : 77 78
factor               : 84 85
function             : 24 25
function_call        : 58 90
function_return      : 57
functions_list       : 1 3 24
identifier           : 16 17 59 60 61 62 63 91
ids_list             : 16 64
loop                 : 56
neupoint_add_cte_operand : 87 88 89
neupoint_add_function : 26 27
neupoint_add_operand : 91
neupoint_add_operator : 80 82 84
neupoint_add_parameters : 28
neupoint_add_vars    : 8
neupoint_arithmetic_exp_quad : 82 83
neupoint_arithmetic_term_quad : 84 85
neupoint_back_global : 1 3
non_conditional      : 73
parameter            : 28 30
parameters_list      : 26 27
program              : 0
reading              : 53
return_type          : 26 27
statute              : 50 51
statutes_list        : 48 50
term                 : 82 83 84
term_operator        : 84
vars                 : 1 2 26
vars_lists           : 8 9
writing              : 54
writing_list         : 65 66 67

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (2) program -> . PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (3) program -> . PROGRAM ID SEMICOLON functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (4) program -> . PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (2) program -> PROGRAM . ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (3) program -> PROGRAM . ID SEMICOLON functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (4) program -> PROGRAM . ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (2) program -> PROGRAM ID . SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (3) program -> PROGRAM ID . SEMICOLON functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (4) program -> PROGRAM ID . SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (2) program -> PROGRAM ID SEMICOLON . vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (3) program -> PROGRAM ID SEMICOLON . functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (4) program -> PROGRAM ID SEMICOLON . MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (8) vars -> . VAR vars_lists neupoint_add_vars
    (24) functions_list -> . function functions_list
    (25) functions_list -> . function
    (26) function -> . MODULE return_type ID neupoint_add_function parameters_list vars block
    (27) function -> . MODULE return_type ID neupoint_add_function parameters_list block

    MAIN            shift and go to state 7
    VAR             shift and go to state 8
    MODULE          shift and go to state 10

    vars                           shift and go to state 5
    functions_list                 shift and go to state 6
    function                       shift and go to state 9

state 5

    (1) program -> PROGRAM ID SEMICOLON vars . functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (2) program -> PROGRAM ID SEMICOLON vars . MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (24) functions_list -> . function functions_list
    (25) functions_list -> . function
    (26) function -> . MODULE return_type ID neupoint_add_function parameters_list vars block
    (27) function -> . MODULE return_type ID neupoint_add_function parameters_list block

    MAIN            shift and go to state 12
    MODULE          shift and go to state 10

    functions_list                 shift and go to state 11
    function                       shift and go to state 9

state 6

    (3) program -> PROGRAM ID SEMICOLON functions_list . neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (34) neupoint_back_global -> .

    MAIN            reduce using rule 34 (neupoint_back_global -> .)

    neupoint_back_global           shift and go to state 13

state 7

    (4) program -> PROGRAM ID SEMICOLON MAIN . LEFTPARENTHESIS RIGHTPARENTHESIS block

    LEFTPARENTHESIS shift and go to state 14


state 8

    (8) vars -> VAR . vars_lists neupoint_add_vars
    (9) vars_lists -> . data_type decla_ids_list SEMICOLON vars_lists
    (10) vars_lists -> . data_type decla_ids_list SEMICOLON
    (5) data_type -> . INT
    (6) data_type -> . FLOAT
    (7) data_type -> . CHAR

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19

    vars_lists                     shift and go to state 15
    data_type                      shift and go to state 16

state 9

    (24) functions_list -> function . functions_list
    (25) functions_list -> function .
    (24) functions_list -> . function functions_list
    (25) functions_list -> . function
    (26) function -> . MODULE return_type ID neupoint_add_function parameters_list vars block
    (27) function -> . MODULE return_type ID neupoint_add_function parameters_list block

    MAIN            reduce using rule 25 (functions_list -> function .)
    MODULE          shift and go to state 10

    function                       shift and go to state 9
    functions_list                 shift and go to state 20

state 10

    (26) function -> MODULE . return_type ID neupoint_add_function parameters_list vars block
    (27) function -> MODULE . return_type ID neupoint_add_function parameters_list block
    (22) return_type -> . data_type
    (23) return_type -> . VOID
    (5) data_type -> . INT
    (6) data_type -> . FLOAT
    (7) data_type -> . CHAR

    VOID            shift and go to state 23
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19

    return_type                    shift and go to state 21
    data_type                      shift and go to state 22

state 11

    (1) program -> PROGRAM ID SEMICOLON vars functions_list . neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (34) neupoint_back_global -> .

    MAIN            reduce using rule 34 (neupoint_back_global -> .)

    neupoint_back_global           shift and go to state 24

state 12

    (2) program -> PROGRAM ID SEMICOLON vars MAIN . LEFTPARENTHESIS RIGHTPARENTHESIS block

    LEFTPARENTHESIS shift and go to state 25


state 13

    (3) program -> PROGRAM ID SEMICOLON functions_list neupoint_back_global . MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block

    MAIN            shift and go to state 26


state 14

    (4) program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS . RIGHTPARENTHESIS block

    RIGHTPARENTHESIS shift and go to state 27


state 15

    (8) vars -> VAR vars_lists . neupoint_add_vars
    (21) neupoint_add_vars -> .

    MAIN            reduce using rule 21 (neupoint_add_vars -> .)
    MODULE          reduce using rule 21 (neupoint_add_vars -> .)
    LEFTBRACKET     reduce using rule 21 (neupoint_add_vars -> .)

    neupoint_add_vars              shift and go to state 28

state 16

    (9) vars_lists -> data_type . decla_ids_list SEMICOLON vars_lists
    (10) vars_lists -> data_type . decla_ids_list SEMICOLON
    (11) decla_ids_list -> . decla_identifier COMMA decla_ids_list
    (12) decla_ids_list -> . decla_identifier
    (13) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (15) decla_identifier -> . ID

    ID              shift and go to state 31

    decla_ids_list                 shift and go to state 29
    decla_identifier               shift and go to state 30

state 17

    (5) data_type -> INT .

    ID              reduce using rule 5 (data_type -> INT .)


state 18

    (6) data_type -> FLOAT .

    ID              reduce using rule 6 (data_type -> FLOAT .)


state 19

    (7) data_type -> CHAR .

    ID              reduce using rule 7 (data_type -> CHAR .)


state 20

    (24) functions_list -> function functions_list .

    MAIN            reduce using rule 24 (functions_list -> function functions_list .)


state 21

    (26) function -> MODULE return_type . ID neupoint_add_function parameters_list vars block
    (27) function -> MODULE return_type . ID neupoint_add_function parameters_list block

    ID              shift and go to state 32


state 22

    (22) return_type -> data_type .

    ID              reduce using rule 22 (return_type -> data_type .)


state 23

    (23) return_type -> VOID .

    ID              reduce using rule 23 (return_type -> VOID .)


state 24

    (1) program -> PROGRAM ID SEMICOLON vars functions_list neupoint_back_global . MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block

    MAIN            shift and go to state 33


state 25

    (2) program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS . RIGHTPARENTHESIS block

    RIGHTPARENTHESIS shift and go to state 34


state 26

    (3) program -> PROGRAM ID SEMICOLON functions_list neupoint_back_global MAIN . LEFTPARENTHESIS RIGHTPARENTHESIS block

    LEFTPARENTHESIS shift and go to state 35


state 27

    (4) program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS . block
    (48) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (49) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 36

state 28

    (8) vars -> VAR vars_lists neupoint_add_vars .

    MAIN            reduce using rule 8 (vars -> VAR vars_lists neupoint_add_vars .)
    MODULE          reduce using rule 8 (vars -> VAR vars_lists neupoint_add_vars .)
    LEFTBRACKET     reduce using rule 8 (vars -> VAR vars_lists neupoint_add_vars .)


state 29

    (9) vars_lists -> data_type decla_ids_list . SEMICOLON vars_lists
    (10) vars_lists -> data_type decla_ids_list . SEMICOLON

    SEMICOLON       shift and go to state 38


state 30

    (11) decla_ids_list -> decla_identifier . COMMA decla_ids_list
    (12) decla_ids_list -> decla_identifier .

    COMMA           shift and go to state 39
    SEMICOLON       reduce using rule 12 (decla_ids_list -> decla_identifier .)


state 31

    (13) decla_identifier -> ID . LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> ID . LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (15) decla_identifier -> ID .

    LEFTSQRBRACKET  shift and go to state 40
    COMMA           reduce using rule 15 (decla_identifier -> ID .)
    SEMICOLON       reduce using rule 15 (decla_identifier -> ID .)
    RIGHTPARENTHESIS reduce using rule 15 (decla_identifier -> ID .)


state 32

    (26) function -> MODULE return_type ID . neupoint_add_function parameters_list vars block
    (27) function -> MODULE return_type ID . neupoint_add_function parameters_list block
    (32) neupoint_add_function -> .

    LEFTPARENTHESIS reduce using rule 32 (neupoint_add_function -> .)

    neupoint_add_function          shift and go to state 41

state 33

    (1) program -> PROGRAM ID SEMICOLON vars functions_list neupoint_back_global MAIN . LEFTPARENTHESIS RIGHTPARENTHESIS block

    LEFTPARENTHESIS shift and go to state 42


state 34

    (2) program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS . block
    (48) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (49) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 43

state 35

    (3) program -> PROGRAM ID SEMICOLON functions_list neupoint_back_global MAIN LEFTPARENTHESIS . RIGHTPARENTHESIS block

    RIGHTPARENTHESIS shift and go to state 44


state 36

    (4) program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .

    $end            reduce using rule 4 (program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .)


state 37

    (48) block -> LEFTBRACKET . statutes_list RIGHTBRACKET
    (49) block -> LEFTBRACKET . RIGHTBRACKET
    (50) statutes_list -> . statute statutes_list
    (51) statutes_list -> . statute
    (52) statute -> . asignation
    (53) statute -> . reading
    (54) statute -> . writing
    (55) statute -> . decision
    (56) statute -> . loop
    (57) statute -> . function_return
    (58) statute -> . function_call SEMICOLON
    (59) asignation -> . identifier EQUALS expresion SEMICOLON
    (60) asignation -> . identifier PLUSEQUALS expresion SEMICOLON
    (61) asignation -> . identifier SUBSTRACTEQUALS expresion SEMICOLON
    (62) asignation -> . identifier INCREMENT SEMICOLON
    (63) asignation -> . identifier DECREMENT SEMICOLON
    (64) reading -> . READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON
    (65) writing -> . WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON
    (70) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block
    (71) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block
    (72) loop -> . conditional block
    (73) loop -> . non_conditional block
    (76) function_return -> . RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON
    (77) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID
    (74) conditional -> . WHILE LEFTPARENTHESIS expresion RIGHTPARENTHESIS DO
    (75) non_conditional -> . FOR ID EQUALS exp TO exp DO

    RIGHTBRACKET    shift and go to state 46
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    RETURN          shift and go to state 61
    ID              shift and go to state 62
    WHILE           shift and go to state 63
    FOR             shift and go to state 64

    statutes_list                  shift and go to state 45
    statute                        shift and go to state 47
    asignation                     shift and go to state 48
    reading                        shift and go to state 49
    writing                        shift and go to state 50
    decision                       shift and go to state 51
    loop                           shift and go to state 52
    function_return                shift and go to state 53
    function_call                  shift and go to state 54
    identifier                     shift and go to state 55
    conditional                    shift and go to state 59
    non_conditional                shift and go to state 60

state 38

    (9) vars_lists -> data_type decla_ids_list SEMICOLON . vars_lists
    (10) vars_lists -> data_type decla_ids_list SEMICOLON .
    (9) vars_lists -> . data_type decla_ids_list SEMICOLON vars_lists
    (10) vars_lists -> . data_type decla_ids_list SEMICOLON
    (5) data_type -> . INT
    (6) data_type -> . FLOAT
    (7) data_type -> . CHAR

    MAIN            reduce using rule 10 (vars_lists -> data_type decla_ids_list SEMICOLON .)
    MODULE          reduce using rule 10 (vars_lists -> data_type decla_ids_list SEMICOLON .)
    LEFTBRACKET     reduce using rule 10 (vars_lists -> data_type decla_ids_list SEMICOLON .)
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19

    data_type                      shift and go to state 16
    vars_lists                     shift and go to state 65

state 39

    (11) decla_ids_list -> decla_identifier COMMA . decla_ids_list
    (11) decla_ids_list -> . decla_identifier COMMA decla_ids_list
    (12) decla_ids_list -> . decla_identifier
    (13) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (15) decla_identifier -> . ID

    ID              shift and go to state 31

    decla_identifier               shift and go to state 30
    decla_ids_list                 shift and go to state 66

state 40

    (13) decla_identifier -> ID LEFTSQRBRACKET . CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> ID LEFTSQRBRACKET . CTEINT RIGHTSQRBRACKET

    CTEINT          shift and go to state 67


state 41

    (26) function -> MODULE return_type ID neupoint_add_function . parameters_list vars block
    (27) function -> MODULE return_type ID neupoint_add_function . parameters_list block
    (28) parameters_list -> . LEFTPARENTHESIS parameter RIGHTPARENTHESIS neupoint_add_parameters
    (29) parameters_list -> . LEFTPARENTHESIS RIGHTPARENTHESIS

    LEFTPARENTHESIS shift and go to state 69

    parameters_list                shift and go to state 68

state 42

    (1) program -> PROGRAM ID SEMICOLON vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS . RIGHTPARENTHESIS block

    RIGHTPARENTHESIS shift and go to state 70


state 43

    (2) program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .

    $end            reduce using rule 2 (program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .)


state 44

    (3) program -> PROGRAM ID SEMICOLON functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS . block
    (48) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (49) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 71

state 45

    (48) block -> LEFTBRACKET statutes_list . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 72


state 46

    (49) block -> LEFTBRACKET RIGHTBRACKET .

    $end            reduce using rule 49 (block -> LEFTBRACKET RIGHTBRACKET .)
    READ            reduce using rule 49 (block -> LEFTBRACKET RIGHTBRACKET .)
    WRITE           reduce using rule 49 (block -> LEFTBRACKET RIGHTBRACKET .)
    IF              reduce using rule 49 (block -> LEFTBRACKET RIGHTBRACKET .)
    RETURN          reduce using rule 49 (block -> LEFTBRACKET RIGHTBRACKET .)
    ID              reduce using rule 49 (block -> LEFTBRACKET RIGHTBRACKET .)
    WHILE           reduce using rule 49 (block -> LEFTBRACKET RIGHTBRACKET .)
    FOR             reduce using rule 49 (block -> LEFTBRACKET RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 49 (block -> LEFTBRACKET RIGHTBRACKET .)
    MODULE          reduce using rule 49 (block -> LEFTBRACKET RIGHTBRACKET .)
    MAIN            reduce using rule 49 (block -> LEFTBRACKET RIGHTBRACKET .)
    ELSE            reduce using rule 49 (block -> LEFTBRACKET RIGHTBRACKET .)


state 47

    (50) statutes_list -> statute . statutes_list
    (51) statutes_list -> statute .
    (50) statutes_list -> . statute statutes_list
    (51) statutes_list -> . statute
    (52) statute -> . asignation
    (53) statute -> . reading
    (54) statute -> . writing
    (55) statute -> . decision
    (56) statute -> . loop
    (57) statute -> . function_return
    (58) statute -> . function_call SEMICOLON
    (59) asignation -> . identifier EQUALS expresion SEMICOLON
    (60) asignation -> . identifier PLUSEQUALS expresion SEMICOLON
    (61) asignation -> . identifier SUBSTRACTEQUALS expresion SEMICOLON
    (62) asignation -> . identifier INCREMENT SEMICOLON
    (63) asignation -> . identifier DECREMENT SEMICOLON
    (64) reading -> . READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON
    (65) writing -> . WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON
    (70) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block
    (71) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block
    (72) loop -> . conditional block
    (73) loop -> . non_conditional block
    (76) function_return -> . RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON
    (77) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID
    (74) conditional -> . WHILE LEFTPARENTHESIS expresion RIGHTPARENTHESIS DO
    (75) non_conditional -> . FOR ID EQUALS exp TO exp DO

    RIGHTBRACKET    reduce using rule 51 (statutes_list -> statute .)
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    RETURN          shift and go to state 61
    ID              shift and go to state 62
    WHILE           shift and go to state 63
    FOR             shift and go to state 64

    statute                        shift and go to state 47
    statutes_list                  shift and go to state 73
    asignation                     shift and go to state 48
    reading                        shift and go to state 49
    writing                        shift and go to state 50
    decision                       shift and go to state 51
    loop                           shift and go to state 52
    function_return                shift and go to state 53
    function_call                  shift and go to state 54
    identifier                     shift and go to state 55
    conditional                    shift and go to state 59
    non_conditional                shift and go to state 60

state 48

    (52) statute -> asignation .

    READ            reduce using rule 52 (statute -> asignation .)
    WRITE           reduce using rule 52 (statute -> asignation .)
    IF              reduce using rule 52 (statute -> asignation .)
    RETURN          reduce using rule 52 (statute -> asignation .)
    ID              reduce using rule 52 (statute -> asignation .)
    WHILE           reduce using rule 52 (statute -> asignation .)
    FOR             reduce using rule 52 (statute -> asignation .)
    RIGHTBRACKET    reduce using rule 52 (statute -> asignation .)


state 49

    (53) statute -> reading .

    READ            reduce using rule 53 (statute -> reading .)
    WRITE           reduce using rule 53 (statute -> reading .)
    IF              reduce using rule 53 (statute -> reading .)
    RETURN          reduce using rule 53 (statute -> reading .)
    ID              reduce using rule 53 (statute -> reading .)
    WHILE           reduce using rule 53 (statute -> reading .)
    FOR             reduce using rule 53 (statute -> reading .)
    RIGHTBRACKET    reduce using rule 53 (statute -> reading .)


state 50

    (54) statute -> writing .

    READ            reduce using rule 54 (statute -> writing .)
    WRITE           reduce using rule 54 (statute -> writing .)
    IF              reduce using rule 54 (statute -> writing .)
    RETURN          reduce using rule 54 (statute -> writing .)
    ID              reduce using rule 54 (statute -> writing .)
    WHILE           reduce using rule 54 (statute -> writing .)
    FOR             reduce using rule 54 (statute -> writing .)
    RIGHTBRACKET    reduce using rule 54 (statute -> writing .)


state 51

    (55) statute -> decision .

    READ            reduce using rule 55 (statute -> decision .)
    WRITE           reduce using rule 55 (statute -> decision .)
    IF              reduce using rule 55 (statute -> decision .)
    RETURN          reduce using rule 55 (statute -> decision .)
    ID              reduce using rule 55 (statute -> decision .)
    WHILE           reduce using rule 55 (statute -> decision .)
    FOR             reduce using rule 55 (statute -> decision .)
    RIGHTBRACKET    reduce using rule 55 (statute -> decision .)


state 52

    (56) statute -> loop .

    READ            reduce using rule 56 (statute -> loop .)
    WRITE           reduce using rule 56 (statute -> loop .)
    IF              reduce using rule 56 (statute -> loop .)
    RETURN          reduce using rule 56 (statute -> loop .)
    ID              reduce using rule 56 (statute -> loop .)
    WHILE           reduce using rule 56 (statute -> loop .)
    FOR             reduce using rule 56 (statute -> loop .)
    RIGHTBRACKET    reduce using rule 56 (statute -> loop .)


state 53

    (57) statute -> function_return .

    READ            reduce using rule 57 (statute -> function_return .)
    WRITE           reduce using rule 57 (statute -> function_return .)
    IF              reduce using rule 57 (statute -> function_return .)
    RETURN          reduce using rule 57 (statute -> function_return .)
    ID              reduce using rule 57 (statute -> function_return .)
    WHILE           reduce using rule 57 (statute -> function_return .)
    FOR             reduce using rule 57 (statute -> function_return .)
    RIGHTBRACKET    reduce using rule 57 (statute -> function_return .)


state 54

    (58) statute -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 74


state 55

    (59) asignation -> identifier . EQUALS expresion SEMICOLON
    (60) asignation -> identifier . PLUSEQUALS expresion SEMICOLON
    (61) asignation -> identifier . SUBSTRACTEQUALS expresion SEMICOLON
    (62) asignation -> identifier . INCREMENT SEMICOLON
    (63) asignation -> identifier . DECREMENT SEMICOLON

    EQUALS          shift and go to state 75
    PLUSEQUALS      shift and go to state 76
    SUBSTRACTEQUALS shift and go to state 77
    INCREMENT       shift and go to state 78
    DECREMENT       shift and go to state 79


state 56

    (64) reading -> READ . LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON

    LEFTPARENTHESIS shift and go to state 80


state 57

    (65) writing -> WRITE . LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON

    LEFTPARENTHESIS shift and go to state 81


state 58

    (70) decision -> IF . LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block
    (71) decision -> IF . LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block

    LEFTPARENTHESIS shift and go to state 82


state 59

    (72) loop -> conditional . block
    (48) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (49) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 83

state 60

    (73) loop -> non_conditional . block
    (48) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (49) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 84

state 61

    (76) function_return -> RETURN . LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON

    LEFTPARENTHESIS shift and go to state 85


state 62

    (77) function_call -> ID . LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> ID .

    LEFTPARENTHESIS shift and go to state 86
    LEFTSQRBRACKET  shift and go to state 87
    EQUALS          reduce using rule 20 (identifier -> ID .)
    PLUSEQUALS      reduce using rule 20 (identifier -> ID .)
    SUBSTRACTEQUALS reduce using rule 20 (identifier -> ID .)
    INCREMENT       reduce using rule 20 (identifier -> ID .)
    DECREMENT       reduce using rule 20 (identifier -> ID .)
    MULTIPLY        reduce using rule 20 (identifier -> ID .)
    DIVIDE          reduce using rule 20 (identifier -> ID .)
    MOD             reduce using rule 20 (identifier -> ID .)
    PLUS            reduce using rule 20 (identifier -> ID .)
    MINUS           reduce using rule 20 (identifier -> ID .)
    COMPARISON      reduce using rule 20 (identifier -> ID .)
    GREATERHANOREQUAL reduce using rule 20 (identifier -> ID .)
    LESSTHANOREQUAL reduce using rule 20 (identifier -> ID .)
    GREATERTHAN     reduce using rule 20 (identifier -> ID .)
    LESSTHAN        reduce using rule 20 (identifier -> ID .)
    DIFFERENT       reduce using rule 20 (identifier -> ID .)
    OR              reduce using rule 20 (identifier -> ID .)
    AND             reduce using rule 20 (identifier -> ID .)
    SEMICOLON       reduce using rule 20 (identifier -> ID .)
    COMMA           reduce using rule 20 (identifier -> ID .)
    RIGHTPARENTHESIS reduce using rule 20 (identifier -> ID .)
    RIGHTSQRBRACKET reduce using rule 20 (identifier -> ID .)
    TO              reduce using rule 20 (identifier -> ID .)
    DO              reduce using rule 20 (identifier -> ID .)


state 63

    (74) conditional -> WHILE . LEFTPARENTHESIS expresion RIGHTPARENTHESIS DO

    LEFTPARENTHESIS shift and go to state 88


state 64

    (75) non_conditional -> FOR . ID EQUALS exp TO exp DO

    ID              shift and go to state 89


state 65

    (9) vars_lists -> data_type decla_ids_list SEMICOLON vars_lists .

    MAIN            reduce using rule 9 (vars_lists -> data_type decla_ids_list SEMICOLON vars_lists .)
    MODULE          reduce using rule 9 (vars_lists -> data_type decla_ids_list SEMICOLON vars_lists .)
    LEFTBRACKET     reduce using rule 9 (vars_lists -> data_type decla_ids_list SEMICOLON vars_lists .)


state 66

    (11) decla_ids_list -> decla_identifier COMMA decla_ids_list .

    SEMICOLON       reduce using rule 11 (decla_ids_list -> decla_identifier COMMA decla_ids_list .)


state 67

    (13) decla_identifier -> ID LEFTSQRBRACKET CTEINT . RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> ID LEFTSQRBRACKET CTEINT . RIGHTSQRBRACKET

    RIGHTSQRBRACKET shift and go to state 90


state 68

    (26) function -> MODULE return_type ID neupoint_add_function parameters_list . vars block
    (27) function -> MODULE return_type ID neupoint_add_function parameters_list . block
    (8) vars -> . VAR vars_lists neupoint_add_vars
    (48) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (49) block -> . LEFTBRACKET RIGHTBRACKET

    VAR             shift and go to state 8
    LEFTBRACKET     shift and go to state 37

    vars                           shift and go to state 91
    block                          shift and go to state 92

state 69

    (28) parameters_list -> LEFTPARENTHESIS . parameter RIGHTPARENTHESIS neupoint_add_parameters
    (29) parameters_list -> LEFTPARENTHESIS . RIGHTPARENTHESIS
    (30) parameter -> . data_type decla_identifier COMMA parameter
    (31) parameter -> . data_type decla_identifier
    (5) data_type -> . INT
    (6) data_type -> . FLOAT
    (7) data_type -> . CHAR

    RIGHTPARENTHESIS shift and go to state 94
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19

    parameter                      shift and go to state 93
    data_type                      shift and go to state 95

state 70

    (1) program -> PROGRAM ID SEMICOLON vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS . block
    (48) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (49) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 96

state 71

    (3) program -> PROGRAM ID SEMICOLON functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .

    $end            reduce using rule 3 (program -> PROGRAM ID SEMICOLON functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .)


state 72

    (48) block -> LEFTBRACKET statutes_list RIGHTBRACKET .

    $end            reduce using rule 48 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    READ            reduce using rule 48 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    WRITE           reduce using rule 48 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    IF              reduce using rule 48 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    RETURN          reduce using rule 48 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    ID              reduce using rule 48 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    WHILE           reduce using rule 48 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    FOR             reduce using rule 48 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 48 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    MODULE          reduce using rule 48 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    MAIN            reduce using rule 48 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    ELSE            reduce using rule 48 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)


state 73

    (50) statutes_list -> statute statutes_list .

    RIGHTBRACKET    reduce using rule 50 (statutes_list -> statute statutes_list .)


state 74

    (58) statute -> function_call SEMICOLON .

    READ            reduce using rule 58 (statute -> function_call SEMICOLON .)
    WRITE           reduce using rule 58 (statute -> function_call SEMICOLON .)
    IF              reduce using rule 58 (statute -> function_call SEMICOLON .)
    RETURN          reduce using rule 58 (statute -> function_call SEMICOLON .)
    ID              reduce using rule 58 (statute -> function_call SEMICOLON .)
    WHILE           reduce using rule 58 (statute -> function_call SEMICOLON .)
    FOR             reduce using rule 58 (statute -> function_call SEMICOLON .)
    RIGHTBRACKET    reduce using rule 58 (statute -> function_call SEMICOLON .)


state 75

    (59) asignation -> identifier EQUALS . expresion SEMICOLON
    (80) expresion -> . exp comparators neupoint_add_operator exp
    (81) expresion -> . exp
    (82) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (83) exp -> . term neupoint_arithmetic_exp_quad
    (84) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (85) term -> . factor neupoint_arithmetic_term_quad
    (86) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (87) factor -> . CTEINT neupoint_add_cte_operand
    (88) factor -> . CTEFLOAT neupoint_add_cte_operand
    (89) factor -> . CTECHAR neupoint_add_cte_operand
    (90) factor -> . function_call
    (91) factor -> . identifier neupoint_add_operand
    (77) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 102
    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 62

    identifier                     shift and go to state 97
    expresion                      shift and go to state 98
    exp                            shift and go to state 99
    term                           shift and go to state 100
    factor                         shift and go to state 101
    function_call                  shift and go to state 106

state 76

    (60) asignation -> identifier PLUSEQUALS . expresion SEMICOLON
    (80) expresion -> . exp comparators neupoint_add_operator exp
    (81) expresion -> . exp
    (82) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (83) exp -> . term neupoint_arithmetic_exp_quad
    (84) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (85) term -> . factor neupoint_arithmetic_term_quad
    (86) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (87) factor -> . CTEINT neupoint_add_cte_operand
    (88) factor -> . CTEFLOAT neupoint_add_cte_operand
    (89) factor -> . CTECHAR neupoint_add_cte_operand
    (90) factor -> . function_call
    (91) factor -> . identifier neupoint_add_operand
    (77) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 102
    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 62

    identifier                     shift and go to state 97
    expresion                      shift and go to state 107
    exp                            shift and go to state 99
    term                           shift and go to state 100
    factor                         shift and go to state 101
    function_call                  shift and go to state 106

state 77

    (61) asignation -> identifier SUBSTRACTEQUALS . expresion SEMICOLON
    (80) expresion -> . exp comparators neupoint_add_operator exp
    (81) expresion -> . exp
    (82) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (83) exp -> . term neupoint_arithmetic_exp_quad
    (84) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (85) term -> . factor neupoint_arithmetic_term_quad
    (86) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (87) factor -> . CTEINT neupoint_add_cte_operand
    (88) factor -> . CTEFLOAT neupoint_add_cte_operand
    (89) factor -> . CTECHAR neupoint_add_cte_operand
    (90) factor -> . function_call
    (91) factor -> . identifier neupoint_add_operand
    (77) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 102
    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 62

    identifier                     shift and go to state 97
    expresion                      shift and go to state 108
    exp                            shift and go to state 99
    term                           shift and go to state 100
    factor                         shift and go to state 101
    function_call                  shift and go to state 106

state 78

    (62) asignation -> identifier INCREMENT . SEMICOLON

    SEMICOLON       shift and go to state 109


state 79

    (63) asignation -> identifier DECREMENT . SEMICOLON

    SEMICOLON       shift and go to state 110


state 80

    (64) reading -> READ LEFTPARENTHESIS . ids_list RIGHTPARENTHESIS SEMICOLON
    (16) ids_list -> . identifier COMMA ids_list
    (17) ids_list -> . identifier
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    ID              shift and go to state 113

    ids_list                       shift and go to state 111
    identifier                     shift and go to state 112

state 81

    (65) writing -> WRITE LEFTPARENTHESIS . writing_list RIGHTPARENTHESIS SEMICOLON
    (66) writing_list -> . CTESTRING COMMA writing_list
    (67) writing_list -> . expresion COMMA writing_list
    (68) writing_list -> . CTESTRING
    (69) writing_list -> . expresion
    (80) expresion -> . exp comparators neupoint_add_operator exp
    (81) expresion -> . exp
    (82) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (83) exp -> . term neupoint_arithmetic_exp_quad
    (84) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (85) term -> . factor neupoint_arithmetic_term_quad
    (86) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (87) factor -> . CTEINT neupoint_add_cte_operand
    (88) factor -> . CTEFLOAT neupoint_add_cte_operand
    (89) factor -> . CTECHAR neupoint_add_cte_operand
    (90) factor -> . function_call
    (91) factor -> . identifier neupoint_add_operand
    (77) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    CTESTRING       shift and go to state 115
    LEFTPARENTHESIS shift and go to state 102
    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 62

    writing_list                   shift and go to state 114
    expresion                      shift and go to state 116
    exp                            shift and go to state 99
    term                           shift and go to state 100
    factor                         shift and go to state 101
    function_call                  shift and go to state 106
    identifier                     shift and go to state 97

state 82

    (70) decision -> IF LEFTPARENTHESIS . expresion RIGHTPARENTHESIS THEN block ELSE block
    (71) decision -> IF LEFTPARENTHESIS . expresion RIGHTPARENTHESIS THEN block
    (80) expresion -> . exp comparators neupoint_add_operator exp
    (81) expresion -> . exp
    (82) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (83) exp -> . term neupoint_arithmetic_exp_quad
    (84) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (85) term -> . factor neupoint_arithmetic_term_quad
    (86) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (87) factor -> . CTEINT neupoint_add_cte_operand
    (88) factor -> . CTEFLOAT neupoint_add_cte_operand
    (89) factor -> . CTECHAR neupoint_add_cte_operand
    (90) factor -> . function_call
    (91) factor -> . identifier neupoint_add_operand
    (77) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 102
    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 62

    expresion                      shift and go to state 117
    exp                            shift and go to state 99
    term                           shift and go to state 100
    factor                         shift and go to state 101
    function_call                  shift and go to state 106
    identifier                     shift and go to state 97

state 83

    (72) loop -> conditional block .

    READ            reduce using rule 72 (loop -> conditional block .)
    WRITE           reduce using rule 72 (loop -> conditional block .)
    IF              reduce using rule 72 (loop -> conditional block .)
    RETURN          reduce using rule 72 (loop -> conditional block .)
    ID              reduce using rule 72 (loop -> conditional block .)
    WHILE           reduce using rule 72 (loop -> conditional block .)
    FOR             reduce using rule 72 (loop -> conditional block .)
    RIGHTBRACKET    reduce using rule 72 (loop -> conditional block .)


state 84

    (73) loop -> non_conditional block .

    READ            reduce using rule 73 (loop -> non_conditional block .)
    WRITE           reduce using rule 73 (loop -> non_conditional block .)
    IF              reduce using rule 73 (loop -> non_conditional block .)
    RETURN          reduce using rule 73 (loop -> non_conditional block .)
    ID              reduce using rule 73 (loop -> non_conditional block .)
    WHILE           reduce using rule 73 (loop -> non_conditional block .)
    FOR             reduce using rule 73 (loop -> non_conditional block .)
    RIGHTBRACKET    reduce using rule 73 (loop -> non_conditional block .)


state 85

    (76) function_return -> RETURN LEFTPARENTHESIS . exp RIGHTPARENTHESIS SEMICOLON
    (82) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (83) exp -> . term neupoint_arithmetic_exp_quad
    (84) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (85) term -> . factor neupoint_arithmetic_term_quad
    (86) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (87) factor -> . CTEINT neupoint_add_cte_operand
    (88) factor -> . CTEFLOAT neupoint_add_cte_operand
    (89) factor -> . CTECHAR neupoint_add_cte_operand
    (90) factor -> . function_call
    (91) factor -> . identifier neupoint_add_operand
    (77) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 102
    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 62

    exp                            shift and go to state 118
    term                           shift and go to state 100
    factor                         shift and go to state 101
    function_call                  shift and go to state 106
    identifier                     shift and go to state 97

state 86

    (77) function_call -> ID LEFTPARENTHESIS . expresion_list RIGHTPARENTHESIS
    (78) expresion_list -> . expresion COMMA expresion_list
    (79) expresion_list -> . expresion
    (80) expresion -> . exp comparators neupoint_add_operator exp
    (81) expresion -> . exp
    (82) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (83) exp -> . term neupoint_arithmetic_exp_quad
    (84) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (85) term -> . factor neupoint_arithmetic_term_quad
    (86) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (87) factor -> . CTEINT neupoint_add_cte_operand
    (88) factor -> . CTEFLOAT neupoint_add_cte_operand
    (89) factor -> . CTECHAR neupoint_add_cte_operand
    (90) factor -> . function_call
    (91) factor -> . identifier neupoint_add_operand
    (77) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 102
    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 62

    expresion_list                 shift and go to state 119
    expresion                      shift and go to state 120
    exp                            shift and go to state 99
    term                           shift and go to state 100
    factor                         shift and go to state 101
    function_call                  shift and go to state 106
    identifier                     shift and go to state 97

state 87

    (18) identifier -> ID LEFTSQRBRACKET . expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> ID LEFTSQRBRACKET . expresion RIGHTSQRBRACKET
    (80) expresion -> . exp comparators neupoint_add_operator exp
    (81) expresion -> . exp
    (82) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (83) exp -> . term neupoint_arithmetic_exp_quad
    (84) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (85) term -> . factor neupoint_arithmetic_term_quad
    (86) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (87) factor -> . CTEINT neupoint_add_cte_operand
    (88) factor -> . CTEFLOAT neupoint_add_cte_operand
    (89) factor -> . CTECHAR neupoint_add_cte_operand
    (90) factor -> . function_call
    (91) factor -> . identifier neupoint_add_operand
    (77) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 102
    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 62

    expresion                      shift and go to state 121
    exp                            shift and go to state 99
    term                           shift and go to state 100
    factor                         shift and go to state 101
    function_call                  shift and go to state 106
    identifier                     shift and go to state 97

state 88

    (74) conditional -> WHILE LEFTPARENTHESIS . expresion RIGHTPARENTHESIS DO
    (80) expresion -> . exp comparators neupoint_add_operator exp
    (81) expresion -> . exp
    (82) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (83) exp -> . term neupoint_arithmetic_exp_quad
    (84) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (85) term -> . factor neupoint_arithmetic_term_quad
    (86) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (87) factor -> . CTEINT neupoint_add_cte_operand
    (88) factor -> . CTEFLOAT neupoint_add_cte_operand
    (89) factor -> . CTECHAR neupoint_add_cte_operand
    (90) factor -> . function_call
    (91) factor -> . identifier neupoint_add_operand
    (77) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 102
    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 62

    expresion                      shift and go to state 122
    exp                            shift and go to state 99
    term                           shift and go to state 100
    factor                         shift and go to state 101
    function_call                  shift and go to state 106
    identifier                     shift and go to state 97

state 89

    (75) non_conditional -> FOR ID . EQUALS exp TO exp DO

    EQUALS          shift and go to state 123


state 90

    (13) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET . LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .

    LEFTSQRBRACKET  shift and go to state 124
    COMMA           reduce using rule 14 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)
    SEMICOLON       reduce using rule 14 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)
    RIGHTPARENTHESIS reduce using rule 14 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)


state 91

    (26) function -> MODULE return_type ID neupoint_add_function parameters_list vars . block
    (48) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (49) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 125

state 92

    (27) function -> MODULE return_type ID neupoint_add_function parameters_list block .

    MODULE          reduce using rule 27 (function -> MODULE return_type ID neupoint_add_function parameters_list block .)
    MAIN            reduce using rule 27 (function -> MODULE return_type ID neupoint_add_function parameters_list block .)


state 93

    (28) parameters_list -> LEFTPARENTHESIS parameter . RIGHTPARENTHESIS neupoint_add_parameters

    RIGHTPARENTHESIS shift and go to state 126


state 94

    (29) parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS .

    VAR             reduce using rule 29 (parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS .)
    LEFTBRACKET     reduce using rule 29 (parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS .)


state 95

    (30) parameter -> data_type . decla_identifier COMMA parameter
    (31) parameter -> data_type . decla_identifier
    (13) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (15) decla_identifier -> . ID

    ID              shift and go to state 31

    decla_identifier               shift and go to state 127

state 96

    (1) program -> PROGRAM ID SEMICOLON vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON vars functions_list neupoint_back_global MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .)


state 97

    (91) factor -> identifier . neupoint_add_operand
    (93) neupoint_add_operand -> .

    MULTIPLY        reduce using rule 93 (neupoint_add_operand -> .)
    DIVIDE          reduce using rule 93 (neupoint_add_operand -> .)
    MOD             reduce using rule 93 (neupoint_add_operand -> .)
    PLUS            reduce using rule 93 (neupoint_add_operand -> .)
    MINUS           reduce using rule 93 (neupoint_add_operand -> .)
    COMPARISON      reduce using rule 93 (neupoint_add_operand -> .)
    GREATERHANOREQUAL reduce using rule 93 (neupoint_add_operand -> .)
    LESSTHANOREQUAL reduce using rule 93 (neupoint_add_operand -> .)
    GREATERTHAN     reduce using rule 93 (neupoint_add_operand -> .)
    LESSTHAN        reduce using rule 93 (neupoint_add_operand -> .)
    DIFFERENT       reduce using rule 93 (neupoint_add_operand -> .)
    OR              reduce using rule 93 (neupoint_add_operand -> .)
    AND             reduce using rule 93 (neupoint_add_operand -> .)
    SEMICOLON       reduce using rule 93 (neupoint_add_operand -> .)
    COMMA           reduce using rule 93 (neupoint_add_operand -> .)
    RIGHTPARENTHESIS reduce using rule 93 (neupoint_add_operand -> .)
    RIGHTSQRBRACKET reduce using rule 93 (neupoint_add_operand -> .)
    TO              reduce using rule 93 (neupoint_add_operand -> .)
    DO              reduce using rule 93 (neupoint_add_operand -> .)

    neupoint_add_operand           shift and go to state 128

state 98

    (59) asignation -> identifier EQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 129


state 99

    (80) expresion -> exp . comparators neupoint_add_operator exp
    (81) expresion -> exp .
    (35) comparators -> . COMPARISON
    (36) comparators -> . GREATERHANOREQUAL
    (37) comparators -> . LESSTHANOREQUAL
    (38) comparators -> . GREATERTHAN
    (39) comparators -> . LESSTHAN
    (40) comparators -> . DIFFERENT
    (41) comparators -> . OR
    (42) comparators -> . AND

    SEMICOLON       reduce using rule 81 (expresion -> exp .)
    COMMA           reduce using rule 81 (expresion -> exp .)
    RIGHTPARENTHESIS reduce using rule 81 (expresion -> exp .)
    RIGHTSQRBRACKET reduce using rule 81 (expresion -> exp .)
    COMPARISON      shift and go to state 131
    GREATERHANOREQUAL shift and go to state 132
    LESSTHANOREQUAL shift and go to state 133
    GREATERTHAN     shift and go to state 134
    LESSTHAN        shift and go to state 135
    DIFFERENT       shift and go to state 136
    OR              shift and go to state 137
    AND             shift and go to state 138

    comparators                    shift and go to state 130

state 100

    (82) exp -> term . neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (83) exp -> term . neupoint_arithmetic_exp_quad
    (95) neupoint_arithmetic_exp_quad -> .

    PLUS            reduce using rule 95 (neupoint_arithmetic_exp_quad -> .)
    MINUS           reduce using rule 95 (neupoint_arithmetic_exp_quad -> .)
    COMPARISON      reduce using rule 95 (neupoint_arithmetic_exp_quad -> .)
    GREATERHANOREQUAL reduce using rule 95 (neupoint_arithmetic_exp_quad -> .)
    LESSTHANOREQUAL reduce using rule 95 (neupoint_arithmetic_exp_quad -> .)
    GREATERTHAN     reduce using rule 95 (neupoint_arithmetic_exp_quad -> .)
    LESSTHAN        reduce using rule 95 (neupoint_arithmetic_exp_quad -> .)
    DIFFERENT       reduce using rule 95 (neupoint_arithmetic_exp_quad -> .)
    OR              reduce using rule 95 (neupoint_arithmetic_exp_quad -> .)
    AND             reduce using rule 95 (neupoint_arithmetic_exp_quad -> .)
    SEMICOLON       reduce using rule 95 (neupoint_arithmetic_exp_quad -> .)
    COMMA           reduce using rule 95 (neupoint_arithmetic_exp_quad -> .)
    RIGHTPARENTHESIS reduce using rule 95 (neupoint_arithmetic_exp_quad -> .)
    RIGHTSQRBRACKET reduce using rule 95 (neupoint_arithmetic_exp_quad -> .)
    TO              reduce using rule 95 (neupoint_arithmetic_exp_quad -> .)
    DO              reduce using rule 95 (neupoint_arithmetic_exp_quad -> .)

    neupoint_arithmetic_exp_quad   shift and go to state 139

state 101

    (84) term -> factor . neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (85) term -> factor . neupoint_arithmetic_term_quad
    (96) neupoint_arithmetic_term_quad -> .

    MULTIPLY        reduce using rule 96 (neupoint_arithmetic_term_quad -> .)
    DIVIDE          reduce using rule 96 (neupoint_arithmetic_term_quad -> .)
    MOD             reduce using rule 96 (neupoint_arithmetic_term_quad -> .)
    PLUS            reduce using rule 96 (neupoint_arithmetic_term_quad -> .)
    MINUS           reduce using rule 96 (neupoint_arithmetic_term_quad -> .)
    COMPARISON      reduce using rule 96 (neupoint_arithmetic_term_quad -> .)
    GREATERHANOREQUAL reduce using rule 96 (neupoint_arithmetic_term_quad -> .)
    LESSTHANOREQUAL reduce using rule 96 (neupoint_arithmetic_term_quad -> .)
    GREATERTHAN     reduce using rule 96 (neupoint_arithmetic_term_quad -> .)
    LESSTHAN        reduce using rule 96 (neupoint_arithmetic_term_quad -> .)
    DIFFERENT       reduce using rule 96 (neupoint_arithmetic_term_quad -> .)
    OR              reduce using rule 96 (neupoint_arithmetic_term_quad -> .)
    AND             reduce using rule 96 (neupoint_arithmetic_term_quad -> .)
    SEMICOLON       reduce using rule 96 (neupoint_arithmetic_term_quad -> .)
    COMMA           reduce using rule 96 (neupoint_arithmetic_term_quad -> .)
    RIGHTPARENTHESIS reduce using rule 96 (neupoint_arithmetic_term_quad -> .)
    RIGHTSQRBRACKET reduce using rule 96 (neupoint_arithmetic_term_quad -> .)
    TO              reduce using rule 96 (neupoint_arithmetic_term_quad -> .)
    DO              reduce using rule 96 (neupoint_arithmetic_term_quad -> .)

    neupoint_arithmetic_term_quad  shift and go to state 140

state 102

    (86) factor -> LEFTPARENTHESIS . expresion RIGHTPARENTHESIS
    (80) expresion -> . exp comparators neupoint_add_operator exp
    (81) expresion -> . exp
    (82) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (83) exp -> . term neupoint_arithmetic_exp_quad
    (84) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (85) term -> . factor neupoint_arithmetic_term_quad
    (86) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (87) factor -> . CTEINT neupoint_add_cte_operand
    (88) factor -> . CTEFLOAT neupoint_add_cte_operand
    (89) factor -> . CTECHAR neupoint_add_cte_operand
    (90) factor -> . function_call
    (91) factor -> . identifier neupoint_add_operand
    (77) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 102
    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 62

    expresion                      shift and go to state 141
    exp                            shift and go to state 99
    term                           shift and go to state 100
    factor                         shift and go to state 101
    function_call                  shift and go to state 106
    identifier                     shift and go to state 97

state 103

    (87) factor -> CTEINT . neupoint_add_cte_operand
    (94) neupoint_add_cte_operand -> .

    MULTIPLY        reduce using rule 94 (neupoint_add_cte_operand -> .)
    DIVIDE          reduce using rule 94 (neupoint_add_cte_operand -> .)
    MOD             reduce using rule 94 (neupoint_add_cte_operand -> .)
    PLUS            reduce using rule 94 (neupoint_add_cte_operand -> .)
    MINUS           reduce using rule 94 (neupoint_add_cte_operand -> .)
    COMPARISON      reduce using rule 94 (neupoint_add_cte_operand -> .)
    GREATERHANOREQUAL reduce using rule 94 (neupoint_add_cte_operand -> .)
    LESSTHANOREQUAL reduce using rule 94 (neupoint_add_cte_operand -> .)
    GREATERTHAN     reduce using rule 94 (neupoint_add_cte_operand -> .)
    LESSTHAN        reduce using rule 94 (neupoint_add_cte_operand -> .)
    DIFFERENT       reduce using rule 94 (neupoint_add_cte_operand -> .)
    OR              reduce using rule 94 (neupoint_add_cte_operand -> .)
    AND             reduce using rule 94 (neupoint_add_cte_operand -> .)
    SEMICOLON       reduce using rule 94 (neupoint_add_cte_operand -> .)
    COMMA           reduce using rule 94 (neupoint_add_cte_operand -> .)
    RIGHTPARENTHESIS reduce using rule 94 (neupoint_add_cte_operand -> .)
    RIGHTSQRBRACKET reduce using rule 94 (neupoint_add_cte_operand -> .)
    TO              reduce using rule 94 (neupoint_add_cte_operand -> .)
    DO              reduce using rule 94 (neupoint_add_cte_operand -> .)

    neupoint_add_cte_operand       shift and go to state 142

state 104

    (88) factor -> CTEFLOAT . neupoint_add_cte_operand
    (94) neupoint_add_cte_operand -> .

    MULTIPLY        reduce using rule 94 (neupoint_add_cte_operand -> .)
    DIVIDE          reduce using rule 94 (neupoint_add_cte_operand -> .)
    MOD             reduce using rule 94 (neupoint_add_cte_operand -> .)
    PLUS            reduce using rule 94 (neupoint_add_cte_operand -> .)
    MINUS           reduce using rule 94 (neupoint_add_cte_operand -> .)
    COMPARISON      reduce using rule 94 (neupoint_add_cte_operand -> .)
    GREATERHANOREQUAL reduce using rule 94 (neupoint_add_cte_operand -> .)
    LESSTHANOREQUAL reduce using rule 94 (neupoint_add_cte_operand -> .)
    GREATERTHAN     reduce using rule 94 (neupoint_add_cte_operand -> .)
    LESSTHAN        reduce using rule 94 (neupoint_add_cte_operand -> .)
    DIFFERENT       reduce using rule 94 (neupoint_add_cte_operand -> .)
    OR              reduce using rule 94 (neupoint_add_cte_operand -> .)
    AND             reduce using rule 94 (neupoint_add_cte_operand -> .)
    SEMICOLON       reduce using rule 94 (neupoint_add_cte_operand -> .)
    COMMA           reduce using rule 94 (neupoint_add_cte_operand -> .)
    RIGHTPARENTHESIS reduce using rule 94 (neupoint_add_cte_operand -> .)
    RIGHTSQRBRACKET reduce using rule 94 (neupoint_add_cte_operand -> .)
    TO              reduce using rule 94 (neupoint_add_cte_operand -> .)
    DO              reduce using rule 94 (neupoint_add_cte_operand -> .)

    neupoint_add_cte_operand       shift and go to state 143

state 105

    (89) factor -> CTECHAR . neupoint_add_cte_operand
    (94) neupoint_add_cte_operand -> .

    MULTIPLY        reduce using rule 94 (neupoint_add_cte_operand -> .)
    DIVIDE          reduce using rule 94 (neupoint_add_cte_operand -> .)
    MOD             reduce using rule 94 (neupoint_add_cte_operand -> .)
    PLUS            reduce using rule 94 (neupoint_add_cte_operand -> .)
    MINUS           reduce using rule 94 (neupoint_add_cte_operand -> .)
    COMPARISON      reduce using rule 94 (neupoint_add_cte_operand -> .)
    GREATERHANOREQUAL reduce using rule 94 (neupoint_add_cte_operand -> .)
    LESSTHANOREQUAL reduce using rule 94 (neupoint_add_cte_operand -> .)
    GREATERTHAN     reduce using rule 94 (neupoint_add_cte_operand -> .)
    LESSTHAN        reduce using rule 94 (neupoint_add_cte_operand -> .)
    DIFFERENT       reduce using rule 94 (neupoint_add_cte_operand -> .)
    OR              reduce using rule 94 (neupoint_add_cte_operand -> .)
    AND             reduce using rule 94 (neupoint_add_cte_operand -> .)
    SEMICOLON       reduce using rule 94 (neupoint_add_cte_operand -> .)
    COMMA           reduce using rule 94 (neupoint_add_cte_operand -> .)
    RIGHTPARENTHESIS reduce using rule 94 (neupoint_add_cte_operand -> .)
    RIGHTSQRBRACKET reduce using rule 94 (neupoint_add_cte_operand -> .)
    TO              reduce using rule 94 (neupoint_add_cte_operand -> .)
    DO              reduce using rule 94 (neupoint_add_cte_operand -> .)

    neupoint_add_cte_operand       shift and go to state 144

state 106

    (90) factor -> function_call .

    MULTIPLY        reduce using rule 90 (factor -> function_call .)
    DIVIDE          reduce using rule 90 (factor -> function_call .)
    MOD             reduce using rule 90 (factor -> function_call .)
    PLUS            reduce using rule 90 (factor -> function_call .)
    MINUS           reduce using rule 90 (factor -> function_call .)
    COMPARISON      reduce using rule 90 (factor -> function_call .)
    GREATERHANOREQUAL reduce using rule 90 (factor -> function_call .)
    LESSTHANOREQUAL reduce using rule 90 (factor -> function_call .)
    GREATERTHAN     reduce using rule 90 (factor -> function_call .)
    LESSTHAN        reduce using rule 90 (factor -> function_call .)
    DIFFERENT       reduce using rule 90 (factor -> function_call .)
    OR              reduce using rule 90 (factor -> function_call .)
    AND             reduce using rule 90 (factor -> function_call .)
    SEMICOLON       reduce using rule 90 (factor -> function_call .)
    COMMA           reduce using rule 90 (factor -> function_call .)
    RIGHTPARENTHESIS reduce using rule 90 (factor -> function_call .)
    RIGHTSQRBRACKET reduce using rule 90 (factor -> function_call .)
    TO              reduce using rule 90 (factor -> function_call .)
    DO              reduce using rule 90 (factor -> function_call .)


state 107

    (60) asignation -> identifier PLUSEQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 145


state 108

    (61) asignation -> identifier SUBSTRACTEQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 146


state 109

    (62) asignation -> identifier INCREMENT SEMICOLON .

    READ            reduce using rule 62 (asignation -> identifier INCREMENT SEMICOLON .)
    WRITE           reduce using rule 62 (asignation -> identifier INCREMENT SEMICOLON .)
    IF              reduce using rule 62 (asignation -> identifier INCREMENT SEMICOLON .)
    RETURN          reduce using rule 62 (asignation -> identifier INCREMENT SEMICOLON .)
    ID              reduce using rule 62 (asignation -> identifier INCREMENT SEMICOLON .)
    WHILE           reduce using rule 62 (asignation -> identifier INCREMENT SEMICOLON .)
    FOR             reduce using rule 62 (asignation -> identifier INCREMENT SEMICOLON .)
    RIGHTBRACKET    reduce using rule 62 (asignation -> identifier INCREMENT SEMICOLON .)


state 110

    (63) asignation -> identifier DECREMENT SEMICOLON .

    READ            reduce using rule 63 (asignation -> identifier DECREMENT SEMICOLON .)
    WRITE           reduce using rule 63 (asignation -> identifier DECREMENT SEMICOLON .)
    IF              reduce using rule 63 (asignation -> identifier DECREMENT SEMICOLON .)
    RETURN          reduce using rule 63 (asignation -> identifier DECREMENT SEMICOLON .)
    ID              reduce using rule 63 (asignation -> identifier DECREMENT SEMICOLON .)
    WHILE           reduce using rule 63 (asignation -> identifier DECREMENT SEMICOLON .)
    FOR             reduce using rule 63 (asignation -> identifier DECREMENT SEMICOLON .)
    RIGHTBRACKET    reduce using rule 63 (asignation -> identifier DECREMENT SEMICOLON .)


state 111

    (64) reading -> READ LEFTPARENTHESIS ids_list . RIGHTPARENTHESIS SEMICOLON

    RIGHTPARENTHESIS shift and go to state 147


state 112

    (16) ids_list -> identifier . COMMA ids_list
    (17) ids_list -> identifier .

    COMMA           shift and go to state 148
    RIGHTPARENTHESIS reduce using rule 17 (ids_list -> identifier .)


state 113

    (18) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> ID .

    LEFTSQRBRACKET  shift and go to state 87
    COMMA           reduce using rule 20 (identifier -> ID .)
    RIGHTPARENTHESIS reduce using rule 20 (identifier -> ID .)


state 114

    (65) writing -> WRITE LEFTPARENTHESIS writing_list . RIGHTPARENTHESIS SEMICOLON

    RIGHTPARENTHESIS shift and go to state 149


state 115

    (66) writing_list -> CTESTRING . COMMA writing_list
    (68) writing_list -> CTESTRING .

    COMMA           shift and go to state 150
    RIGHTPARENTHESIS reduce using rule 68 (writing_list -> CTESTRING .)


state 116

    (67) writing_list -> expresion . COMMA writing_list
    (69) writing_list -> expresion .

    COMMA           shift and go to state 151
    RIGHTPARENTHESIS reduce using rule 69 (writing_list -> expresion .)


state 117

    (70) decision -> IF LEFTPARENTHESIS expresion . RIGHTPARENTHESIS THEN block ELSE block
    (71) decision -> IF LEFTPARENTHESIS expresion . RIGHTPARENTHESIS THEN block

    RIGHTPARENTHESIS shift and go to state 152


state 118

    (76) function_return -> RETURN LEFTPARENTHESIS exp . RIGHTPARENTHESIS SEMICOLON

    RIGHTPARENTHESIS shift and go to state 153


state 119

    (77) function_call -> ID LEFTPARENTHESIS expresion_list . RIGHTPARENTHESIS

    RIGHTPARENTHESIS shift and go to state 154


state 120

    (78) expresion_list -> expresion . COMMA expresion_list
    (79) expresion_list -> expresion .

    COMMA           shift and go to state 155
    RIGHTPARENTHESIS reduce using rule 79 (expresion_list -> expresion .)


state 121

    (18) identifier -> ID LEFTSQRBRACKET expresion . RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> ID LEFTSQRBRACKET expresion . RIGHTSQRBRACKET

    RIGHTSQRBRACKET shift and go to state 156


state 122

    (74) conditional -> WHILE LEFTPARENTHESIS expresion . RIGHTPARENTHESIS DO

    RIGHTPARENTHESIS shift and go to state 157


state 123

    (75) non_conditional -> FOR ID EQUALS . exp TO exp DO
    (82) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (83) exp -> . term neupoint_arithmetic_exp_quad
    (84) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (85) term -> . factor neupoint_arithmetic_term_quad
    (86) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (87) factor -> . CTEINT neupoint_add_cte_operand
    (88) factor -> . CTEFLOAT neupoint_add_cte_operand
    (89) factor -> . CTECHAR neupoint_add_cte_operand
    (90) factor -> . function_call
    (91) factor -> . identifier neupoint_add_operand
    (77) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 102
    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 62

    exp                            shift and go to state 158
    term                           shift and go to state 100
    factor                         shift and go to state 101
    function_call                  shift and go to state 106
    identifier                     shift and go to state 97

state 124

    (13) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET . CTEINT RIGHTSQRBRACKET

    CTEINT          shift and go to state 159


state 125

    (26) function -> MODULE return_type ID neupoint_add_function parameters_list vars block .

    MODULE          reduce using rule 26 (function -> MODULE return_type ID neupoint_add_function parameters_list vars block .)
    MAIN            reduce using rule 26 (function -> MODULE return_type ID neupoint_add_function parameters_list vars block .)


state 126

    (28) parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS . neupoint_add_parameters
    (33) neupoint_add_parameters -> .

    VAR             reduce using rule 33 (neupoint_add_parameters -> .)
    LEFTBRACKET     reduce using rule 33 (neupoint_add_parameters -> .)

    neupoint_add_parameters        shift and go to state 160

state 127

    (30) parameter -> data_type decla_identifier . COMMA parameter
    (31) parameter -> data_type decla_identifier .

    COMMA           shift and go to state 161
    RIGHTPARENTHESIS reduce using rule 31 (parameter -> data_type decla_identifier .)


state 128

    (91) factor -> identifier neupoint_add_operand .

    MULTIPLY        reduce using rule 91 (factor -> identifier neupoint_add_operand .)
    DIVIDE          reduce using rule 91 (factor -> identifier neupoint_add_operand .)
    MOD             reduce using rule 91 (factor -> identifier neupoint_add_operand .)
    PLUS            reduce using rule 91 (factor -> identifier neupoint_add_operand .)
    MINUS           reduce using rule 91 (factor -> identifier neupoint_add_operand .)
    COMPARISON      reduce using rule 91 (factor -> identifier neupoint_add_operand .)
    GREATERHANOREQUAL reduce using rule 91 (factor -> identifier neupoint_add_operand .)
    LESSTHANOREQUAL reduce using rule 91 (factor -> identifier neupoint_add_operand .)
    GREATERTHAN     reduce using rule 91 (factor -> identifier neupoint_add_operand .)
    LESSTHAN        reduce using rule 91 (factor -> identifier neupoint_add_operand .)
    DIFFERENT       reduce using rule 91 (factor -> identifier neupoint_add_operand .)
    OR              reduce using rule 91 (factor -> identifier neupoint_add_operand .)
    AND             reduce using rule 91 (factor -> identifier neupoint_add_operand .)
    SEMICOLON       reduce using rule 91 (factor -> identifier neupoint_add_operand .)
    COMMA           reduce using rule 91 (factor -> identifier neupoint_add_operand .)
    RIGHTPARENTHESIS reduce using rule 91 (factor -> identifier neupoint_add_operand .)
    RIGHTSQRBRACKET reduce using rule 91 (factor -> identifier neupoint_add_operand .)
    TO              reduce using rule 91 (factor -> identifier neupoint_add_operand .)
    DO              reduce using rule 91 (factor -> identifier neupoint_add_operand .)


state 129

    (59) asignation -> identifier EQUALS expresion SEMICOLON .

    READ            reduce using rule 59 (asignation -> identifier EQUALS expresion SEMICOLON .)
    WRITE           reduce using rule 59 (asignation -> identifier EQUALS expresion SEMICOLON .)
    IF              reduce using rule 59 (asignation -> identifier EQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 59 (asignation -> identifier EQUALS expresion SEMICOLON .)
    ID              reduce using rule 59 (asignation -> identifier EQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 59 (asignation -> identifier EQUALS expresion SEMICOLON .)
    FOR             reduce using rule 59 (asignation -> identifier EQUALS expresion SEMICOLON .)
    RIGHTBRACKET    reduce using rule 59 (asignation -> identifier EQUALS expresion SEMICOLON .)


state 130

    (80) expresion -> exp comparators . neupoint_add_operator exp
    (92) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 92 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 92 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 92 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 92 (neupoint_add_operator -> .)
    ID              reduce using rule 92 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 162

state 131

    (35) comparators -> COMPARISON .

    LEFTPARENTHESIS reduce using rule 35 (comparators -> COMPARISON .)
    CTEINT          reduce using rule 35 (comparators -> COMPARISON .)
    CTEFLOAT        reduce using rule 35 (comparators -> COMPARISON .)
    CTECHAR         reduce using rule 35 (comparators -> COMPARISON .)
    ID              reduce using rule 35 (comparators -> COMPARISON .)


state 132

    (36) comparators -> GREATERHANOREQUAL .

    LEFTPARENTHESIS reduce using rule 36 (comparators -> GREATERHANOREQUAL .)
    CTEINT          reduce using rule 36 (comparators -> GREATERHANOREQUAL .)
    CTEFLOAT        reduce using rule 36 (comparators -> GREATERHANOREQUAL .)
    CTECHAR         reduce using rule 36 (comparators -> GREATERHANOREQUAL .)
    ID              reduce using rule 36 (comparators -> GREATERHANOREQUAL .)


state 133

    (37) comparators -> LESSTHANOREQUAL .

    LEFTPARENTHESIS reduce using rule 37 (comparators -> LESSTHANOREQUAL .)
    CTEINT          reduce using rule 37 (comparators -> LESSTHANOREQUAL .)
    CTEFLOAT        reduce using rule 37 (comparators -> LESSTHANOREQUAL .)
    CTECHAR         reduce using rule 37 (comparators -> LESSTHANOREQUAL .)
    ID              reduce using rule 37 (comparators -> LESSTHANOREQUAL .)


state 134

    (38) comparators -> GREATERTHAN .

    LEFTPARENTHESIS reduce using rule 38 (comparators -> GREATERTHAN .)
    CTEINT          reduce using rule 38 (comparators -> GREATERTHAN .)
    CTEFLOAT        reduce using rule 38 (comparators -> GREATERTHAN .)
    CTECHAR         reduce using rule 38 (comparators -> GREATERTHAN .)
    ID              reduce using rule 38 (comparators -> GREATERTHAN .)


state 135

    (39) comparators -> LESSTHAN .

    LEFTPARENTHESIS reduce using rule 39 (comparators -> LESSTHAN .)
    CTEINT          reduce using rule 39 (comparators -> LESSTHAN .)
    CTEFLOAT        reduce using rule 39 (comparators -> LESSTHAN .)
    CTECHAR         reduce using rule 39 (comparators -> LESSTHAN .)
    ID              reduce using rule 39 (comparators -> LESSTHAN .)


state 136

    (40) comparators -> DIFFERENT .

    LEFTPARENTHESIS reduce using rule 40 (comparators -> DIFFERENT .)
    CTEINT          reduce using rule 40 (comparators -> DIFFERENT .)
    CTEFLOAT        reduce using rule 40 (comparators -> DIFFERENT .)
    CTECHAR         reduce using rule 40 (comparators -> DIFFERENT .)
    ID              reduce using rule 40 (comparators -> DIFFERENT .)


state 137

    (41) comparators -> OR .

    LEFTPARENTHESIS reduce using rule 41 (comparators -> OR .)
    CTEINT          reduce using rule 41 (comparators -> OR .)
    CTEFLOAT        reduce using rule 41 (comparators -> OR .)
    CTECHAR         reduce using rule 41 (comparators -> OR .)
    ID              reduce using rule 41 (comparators -> OR .)


state 138

    (42) comparators -> AND .

    LEFTPARENTHESIS reduce using rule 42 (comparators -> AND .)
    CTEINT          reduce using rule 42 (comparators -> AND .)
    CTEFLOAT        reduce using rule 42 (comparators -> AND .)
    CTECHAR         reduce using rule 42 (comparators -> AND .)
    ID              reduce using rule 42 (comparators -> AND .)


state 139

    (82) exp -> term neupoint_arithmetic_exp_quad . exp_operator neupoint_add_operator exp
    (83) exp -> term neupoint_arithmetic_exp_quad .
    (43) exp_operator -> . PLUS
    (44) exp_operator -> . MINUS

    COMPARISON      reduce using rule 83 (exp -> term neupoint_arithmetic_exp_quad .)
    GREATERHANOREQUAL reduce using rule 83 (exp -> term neupoint_arithmetic_exp_quad .)
    LESSTHANOREQUAL reduce using rule 83 (exp -> term neupoint_arithmetic_exp_quad .)
    GREATERTHAN     reduce using rule 83 (exp -> term neupoint_arithmetic_exp_quad .)
    LESSTHAN        reduce using rule 83 (exp -> term neupoint_arithmetic_exp_quad .)
    DIFFERENT       reduce using rule 83 (exp -> term neupoint_arithmetic_exp_quad .)
    OR              reduce using rule 83 (exp -> term neupoint_arithmetic_exp_quad .)
    AND             reduce using rule 83 (exp -> term neupoint_arithmetic_exp_quad .)
    SEMICOLON       reduce using rule 83 (exp -> term neupoint_arithmetic_exp_quad .)
    COMMA           reduce using rule 83 (exp -> term neupoint_arithmetic_exp_quad .)
    RIGHTPARENTHESIS reduce using rule 83 (exp -> term neupoint_arithmetic_exp_quad .)
    RIGHTSQRBRACKET reduce using rule 83 (exp -> term neupoint_arithmetic_exp_quad .)
    TO              reduce using rule 83 (exp -> term neupoint_arithmetic_exp_quad .)
    DO              reduce using rule 83 (exp -> term neupoint_arithmetic_exp_quad .)
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165

    exp_operator                   shift and go to state 163

state 140

    (84) term -> factor neupoint_arithmetic_term_quad . term_operator neupoint_add_operator term
    (85) term -> factor neupoint_arithmetic_term_quad .
    (45) term_operator -> . MULTIPLY
    (46) term_operator -> . DIVIDE
    (47) term_operator -> . MOD

    PLUS            reduce using rule 85 (term -> factor neupoint_arithmetic_term_quad .)
    MINUS           reduce using rule 85 (term -> factor neupoint_arithmetic_term_quad .)
    COMPARISON      reduce using rule 85 (term -> factor neupoint_arithmetic_term_quad .)
    GREATERHANOREQUAL reduce using rule 85 (term -> factor neupoint_arithmetic_term_quad .)
    LESSTHANOREQUAL reduce using rule 85 (term -> factor neupoint_arithmetic_term_quad .)
    GREATERTHAN     reduce using rule 85 (term -> factor neupoint_arithmetic_term_quad .)
    LESSTHAN        reduce using rule 85 (term -> factor neupoint_arithmetic_term_quad .)
    DIFFERENT       reduce using rule 85 (term -> factor neupoint_arithmetic_term_quad .)
    OR              reduce using rule 85 (term -> factor neupoint_arithmetic_term_quad .)
    AND             reduce using rule 85 (term -> factor neupoint_arithmetic_term_quad .)
    SEMICOLON       reduce using rule 85 (term -> factor neupoint_arithmetic_term_quad .)
    COMMA           reduce using rule 85 (term -> factor neupoint_arithmetic_term_quad .)
    RIGHTPARENTHESIS reduce using rule 85 (term -> factor neupoint_arithmetic_term_quad .)
    RIGHTSQRBRACKET reduce using rule 85 (term -> factor neupoint_arithmetic_term_quad .)
    TO              reduce using rule 85 (term -> factor neupoint_arithmetic_term_quad .)
    DO              reduce using rule 85 (term -> factor neupoint_arithmetic_term_quad .)
    MULTIPLY        shift and go to state 167
    DIVIDE          shift and go to state 168
    MOD             shift and go to state 169

    term_operator                  shift and go to state 166

state 141

    (86) factor -> LEFTPARENTHESIS expresion . RIGHTPARENTHESIS

    RIGHTPARENTHESIS shift and go to state 170


state 142

    (87) factor -> CTEINT neupoint_add_cte_operand .

    MULTIPLY        reduce using rule 87 (factor -> CTEINT neupoint_add_cte_operand .)
    DIVIDE          reduce using rule 87 (factor -> CTEINT neupoint_add_cte_operand .)
    MOD             reduce using rule 87 (factor -> CTEINT neupoint_add_cte_operand .)
    PLUS            reduce using rule 87 (factor -> CTEINT neupoint_add_cte_operand .)
    MINUS           reduce using rule 87 (factor -> CTEINT neupoint_add_cte_operand .)
    COMPARISON      reduce using rule 87 (factor -> CTEINT neupoint_add_cte_operand .)
    GREATERHANOREQUAL reduce using rule 87 (factor -> CTEINT neupoint_add_cte_operand .)
    LESSTHANOREQUAL reduce using rule 87 (factor -> CTEINT neupoint_add_cte_operand .)
    GREATERTHAN     reduce using rule 87 (factor -> CTEINT neupoint_add_cte_operand .)
    LESSTHAN        reduce using rule 87 (factor -> CTEINT neupoint_add_cte_operand .)
    DIFFERENT       reduce using rule 87 (factor -> CTEINT neupoint_add_cte_operand .)
    OR              reduce using rule 87 (factor -> CTEINT neupoint_add_cte_operand .)
    AND             reduce using rule 87 (factor -> CTEINT neupoint_add_cte_operand .)
    SEMICOLON       reduce using rule 87 (factor -> CTEINT neupoint_add_cte_operand .)
    COMMA           reduce using rule 87 (factor -> CTEINT neupoint_add_cte_operand .)
    RIGHTPARENTHESIS reduce using rule 87 (factor -> CTEINT neupoint_add_cte_operand .)
    RIGHTSQRBRACKET reduce using rule 87 (factor -> CTEINT neupoint_add_cte_operand .)
    TO              reduce using rule 87 (factor -> CTEINT neupoint_add_cte_operand .)
    DO              reduce using rule 87 (factor -> CTEINT neupoint_add_cte_operand .)


state 143

    (88) factor -> CTEFLOAT neupoint_add_cte_operand .

    MULTIPLY        reduce using rule 88 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    DIVIDE          reduce using rule 88 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    MOD             reduce using rule 88 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    PLUS            reduce using rule 88 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    MINUS           reduce using rule 88 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    COMPARISON      reduce using rule 88 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    GREATERHANOREQUAL reduce using rule 88 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    LESSTHANOREQUAL reduce using rule 88 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    GREATERTHAN     reduce using rule 88 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    LESSTHAN        reduce using rule 88 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    DIFFERENT       reduce using rule 88 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    OR              reduce using rule 88 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    AND             reduce using rule 88 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    SEMICOLON       reduce using rule 88 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    COMMA           reduce using rule 88 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    RIGHTPARENTHESIS reduce using rule 88 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    RIGHTSQRBRACKET reduce using rule 88 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    TO              reduce using rule 88 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    DO              reduce using rule 88 (factor -> CTEFLOAT neupoint_add_cte_operand .)


state 144

    (89) factor -> CTECHAR neupoint_add_cte_operand .

    MULTIPLY        reduce using rule 89 (factor -> CTECHAR neupoint_add_cte_operand .)
    DIVIDE          reduce using rule 89 (factor -> CTECHAR neupoint_add_cte_operand .)
    MOD             reduce using rule 89 (factor -> CTECHAR neupoint_add_cte_operand .)
    PLUS            reduce using rule 89 (factor -> CTECHAR neupoint_add_cte_operand .)
    MINUS           reduce using rule 89 (factor -> CTECHAR neupoint_add_cte_operand .)
    COMPARISON      reduce using rule 89 (factor -> CTECHAR neupoint_add_cte_operand .)
    GREATERHANOREQUAL reduce using rule 89 (factor -> CTECHAR neupoint_add_cte_operand .)
    LESSTHANOREQUAL reduce using rule 89 (factor -> CTECHAR neupoint_add_cte_operand .)
    GREATERTHAN     reduce using rule 89 (factor -> CTECHAR neupoint_add_cte_operand .)
    LESSTHAN        reduce using rule 89 (factor -> CTECHAR neupoint_add_cte_operand .)
    DIFFERENT       reduce using rule 89 (factor -> CTECHAR neupoint_add_cte_operand .)
    OR              reduce using rule 89 (factor -> CTECHAR neupoint_add_cte_operand .)
    AND             reduce using rule 89 (factor -> CTECHAR neupoint_add_cte_operand .)
    SEMICOLON       reduce using rule 89 (factor -> CTECHAR neupoint_add_cte_operand .)
    COMMA           reduce using rule 89 (factor -> CTECHAR neupoint_add_cte_operand .)
    RIGHTPARENTHESIS reduce using rule 89 (factor -> CTECHAR neupoint_add_cte_operand .)
    RIGHTSQRBRACKET reduce using rule 89 (factor -> CTECHAR neupoint_add_cte_operand .)
    TO              reduce using rule 89 (factor -> CTECHAR neupoint_add_cte_operand .)
    DO              reduce using rule 89 (factor -> CTECHAR neupoint_add_cte_operand .)


state 145

    (60) asignation -> identifier PLUSEQUALS expresion SEMICOLON .

    READ            reduce using rule 60 (asignation -> identifier PLUSEQUALS expresion SEMICOLON .)
    WRITE           reduce using rule 60 (asignation -> identifier PLUSEQUALS expresion SEMICOLON .)
    IF              reduce using rule 60 (asignation -> identifier PLUSEQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 60 (asignation -> identifier PLUSEQUALS expresion SEMICOLON .)
    ID              reduce using rule 60 (asignation -> identifier PLUSEQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 60 (asignation -> identifier PLUSEQUALS expresion SEMICOLON .)
    FOR             reduce using rule 60 (asignation -> identifier PLUSEQUALS expresion SEMICOLON .)
    RIGHTBRACKET    reduce using rule 60 (asignation -> identifier PLUSEQUALS expresion SEMICOLON .)


state 146

    (61) asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .

    READ            reduce using rule 61 (asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .)
    WRITE           reduce using rule 61 (asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .)
    IF              reduce using rule 61 (asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 61 (asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .)
    ID              reduce using rule 61 (asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 61 (asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .)
    FOR             reduce using rule 61 (asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .)
    RIGHTBRACKET    reduce using rule 61 (asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .)


state 147

    (64) reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 171


state 148

    (16) ids_list -> identifier COMMA . ids_list
    (16) ids_list -> . identifier COMMA ids_list
    (17) ids_list -> . identifier
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    ID              shift and go to state 113

    identifier                     shift and go to state 112
    ids_list                       shift and go to state 172

state 149

    (65) writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 173


state 150

    (66) writing_list -> CTESTRING COMMA . writing_list
    (66) writing_list -> . CTESTRING COMMA writing_list
    (67) writing_list -> . expresion COMMA writing_list
    (68) writing_list -> . CTESTRING
    (69) writing_list -> . expresion
    (80) expresion -> . exp comparators neupoint_add_operator exp
    (81) expresion -> . exp
    (82) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (83) exp -> . term neupoint_arithmetic_exp_quad
    (84) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (85) term -> . factor neupoint_arithmetic_term_quad
    (86) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (87) factor -> . CTEINT neupoint_add_cte_operand
    (88) factor -> . CTEFLOAT neupoint_add_cte_operand
    (89) factor -> . CTECHAR neupoint_add_cte_operand
    (90) factor -> . function_call
    (91) factor -> . identifier neupoint_add_operand
    (77) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    CTESTRING       shift and go to state 115
    LEFTPARENTHESIS shift and go to state 102
    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 62

    writing_list                   shift and go to state 174
    expresion                      shift and go to state 116
    exp                            shift and go to state 99
    term                           shift and go to state 100
    factor                         shift and go to state 101
    function_call                  shift and go to state 106
    identifier                     shift and go to state 97

state 151

    (67) writing_list -> expresion COMMA . writing_list
    (66) writing_list -> . CTESTRING COMMA writing_list
    (67) writing_list -> . expresion COMMA writing_list
    (68) writing_list -> . CTESTRING
    (69) writing_list -> . expresion
    (80) expresion -> . exp comparators neupoint_add_operator exp
    (81) expresion -> . exp
    (82) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (83) exp -> . term neupoint_arithmetic_exp_quad
    (84) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (85) term -> . factor neupoint_arithmetic_term_quad
    (86) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (87) factor -> . CTEINT neupoint_add_cte_operand
    (88) factor -> . CTEFLOAT neupoint_add_cte_operand
    (89) factor -> . CTECHAR neupoint_add_cte_operand
    (90) factor -> . function_call
    (91) factor -> . identifier neupoint_add_operand
    (77) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    CTESTRING       shift and go to state 115
    LEFTPARENTHESIS shift and go to state 102
    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 62

    expresion                      shift and go to state 116
    writing_list                   shift and go to state 175
    exp                            shift and go to state 99
    term                           shift and go to state 100
    factor                         shift and go to state 101
    function_call                  shift and go to state 106
    identifier                     shift and go to state 97

state 152

    (70) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS . THEN block ELSE block
    (71) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS . THEN block

    THEN            shift and go to state 176


state 153

    (76) function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 177


state 154

    (77) function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .

    SEMICOLON       reduce using rule 77 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    MULTIPLY        reduce using rule 77 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    DIVIDE          reduce using rule 77 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    MOD             reduce using rule 77 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    PLUS            reduce using rule 77 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    MINUS           reduce using rule 77 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    COMPARISON      reduce using rule 77 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    GREATERHANOREQUAL reduce using rule 77 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    LESSTHANOREQUAL reduce using rule 77 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    GREATERTHAN     reduce using rule 77 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    LESSTHAN        reduce using rule 77 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    DIFFERENT       reduce using rule 77 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    OR              reduce using rule 77 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    AND             reduce using rule 77 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    COMMA           reduce using rule 77 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    RIGHTPARENTHESIS reduce using rule 77 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    RIGHTSQRBRACKET reduce using rule 77 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    TO              reduce using rule 77 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    DO              reduce using rule 77 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)


state 155

    (78) expresion_list -> expresion COMMA . expresion_list
    (78) expresion_list -> . expresion COMMA expresion_list
    (79) expresion_list -> . expresion
    (80) expresion -> . exp comparators neupoint_add_operator exp
    (81) expresion -> . exp
    (82) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (83) exp -> . term neupoint_arithmetic_exp_quad
    (84) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (85) term -> . factor neupoint_arithmetic_term_quad
    (86) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (87) factor -> . CTEINT neupoint_add_cte_operand
    (88) factor -> . CTEFLOAT neupoint_add_cte_operand
    (89) factor -> . CTECHAR neupoint_add_cte_operand
    (90) factor -> . function_call
    (91) factor -> . identifier neupoint_add_operand
    (77) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 102
    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 62

    expresion                      shift and go to state 120
    expresion_list                 shift and go to state 178
    exp                            shift and go to state 99
    term                           shift and go to state 100
    factor                         shift and go to state 101
    function_call                  shift and go to state 106
    identifier                     shift and go to state 97

state 156

    (18) identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET . LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .

    LEFTSQRBRACKET  shift and go to state 179
    EQUALS          reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    PLUSEQUALS      reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    SUBSTRACTEQUALS reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    INCREMENT       reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DECREMENT       reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MULTIPLY        reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DIVIDE          reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MOD             reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    PLUS            reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MINUS           reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    COMPARISON      reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    GREATERHANOREQUAL reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    LESSTHANOREQUAL reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    GREATERTHAN     reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    LESSTHAN        reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DIFFERENT       reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    OR              reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    AND             reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    SEMICOLON       reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    COMMA           reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    RIGHTPARENTHESIS reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    RIGHTSQRBRACKET reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    TO              reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DO              reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)


state 157

    (74) conditional -> WHILE LEFTPARENTHESIS expresion RIGHTPARENTHESIS . DO

    DO              shift and go to state 180


state 158

    (75) non_conditional -> FOR ID EQUALS exp . TO exp DO

    TO              shift and go to state 181


state 159

    (13) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT . RIGHTSQRBRACKET

    RIGHTSQRBRACKET shift and go to state 182


state 160

    (28) parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS neupoint_add_parameters .

    VAR             reduce using rule 28 (parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS neupoint_add_parameters .)
    LEFTBRACKET     reduce using rule 28 (parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS neupoint_add_parameters .)


state 161

    (30) parameter -> data_type decla_identifier COMMA . parameter
    (30) parameter -> . data_type decla_identifier COMMA parameter
    (31) parameter -> . data_type decla_identifier
    (5) data_type -> . INT
    (6) data_type -> . FLOAT
    (7) data_type -> . CHAR

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19

    data_type                      shift and go to state 95
    parameter                      shift and go to state 183

state 162

    (80) expresion -> exp comparators neupoint_add_operator . exp
    (82) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (83) exp -> . term neupoint_arithmetic_exp_quad
    (84) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (85) term -> . factor neupoint_arithmetic_term_quad
    (86) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (87) factor -> . CTEINT neupoint_add_cte_operand
    (88) factor -> . CTEFLOAT neupoint_add_cte_operand
    (89) factor -> . CTECHAR neupoint_add_cte_operand
    (90) factor -> . function_call
    (91) factor -> . identifier neupoint_add_operand
    (77) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 102
    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 62

    exp                            shift and go to state 184
    term                           shift and go to state 100
    factor                         shift and go to state 101
    function_call                  shift and go to state 106
    identifier                     shift and go to state 97

state 163

    (82) exp -> term neupoint_arithmetic_exp_quad exp_operator . neupoint_add_operator exp
    (92) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 92 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 92 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 92 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 92 (neupoint_add_operator -> .)
    ID              reduce using rule 92 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 185

state 164

    (43) exp_operator -> PLUS .

    LEFTPARENTHESIS reduce using rule 43 (exp_operator -> PLUS .)
    CTEINT          reduce using rule 43 (exp_operator -> PLUS .)
    CTEFLOAT        reduce using rule 43 (exp_operator -> PLUS .)
    CTECHAR         reduce using rule 43 (exp_operator -> PLUS .)
    ID              reduce using rule 43 (exp_operator -> PLUS .)


state 165

    (44) exp_operator -> MINUS .

    LEFTPARENTHESIS reduce using rule 44 (exp_operator -> MINUS .)
    CTEINT          reduce using rule 44 (exp_operator -> MINUS .)
    CTEFLOAT        reduce using rule 44 (exp_operator -> MINUS .)
    CTECHAR         reduce using rule 44 (exp_operator -> MINUS .)
    ID              reduce using rule 44 (exp_operator -> MINUS .)


state 166

    (84) term -> factor neupoint_arithmetic_term_quad term_operator . neupoint_add_operator term
    (92) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 92 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 92 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 92 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 92 (neupoint_add_operator -> .)
    ID              reduce using rule 92 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 186

state 167

    (45) term_operator -> MULTIPLY .

    LEFTPARENTHESIS reduce using rule 45 (term_operator -> MULTIPLY .)
    CTEINT          reduce using rule 45 (term_operator -> MULTIPLY .)
    CTEFLOAT        reduce using rule 45 (term_operator -> MULTIPLY .)
    CTECHAR         reduce using rule 45 (term_operator -> MULTIPLY .)
    ID              reduce using rule 45 (term_operator -> MULTIPLY .)


state 168

    (46) term_operator -> DIVIDE .

    LEFTPARENTHESIS reduce using rule 46 (term_operator -> DIVIDE .)
    CTEINT          reduce using rule 46 (term_operator -> DIVIDE .)
    CTEFLOAT        reduce using rule 46 (term_operator -> DIVIDE .)
    CTECHAR         reduce using rule 46 (term_operator -> DIVIDE .)
    ID              reduce using rule 46 (term_operator -> DIVIDE .)


state 169

    (47) term_operator -> MOD .

    LEFTPARENTHESIS reduce using rule 47 (term_operator -> MOD .)
    CTEINT          reduce using rule 47 (term_operator -> MOD .)
    CTEFLOAT        reduce using rule 47 (term_operator -> MOD .)
    CTECHAR         reduce using rule 47 (term_operator -> MOD .)
    ID              reduce using rule 47 (term_operator -> MOD .)


state 170

    (86) factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .

    MULTIPLY        reduce using rule 86 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    DIVIDE          reduce using rule 86 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    MOD             reduce using rule 86 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    PLUS            reduce using rule 86 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    MINUS           reduce using rule 86 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    COMPARISON      reduce using rule 86 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    GREATERHANOREQUAL reduce using rule 86 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    LESSTHANOREQUAL reduce using rule 86 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    GREATERTHAN     reduce using rule 86 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    LESSTHAN        reduce using rule 86 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    DIFFERENT       reduce using rule 86 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    OR              reduce using rule 86 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    AND             reduce using rule 86 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    SEMICOLON       reduce using rule 86 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    COMMA           reduce using rule 86 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    RIGHTPARENTHESIS reduce using rule 86 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    RIGHTSQRBRACKET reduce using rule 86 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    TO              reduce using rule 86 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    DO              reduce using rule 86 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)


state 171

    (64) reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .

    READ            reduce using rule 64 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    WRITE           reduce using rule 64 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    IF              reduce using rule 64 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 64 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    ID              reduce using rule 64 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 64 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    FOR             reduce using rule 64 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 64 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)


state 172

    (16) ids_list -> identifier COMMA ids_list .

    RIGHTPARENTHESIS reduce using rule 16 (ids_list -> identifier COMMA ids_list .)


state 173

    (65) writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .

    READ            reduce using rule 65 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    WRITE           reduce using rule 65 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    IF              reduce using rule 65 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 65 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    ID              reduce using rule 65 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 65 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    FOR             reduce using rule 65 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 65 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)


state 174

    (66) writing_list -> CTESTRING COMMA writing_list .

    RIGHTPARENTHESIS reduce using rule 66 (writing_list -> CTESTRING COMMA writing_list .)


state 175

    (67) writing_list -> expresion COMMA writing_list .

    RIGHTPARENTHESIS reduce using rule 67 (writing_list -> expresion COMMA writing_list .)


state 176

    (70) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN . block ELSE block
    (71) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN . block
    (48) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (49) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 187

state 177

    (76) function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .

    READ            reduce using rule 76 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    WRITE           reduce using rule 76 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    IF              reduce using rule 76 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 76 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    ID              reduce using rule 76 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 76 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    FOR             reduce using rule 76 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 76 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)


state 178

    (78) expresion_list -> expresion COMMA expresion_list .

    RIGHTPARENTHESIS reduce using rule 78 (expresion_list -> expresion COMMA expresion_list .)


state 179

    (18) identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET . expresion RIGHTSQRBRACKET
    (80) expresion -> . exp comparators neupoint_add_operator exp
    (81) expresion -> . exp
    (82) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (83) exp -> . term neupoint_arithmetic_exp_quad
    (84) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (85) term -> . factor neupoint_arithmetic_term_quad
    (86) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (87) factor -> . CTEINT neupoint_add_cte_operand
    (88) factor -> . CTEFLOAT neupoint_add_cte_operand
    (89) factor -> . CTECHAR neupoint_add_cte_operand
    (90) factor -> . function_call
    (91) factor -> . identifier neupoint_add_operand
    (77) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 102
    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 62

    expresion                      shift and go to state 188
    exp                            shift and go to state 99
    term                           shift and go to state 100
    factor                         shift and go to state 101
    function_call                  shift and go to state 106
    identifier                     shift and go to state 97

state 180

    (74) conditional -> WHILE LEFTPARENTHESIS expresion RIGHTPARENTHESIS DO .

    LEFTBRACKET     reduce using rule 74 (conditional -> WHILE LEFTPARENTHESIS expresion RIGHTPARENTHESIS DO .)


state 181

    (75) non_conditional -> FOR ID EQUALS exp TO . exp DO
    (82) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (83) exp -> . term neupoint_arithmetic_exp_quad
    (84) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (85) term -> . factor neupoint_arithmetic_term_quad
    (86) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (87) factor -> . CTEINT neupoint_add_cte_operand
    (88) factor -> . CTEFLOAT neupoint_add_cte_operand
    (89) factor -> . CTECHAR neupoint_add_cte_operand
    (90) factor -> . function_call
    (91) factor -> . identifier neupoint_add_operand
    (77) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 102
    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 62

    exp                            shift and go to state 189
    term                           shift and go to state 100
    factor                         shift and go to state 101
    function_call                  shift and go to state 106
    identifier                     shift and go to state 97

state 182

    (13) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .

    COMMA           reduce using rule 13 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)
    SEMICOLON       reduce using rule 13 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)
    RIGHTPARENTHESIS reduce using rule 13 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)


state 183

    (30) parameter -> data_type decla_identifier COMMA parameter .

    RIGHTPARENTHESIS reduce using rule 30 (parameter -> data_type decla_identifier COMMA parameter .)


state 184

    (80) expresion -> exp comparators neupoint_add_operator exp .

    SEMICOLON       reduce using rule 80 (expresion -> exp comparators neupoint_add_operator exp .)
    COMMA           reduce using rule 80 (expresion -> exp comparators neupoint_add_operator exp .)
    RIGHTPARENTHESIS reduce using rule 80 (expresion -> exp comparators neupoint_add_operator exp .)
    RIGHTSQRBRACKET reduce using rule 80 (expresion -> exp comparators neupoint_add_operator exp .)


state 185

    (82) exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator . exp
    (82) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (83) exp -> . term neupoint_arithmetic_exp_quad
    (84) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (85) term -> . factor neupoint_arithmetic_term_quad
    (86) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (87) factor -> . CTEINT neupoint_add_cte_operand
    (88) factor -> . CTEFLOAT neupoint_add_cte_operand
    (89) factor -> . CTECHAR neupoint_add_cte_operand
    (90) factor -> . function_call
    (91) factor -> . identifier neupoint_add_operand
    (77) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 102
    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 62

    term                           shift and go to state 100
    exp                            shift and go to state 190
    factor                         shift and go to state 101
    function_call                  shift and go to state 106
    identifier                     shift and go to state 97

state 186

    (84) term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator . term
    (84) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (85) term -> . factor neupoint_arithmetic_term_quad
    (86) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (87) factor -> . CTEINT neupoint_add_cte_operand
    (88) factor -> . CTEFLOAT neupoint_add_cte_operand
    (89) factor -> . CTECHAR neupoint_add_cte_operand
    (90) factor -> . function_call
    (91) factor -> . identifier neupoint_add_operand
    (77) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 102
    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 62

    factor                         shift and go to state 101
    term                           shift and go to state 191
    function_call                  shift and go to state 106
    identifier                     shift and go to state 97

state 187

    (70) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block . ELSE block
    (71) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .

    ELSE            shift and go to state 192
    READ            reduce using rule 71 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .)
    WRITE           reduce using rule 71 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .)
    IF              reduce using rule 71 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .)
    RETURN          reduce using rule 71 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .)
    ID              reduce using rule 71 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .)
    WHILE           reduce using rule 71 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .)
    FOR             reduce using rule 71 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .)
    RIGHTBRACKET    reduce using rule 71 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .)


state 188

    (18) identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion . RIGHTSQRBRACKET

    RIGHTSQRBRACKET shift and go to state 193


state 189

    (75) non_conditional -> FOR ID EQUALS exp TO exp . DO

    DO              shift and go to state 194


state 190

    (82) exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .

    COMPARISON      reduce using rule 82 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    GREATERHANOREQUAL reduce using rule 82 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    LESSTHANOREQUAL reduce using rule 82 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    GREATERTHAN     reduce using rule 82 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    LESSTHAN        reduce using rule 82 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    DIFFERENT       reduce using rule 82 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    OR              reduce using rule 82 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    AND             reduce using rule 82 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    SEMICOLON       reduce using rule 82 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    COMMA           reduce using rule 82 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    RIGHTPARENTHESIS reduce using rule 82 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    RIGHTSQRBRACKET reduce using rule 82 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    TO              reduce using rule 82 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    DO              reduce using rule 82 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)


state 191

    (84) term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .

    PLUS            reduce using rule 84 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    MINUS           reduce using rule 84 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    COMPARISON      reduce using rule 84 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    GREATERHANOREQUAL reduce using rule 84 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    LESSTHANOREQUAL reduce using rule 84 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    GREATERTHAN     reduce using rule 84 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    LESSTHAN        reduce using rule 84 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    DIFFERENT       reduce using rule 84 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    OR              reduce using rule 84 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    AND             reduce using rule 84 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    SEMICOLON       reduce using rule 84 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    COMMA           reduce using rule 84 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    RIGHTPARENTHESIS reduce using rule 84 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    RIGHTSQRBRACKET reduce using rule 84 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    TO              reduce using rule 84 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    DO              reduce using rule 84 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)


state 192

    (70) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE . block
    (48) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (49) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 37

    block                          shift and go to state 195

state 193

    (18) identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .

    EQUALS          reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    PLUSEQUALS      reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    SUBSTRACTEQUALS reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    INCREMENT       reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DECREMENT       reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MULTIPLY        reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DIVIDE          reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MOD             reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    PLUS            reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MINUS           reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    COMPARISON      reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    GREATERHANOREQUAL reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    LESSTHANOREQUAL reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    GREATERTHAN     reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    LESSTHAN        reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DIFFERENT       reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    OR              reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    AND             reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    SEMICOLON       reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    COMMA           reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    RIGHTPARENTHESIS reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    RIGHTSQRBRACKET reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    TO              reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DO              reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)


state 194

    (75) non_conditional -> FOR ID EQUALS exp TO exp DO .

    LEFTBRACKET     reduce using rule 75 (non_conditional -> FOR ID EQUALS exp TO exp DO .)


state 195

    (70) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .

    READ            reduce using rule 70 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .)
    WRITE           reduce using rule 70 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .)
    IF              reduce using rule 70 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .)
    RETURN          reduce using rule 70 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .)
    ID              reduce using rule 70 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .)
    WHILE           reduce using rule 70 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .)
    FOR             reduce using rule 70 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .)
    RIGHTBRACKET    reduce using rule 70 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .)

