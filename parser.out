Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
Rule 2     program -> PROGRAM ID SEMICOLON functions_list MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
Rule 3     program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
Rule 4     data_type -> INT
Rule 5     data_type -> FLOAT
Rule 6     data_type -> CHAR
Rule 7     vars -> VAR vars_lists
Rule 8     vars_lists -> data_type decla_ids_list SEMICOLON vars_lists
Rule 9     vars_lists -> data_type decla_ids_list SEMICOLON functions_list
Rule 10    vars_lists -> data_type decla_ids_list SEMICOLON
Rule 11    decla_ids_list -> decla_identifier COMMA decla_ids_list
Rule 12    decla_ids_list -> decla_identifier
Rule 13    decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
Rule 14    decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
Rule 15    decla_identifier -> ID
Rule 16    ids_list -> identifier COMMA ids_list
Rule 17    ids_list -> identifier
Rule 18    identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
Rule 19    identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
Rule 20    identifier -> ID
Rule 21    return_type -> data_type
Rule 22    return_type -> VOID
Rule 23    function -> return_type MODULE ID neupoint_add_function parameters_list vars block
Rule 24    function -> return_type MODULE ID neupoint_add_function parameters_list block
Rule 25    functions_list -> function functions_list
Rule 26    functions_list -> function
Rule 27    parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS
Rule 28    parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS
Rule 29    parameter -> data_type decla_identifier COMMA parameter
Rule 30    parameter -> data_type decla_identifier
Rule 31    neupoint_add_function -> <empty>
Rule 32    comparators -> COMPARISON
Rule 33    comparators -> GREATERHANOREQUAL
Rule 34    comparators -> LESSTHANOREQUAL
Rule 35    comparators -> GREATERTHAN
Rule 36    comparators -> LESSTHAN
Rule 37    comparators -> DIFFERENT
Rule 38    comparators -> OR
Rule 39    comparators -> AND
Rule 40    exp_operator -> PLUS
Rule 41    exp_operator -> MINUS
Rule 42    term_operator -> MULTIPLY
Rule 43    term_operator -> DIVIDE
Rule 44    term_operator -> MOD
Rule 45    block -> LEFTBRACKET statutes_list RIGHTBRACKET
Rule 46    block -> LEFTBRACKET RIGHTBRACKET
Rule 47    statutes_list -> statute statutes_list
Rule 48    statutes_list -> statute
Rule 49    statute -> asignation
Rule 50    statute -> reading
Rule 51    statute -> writing
Rule 52    statute -> decision
Rule 53    statute -> loop
Rule 54    statute -> function_return
Rule 55    statute -> function_call SEMICOLON
Rule 56    asignation -> identifier EQUALS expresion SEMICOLON
Rule 57    asignation -> identifier PLUSEQUALS expresion SEMICOLON
Rule 58    asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON
Rule 59    asignation -> identifier INCREMENT SEMICOLON
Rule 60    asignation -> identifier DECREMENT SEMICOLON
Rule 61    reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON
Rule 62    writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON
Rule 63    writing_list -> CTESTRING COMMA writing_list
Rule 64    writing_list -> expresion COMMA writing_list
Rule 65    writing_list -> CTESTRING
Rule 66    writing_list -> expresion
Rule 67    decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block
Rule 68    decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block
Rule 69    loop -> conditional block
Rule 70    loop -> non_conditional block
Rule 71    conditional -> WHILE LEFTPARENTHESIS expresion RIGHTPARENTHESIS DO
Rule 72    non_conditional -> FOR ID EQUALS exp TO exp DO
Rule 73    function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON
Rule 74    function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
Rule 75    expresion_list -> expresion COMMA expresion_list
Rule 76    expresion_list -> expresion
Rule 77    expresion -> exp comparators exp
Rule 78    expresion -> exp
Rule 79    exp -> term exp_operator exp
Rule 80    exp -> term
Rule 81    term -> factor term_operator term
Rule 82    term -> factor
Rule 83    factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS
Rule 84    factor -> exp_operator opt_value
Rule 85    factor -> opt_value
Rule 86    opt_value -> CTEINT
Rule 87    opt_value -> CTEFLOAT
Rule 88    opt_value -> CTECHAR
Rule 89    opt_value -> function_call
Rule 90    opt_value -> identifier

Terminals, with rules where they appear

AND                  : 39
CHAR                 : 6
COMMA                : 11 16 29 63 64 75
COMPARISON           : 32
CTECHAR              : 88
CTEFLOAT             : 87
CTEINT               : 13 13 14 86
CTESTRING            : 63 65
DECREMENT            : 60
DIFFERENT            : 37
DIVIDE               : 43
DO                   : 71 72
ELSE                 : 67
EQUALS               : 56 72
FLOAT                : 5
FOR                  : 72
GREATERHANOREQUAL    : 33
GREATERTHAN          : 35
ID                   : 1 2 3 13 14 15 18 19 20 23 24 72 74
IF                   : 67 68
INCREMENT            : 59
INT                  : 4
LEFTBRACKET          : 45 46
LEFTPARENTHESIS      : 1 2 3 27 28 61 62 67 68 71 73 74 83
LEFTSQRBRACKET       : 13 13 14 18 18 19
LESSTHAN             : 36
LESSTHANOREQUAL      : 34
MAIN                 : 1 2 3
MINUS                : 41
MOD                  : 44
MODULE               : 23 24
MULTIPLY             : 42
OR                   : 38
PLUS                 : 40
PLUSEQUALS           : 57
PROGRAM              : 1 2 3
READ                 : 61
RETURN               : 73
RIGHTBRACKET         : 45 46
RIGHTPARENTHESIS     : 1 2 3 27 28 61 62 67 68 71 73 74 83
RIGHTSQRBRACKET      : 13 13 14 18 18 19
SEMICOLON            : 1 2 3 8 9 10 55 56 57 58 59 60 61 62 73
SUBSTRACTEQUALS      : 58
THEN                 : 67 68
TO                   : 72
VAR                  : 7
VOID                 : 22
WHILE                : 71
WRITE                : 62
error                : 

Nonterminals, with rules where they appear

asignation           : 49
block                : 1 2 3 23 24 67 67 68 69 70
comparators          : 77
conditional          : 69
data_type            : 8 9 10 21 29 30
decision             : 52
decla_identifier     : 11 12 29 30
decla_ids_list       : 8 9 10 11
exp                  : 72 72 73 77 77 78 79
exp_operator         : 79 84
expresion            : 18 18 19 56 57 58 64 66 67 68 71 75 76 83
expresion_list       : 74 75
factor               : 81 82
function             : 25 26
function_call        : 55 89
function_return      : 54
functions_list       : 2 9 25
identifier           : 16 17 56 57 58 59 60 90
ids_list             : 16 61
loop                 : 53
neupoint_add_function : 23 24
non_conditional      : 70
opt_value            : 84 85
parameter            : 27 29
parameters_list      : 23 24
program              : 0
reading              : 50
return_type          : 23 24
statute              : 47 48
statutes_list        : 45 47
term                 : 79 80 81
term_operator        : 81
vars                 : 1 23
vars_lists           : 7 8
writing              : 51
writing_list         : 62 63 64

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (2) program -> . PROGRAM ID SEMICOLON functions_list MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (3) program -> . PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (2) program -> PROGRAM . ID SEMICOLON functions_list MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (3) program -> PROGRAM . ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (2) program -> PROGRAM ID . SEMICOLON functions_list MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (3) program -> PROGRAM ID . SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (2) program -> PROGRAM ID SEMICOLON . functions_list MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (3) program -> PROGRAM ID SEMICOLON . MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block
    (7) vars -> . VAR vars_lists
    (25) functions_list -> . function functions_list
    (26) functions_list -> . function
    (23) function -> . return_type MODULE ID neupoint_add_function parameters_list vars block
    (24) function -> . return_type MODULE ID neupoint_add_function parameters_list block
    (21) return_type -> . data_type
    (22) return_type -> . VOID
    (4) data_type -> . INT
    (5) data_type -> . FLOAT
    (6) data_type -> . CHAR

    MAIN            shift and go to state 6
    VAR             shift and go to state 8
    VOID            shift and go to state 12
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    vars                           shift and go to state 5
    functions_list                 shift and go to state 7
    function                       shift and go to state 9
    return_type                    shift and go to state 10
    data_type                      shift and go to state 11

state 5

    (1) program -> PROGRAM ID SEMICOLON vars . MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block

    MAIN            shift and go to state 16


state 6

    (3) program -> PROGRAM ID SEMICOLON MAIN . LEFTPARENTHESIS RIGHTPARENTHESIS block

    LEFTPARENTHESIS shift and go to state 17


state 7

    (2) program -> PROGRAM ID SEMICOLON functions_list . MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block

    MAIN            shift and go to state 18


state 8

    (7) vars -> VAR . vars_lists
    (8) vars_lists -> . data_type decla_ids_list SEMICOLON vars_lists
    (9) vars_lists -> . data_type decla_ids_list SEMICOLON functions_list
    (10) vars_lists -> . data_type decla_ids_list SEMICOLON
    (4) data_type -> . INT
    (5) data_type -> . FLOAT
    (6) data_type -> . CHAR

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    vars_lists                     shift and go to state 19
    data_type                      shift and go to state 20

state 9

    (25) functions_list -> function . functions_list
    (26) functions_list -> function .
    (25) functions_list -> . function functions_list
    (26) functions_list -> . function
    (23) function -> . return_type MODULE ID neupoint_add_function parameters_list vars block
    (24) function -> . return_type MODULE ID neupoint_add_function parameters_list block
    (21) return_type -> . data_type
    (22) return_type -> . VOID
    (4) data_type -> . INT
    (5) data_type -> . FLOAT
    (6) data_type -> . CHAR

    MAIN            reduce using rule 26 (functions_list -> function .)
    LEFTBRACKET     reduce using rule 26 (functions_list -> function .)
    VOID            shift and go to state 12
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    function                       shift and go to state 9
    functions_list                 shift and go to state 21
    return_type                    shift and go to state 10
    data_type                      shift and go to state 11

state 10

    (23) function -> return_type . MODULE ID neupoint_add_function parameters_list vars block
    (24) function -> return_type . MODULE ID neupoint_add_function parameters_list block

    MODULE          shift and go to state 22


state 11

    (21) return_type -> data_type .

    MODULE          reduce using rule 21 (return_type -> data_type .)


state 12

    (22) return_type -> VOID .

    MODULE          reduce using rule 22 (return_type -> VOID .)


state 13

    (4) data_type -> INT .

    MODULE          reduce using rule 4 (data_type -> INT .)
    ID              reduce using rule 4 (data_type -> INT .)


state 14

    (5) data_type -> FLOAT .

    MODULE          reduce using rule 5 (data_type -> FLOAT .)
    ID              reduce using rule 5 (data_type -> FLOAT .)


state 15

    (6) data_type -> CHAR .

    MODULE          reduce using rule 6 (data_type -> CHAR .)
    ID              reduce using rule 6 (data_type -> CHAR .)


state 16

    (1) program -> PROGRAM ID SEMICOLON vars MAIN . LEFTPARENTHESIS RIGHTPARENTHESIS block

    LEFTPARENTHESIS shift and go to state 23


state 17

    (3) program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS . RIGHTPARENTHESIS block

    RIGHTPARENTHESIS shift and go to state 24


state 18

    (2) program -> PROGRAM ID SEMICOLON functions_list MAIN . LEFTPARENTHESIS RIGHTPARENTHESIS block

    LEFTPARENTHESIS shift and go to state 25


state 19

    (7) vars -> VAR vars_lists .

    MAIN            reduce using rule 7 (vars -> VAR vars_lists .)
    LEFTBRACKET     reduce using rule 7 (vars -> VAR vars_lists .)


state 20

    (8) vars_lists -> data_type . decla_ids_list SEMICOLON vars_lists
    (9) vars_lists -> data_type . decla_ids_list SEMICOLON functions_list
    (10) vars_lists -> data_type . decla_ids_list SEMICOLON
    (11) decla_ids_list -> . decla_identifier COMMA decla_ids_list
    (12) decla_ids_list -> . decla_identifier
    (13) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (15) decla_identifier -> . ID

    ID              shift and go to state 28

    decla_ids_list                 shift and go to state 26
    decla_identifier               shift and go to state 27

state 21

    (25) functions_list -> function functions_list .

    MAIN            reduce using rule 25 (functions_list -> function functions_list .)
    LEFTBRACKET     reduce using rule 25 (functions_list -> function functions_list .)


state 22

    (23) function -> return_type MODULE . ID neupoint_add_function parameters_list vars block
    (24) function -> return_type MODULE . ID neupoint_add_function parameters_list block

    ID              shift and go to state 29


state 23

    (1) program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS . RIGHTPARENTHESIS block

    RIGHTPARENTHESIS shift and go to state 30


state 24

    (3) program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS . block
    (45) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (46) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 32

    block                          shift and go to state 31

state 25

    (2) program -> PROGRAM ID SEMICOLON functions_list MAIN LEFTPARENTHESIS . RIGHTPARENTHESIS block

    RIGHTPARENTHESIS shift and go to state 33


state 26

    (8) vars_lists -> data_type decla_ids_list . SEMICOLON vars_lists
    (9) vars_lists -> data_type decla_ids_list . SEMICOLON functions_list
    (10) vars_lists -> data_type decla_ids_list . SEMICOLON

    SEMICOLON       shift and go to state 34


state 27

    (11) decla_ids_list -> decla_identifier . COMMA decla_ids_list
    (12) decla_ids_list -> decla_identifier .

    COMMA           shift and go to state 35
    SEMICOLON       reduce using rule 12 (decla_ids_list -> decla_identifier .)


state 28

    (13) decla_identifier -> ID . LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> ID . LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (15) decla_identifier -> ID .

    LEFTSQRBRACKET  shift and go to state 36
    COMMA           reduce using rule 15 (decla_identifier -> ID .)
    SEMICOLON       reduce using rule 15 (decla_identifier -> ID .)
    RIGHTPARENTHESIS reduce using rule 15 (decla_identifier -> ID .)


state 29

    (23) function -> return_type MODULE ID . neupoint_add_function parameters_list vars block
    (24) function -> return_type MODULE ID . neupoint_add_function parameters_list block
    (31) neupoint_add_function -> .

    LEFTPARENTHESIS reduce using rule 31 (neupoint_add_function -> .)

    neupoint_add_function          shift and go to state 37

state 30

    (1) program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS . block
    (45) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (46) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 32

    block                          shift and go to state 38

state 31

    (3) program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .

    $end            reduce using rule 3 (program -> PROGRAM ID SEMICOLON MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .)


state 32

    (45) block -> LEFTBRACKET . statutes_list RIGHTBRACKET
    (46) block -> LEFTBRACKET . RIGHTBRACKET
    (47) statutes_list -> . statute statutes_list
    (48) statutes_list -> . statute
    (49) statute -> . asignation
    (50) statute -> . reading
    (51) statute -> . writing
    (52) statute -> . decision
    (53) statute -> . loop
    (54) statute -> . function_return
    (55) statute -> . function_call SEMICOLON
    (56) asignation -> . identifier EQUALS expresion SEMICOLON
    (57) asignation -> . identifier PLUSEQUALS expresion SEMICOLON
    (58) asignation -> . identifier SUBSTRACTEQUALS expresion SEMICOLON
    (59) asignation -> . identifier INCREMENT SEMICOLON
    (60) asignation -> . identifier DECREMENT SEMICOLON
    (61) reading -> . READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON
    (62) writing -> . WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON
    (67) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block
    (68) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block
    (69) loop -> . conditional block
    (70) loop -> . non_conditional block
    (73) function_return -> . RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON
    (74) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID
    (71) conditional -> . WHILE LEFTPARENTHESIS expresion RIGHTPARENTHESIS DO
    (72) non_conditional -> . FOR ID EQUALS exp TO exp DO

    RIGHTBRACKET    shift and go to state 40
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    IF              shift and go to state 52
    RETURN          shift and go to state 55
    ID              shift and go to state 56
    WHILE           shift and go to state 57
    FOR             shift and go to state 58

    statutes_list                  shift and go to state 39
    statute                        shift and go to state 41
    asignation                     shift and go to state 42
    reading                        shift and go to state 43
    writing                        shift and go to state 44
    decision                       shift and go to state 45
    loop                           shift and go to state 46
    function_return                shift and go to state 47
    function_call                  shift and go to state 48
    identifier                     shift and go to state 49
    conditional                    shift and go to state 53
    non_conditional                shift and go to state 54

state 33

    (2) program -> PROGRAM ID SEMICOLON functions_list MAIN LEFTPARENTHESIS RIGHTPARENTHESIS . block
    (45) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (46) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 32

    block                          shift and go to state 59

state 34

    (8) vars_lists -> data_type decla_ids_list SEMICOLON . vars_lists
    (9) vars_lists -> data_type decla_ids_list SEMICOLON . functions_list
    (10) vars_lists -> data_type decla_ids_list SEMICOLON .
    (8) vars_lists -> . data_type decla_ids_list SEMICOLON vars_lists
    (9) vars_lists -> . data_type decla_ids_list SEMICOLON functions_list
    (10) vars_lists -> . data_type decla_ids_list SEMICOLON
    (25) functions_list -> . function functions_list
    (26) functions_list -> . function
    (4) data_type -> . INT
    (5) data_type -> . FLOAT
    (6) data_type -> . CHAR
    (23) function -> . return_type MODULE ID neupoint_add_function parameters_list vars block
    (24) function -> . return_type MODULE ID neupoint_add_function parameters_list block
    (21) return_type -> . data_type
    (22) return_type -> . VOID

    MAIN            reduce using rule 10 (vars_lists -> data_type decla_ids_list SEMICOLON .)
    LEFTBRACKET     reduce using rule 10 (vars_lists -> data_type decla_ids_list SEMICOLON .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15
    VOID            shift and go to state 12

    data_type                      shift and go to state 60
    vars_lists                     shift and go to state 61
    functions_list                 shift and go to state 62
    function                       shift and go to state 9
    return_type                    shift and go to state 10

state 35

    (11) decla_ids_list -> decla_identifier COMMA . decla_ids_list
    (11) decla_ids_list -> . decla_identifier COMMA decla_ids_list
    (12) decla_ids_list -> . decla_identifier
    (13) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (15) decla_identifier -> . ID

    ID              shift and go to state 28

    decla_identifier               shift and go to state 27
    decla_ids_list                 shift and go to state 63

state 36

    (13) decla_identifier -> ID LEFTSQRBRACKET . CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> ID LEFTSQRBRACKET . CTEINT RIGHTSQRBRACKET

    CTEINT          shift and go to state 64


state 37

    (23) function -> return_type MODULE ID neupoint_add_function . parameters_list vars block
    (24) function -> return_type MODULE ID neupoint_add_function . parameters_list block
    (27) parameters_list -> . LEFTPARENTHESIS parameter RIGHTPARENTHESIS
    (28) parameters_list -> . LEFTPARENTHESIS RIGHTPARENTHESIS

    LEFTPARENTHESIS shift and go to state 66

    parameters_list                shift and go to state 65

state 38

    (1) program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON vars MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .)


state 39

    (45) block -> LEFTBRACKET statutes_list . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 67


state 40

    (46) block -> LEFTBRACKET RIGHTBRACKET .

    $end            reduce using rule 46 (block -> LEFTBRACKET RIGHTBRACKET .)
    READ            reduce using rule 46 (block -> LEFTBRACKET RIGHTBRACKET .)
    WRITE           reduce using rule 46 (block -> LEFTBRACKET RIGHTBRACKET .)
    IF              reduce using rule 46 (block -> LEFTBRACKET RIGHTBRACKET .)
    RETURN          reduce using rule 46 (block -> LEFTBRACKET RIGHTBRACKET .)
    ID              reduce using rule 46 (block -> LEFTBRACKET RIGHTBRACKET .)
    WHILE           reduce using rule 46 (block -> LEFTBRACKET RIGHTBRACKET .)
    FOR             reduce using rule 46 (block -> LEFTBRACKET RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 46 (block -> LEFTBRACKET RIGHTBRACKET .)
    VOID            reduce using rule 46 (block -> LEFTBRACKET RIGHTBRACKET .)
    INT             reduce using rule 46 (block -> LEFTBRACKET RIGHTBRACKET .)
    FLOAT           reduce using rule 46 (block -> LEFTBRACKET RIGHTBRACKET .)
    CHAR            reduce using rule 46 (block -> LEFTBRACKET RIGHTBRACKET .)
    MAIN            reduce using rule 46 (block -> LEFTBRACKET RIGHTBRACKET .)
    LEFTBRACKET     reduce using rule 46 (block -> LEFTBRACKET RIGHTBRACKET .)
    ELSE            reduce using rule 46 (block -> LEFTBRACKET RIGHTBRACKET .)


state 41

    (47) statutes_list -> statute . statutes_list
    (48) statutes_list -> statute .
    (47) statutes_list -> . statute statutes_list
    (48) statutes_list -> . statute
    (49) statute -> . asignation
    (50) statute -> . reading
    (51) statute -> . writing
    (52) statute -> . decision
    (53) statute -> . loop
    (54) statute -> . function_return
    (55) statute -> . function_call SEMICOLON
    (56) asignation -> . identifier EQUALS expresion SEMICOLON
    (57) asignation -> . identifier PLUSEQUALS expresion SEMICOLON
    (58) asignation -> . identifier SUBSTRACTEQUALS expresion SEMICOLON
    (59) asignation -> . identifier INCREMENT SEMICOLON
    (60) asignation -> . identifier DECREMENT SEMICOLON
    (61) reading -> . READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON
    (62) writing -> . WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON
    (67) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block
    (68) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block
    (69) loop -> . conditional block
    (70) loop -> . non_conditional block
    (73) function_return -> . RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON
    (74) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID
    (71) conditional -> . WHILE LEFTPARENTHESIS expresion RIGHTPARENTHESIS DO
    (72) non_conditional -> . FOR ID EQUALS exp TO exp DO

    RIGHTBRACKET    reduce using rule 48 (statutes_list -> statute .)
    READ            shift and go to state 50
    WRITE           shift and go to state 51
    IF              shift and go to state 52
    RETURN          shift and go to state 55
    ID              shift and go to state 56
    WHILE           shift and go to state 57
    FOR             shift and go to state 58

    statute                        shift and go to state 41
    statutes_list                  shift and go to state 68
    asignation                     shift and go to state 42
    reading                        shift and go to state 43
    writing                        shift and go to state 44
    decision                       shift and go to state 45
    loop                           shift and go to state 46
    function_return                shift and go to state 47
    function_call                  shift and go to state 48
    identifier                     shift and go to state 49
    conditional                    shift and go to state 53
    non_conditional                shift and go to state 54

state 42

    (49) statute -> asignation .

    READ            reduce using rule 49 (statute -> asignation .)
    WRITE           reduce using rule 49 (statute -> asignation .)
    IF              reduce using rule 49 (statute -> asignation .)
    RETURN          reduce using rule 49 (statute -> asignation .)
    ID              reduce using rule 49 (statute -> asignation .)
    WHILE           reduce using rule 49 (statute -> asignation .)
    FOR             reduce using rule 49 (statute -> asignation .)
    RIGHTBRACKET    reduce using rule 49 (statute -> asignation .)


state 43

    (50) statute -> reading .

    READ            reduce using rule 50 (statute -> reading .)
    WRITE           reduce using rule 50 (statute -> reading .)
    IF              reduce using rule 50 (statute -> reading .)
    RETURN          reduce using rule 50 (statute -> reading .)
    ID              reduce using rule 50 (statute -> reading .)
    WHILE           reduce using rule 50 (statute -> reading .)
    FOR             reduce using rule 50 (statute -> reading .)
    RIGHTBRACKET    reduce using rule 50 (statute -> reading .)


state 44

    (51) statute -> writing .

    READ            reduce using rule 51 (statute -> writing .)
    WRITE           reduce using rule 51 (statute -> writing .)
    IF              reduce using rule 51 (statute -> writing .)
    RETURN          reduce using rule 51 (statute -> writing .)
    ID              reduce using rule 51 (statute -> writing .)
    WHILE           reduce using rule 51 (statute -> writing .)
    FOR             reduce using rule 51 (statute -> writing .)
    RIGHTBRACKET    reduce using rule 51 (statute -> writing .)


state 45

    (52) statute -> decision .

    READ            reduce using rule 52 (statute -> decision .)
    WRITE           reduce using rule 52 (statute -> decision .)
    IF              reduce using rule 52 (statute -> decision .)
    RETURN          reduce using rule 52 (statute -> decision .)
    ID              reduce using rule 52 (statute -> decision .)
    WHILE           reduce using rule 52 (statute -> decision .)
    FOR             reduce using rule 52 (statute -> decision .)
    RIGHTBRACKET    reduce using rule 52 (statute -> decision .)


state 46

    (53) statute -> loop .

    READ            reduce using rule 53 (statute -> loop .)
    WRITE           reduce using rule 53 (statute -> loop .)
    IF              reduce using rule 53 (statute -> loop .)
    RETURN          reduce using rule 53 (statute -> loop .)
    ID              reduce using rule 53 (statute -> loop .)
    WHILE           reduce using rule 53 (statute -> loop .)
    FOR             reduce using rule 53 (statute -> loop .)
    RIGHTBRACKET    reduce using rule 53 (statute -> loop .)


state 47

    (54) statute -> function_return .

    READ            reduce using rule 54 (statute -> function_return .)
    WRITE           reduce using rule 54 (statute -> function_return .)
    IF              reduce using rule 54 (statute -> function_return .)
    RETURN          reduce using rule 54 (statute -> function_return .)
    ID              reduce using rule 54 (statute -> function_return .)
    WHILE           reduce using rule 54 (statute -> function_return .)
    FOR             reduce using rule 54 (statute -> function_return .)
    RIGHTBRACKET    reduce using rule 54 (statute -> function_return .)


state 48

    (55) statute -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 69


state 49

    (56) asignation -> identifier . EQUALS expresion SEMICOLON
    (57) asignation -> identifier . PLUSEQUALS expresion SEMICOLON
    (58) asignation -> identifier . SUBSTRACTEQUALS expresion SEMICOLON
    (59) asignation -> identifier . INCREMENT SEMICOLON
    (60) asignation -> identifier . DECREMENT SEMICOLON

    EQUALS          shift and go to state 70
    PLUSEQUALS      shift and go to state 71
    SUBSTRACTEQUALS shift and go to state 72
    INCREMENT       shift and go to state 73
    DECREMENT       shift and go to state 74


state 50

    (61) reading -> READ . LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON

    LEFTPARENTHESIS shift and go to state 75


state 51

    (62) writing -> WRITE . LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON

    LEFTPARENTHESIS shift and go to state 76


state 52

    (67) decision -> IF . LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block
    (68) decision -> IF . LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block

    LEFTPARENTHESIS shift and go to state 77


state 53

    (69) loop -> conditional . block
    (45) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (46) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 32

    block                          shift and go to state 78

state 54

    (70) loop -> non_conditional . block
    (45) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (46) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 32

    block                          shift and go to state 79

state 55

    (73) function_return -> RETURN . LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON

    LEFTPARENTHESIS shift and go to state 80


state 56

    (74) function_call -> ID . LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> ID .

    LEFTPARENTHESIS shift and go to state 81
    LEFTSQRBRACKET  shift and go to state 82
    EQUALS          reduce using rule 20 (identifier -> ID .)
    PLUSEQUALS      reduce using rule 20 (identifier -> ID .)
    SUBSTRACTEQUALS reduce using rule 20 (identifier -> ID .)
    INCREMENT       reduce using rule 20 (identifier -> ID .)
    DECREMENT       reduce using rule 20 (identifier -> ID .)
    MULTIPLY        reduce using rule 20 (identifier -> ID .)
    DIVIDE          reduce using rule 20 (identifier -> ID .)
    MOD             reduce using rule 20 (identifier -> ID .)
    PLUS            reduce using rule 20 (identifier -> ID .)
    MINUS           reduce using rule 20 (identifier -> ID .)
    COMPARISON      reduce using rule 20 (identifier -> ID .)
    GREATERHANOREQUAL reduce using rule 20 (identifier -> ID .)
    LESSTHANOREQUAL reduce using rule 20 (identifier -> ID .)
    GREATERTHAN     reduce using rule 20 (identifier -> ID .)
    LESSTHAN        reduce using rule 20 (identifier -> ID .)
    DIFFERENT       reduce using rule 20 (identifier -> ID .)
    OR              reduce using rule 20 (identifier -> ID .)
    AND             reduce using rule 20 (identifier -> ID .)
    SEMICOLON       reduce using rule 20 (identifier -> ID .)
    COMMA           reduce using rule 20 (identifier -> ID .)
    RIGHTPARENTHESIS reduce using rule 20 (identifier -> ID .)
    RIGHTSQRBRACKET reduce using rule 20 (identifier -> ID .)
    TO              reduce using rule 20 (identifier -> ID .)
    DO              reduce using rule 20 (identifier -> ID .)


state 57

    (71) conditional -> WHILE . LEFTPARENTHESIS expresion RIGHTPARENTHESIS DO

    LEFTPARENTHESIS shift and go to state 83


state 58

    (72) non_conditional -> FOR . ID EQUALS exp TO exp DO

    ID              shift and go to state 84


state 59

    (2) program -> PROGRAM ID SEMICOLON functions_list MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .

    $end            reduce using rule 2 (program -> PROGRAM ID SEMICOLON functions_list MAIN LEFTPARENTHESIS RIGHTPARENTHESIS block .)


state 60

    (8) vars_lists -> data_type . decla_ids_list SEMICOLON vars_lists
    (9) vars_lists -> data_type . decla_ids_list SEMICOLON functions_list
    (10) vars_lists -> data_type . decla_ids_list SEMICOLON
    (21) return_type -> data_type .
    (11) decla_ids_list -> . decla_identifier COMMA decla_ids_list
    (12) decla_ids_list -> . decla_identifier
    (13) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (15) decla_identifier -> . ID

    MODULE          reduce using rule 21 (return_type -> data_type .)
    ID              shift and go to state 28

    decla_ids_list                 shift and go to state 26
    decla_identifier               shift and go to state 27

state 61

    (8) vars_lists -> data_type decla_ids_list SEMICOLON vars_lists .

    MAIN            reduce using rule 8 (vars_lists -> data_type decla_ids_list SEMICOLON vars_lists .)
    LEFTBRACKET     reduce using rule 8 (vars_lists -> data_type decla_ids_list SEMICOLON vars_lists .)


state 62

    (9) vars_lists -> data_type decla_ids_list SEMICOLON functions_list .

    MAIN            reduce using rule 9 (vars_lists -> data_type decla_ids_list SEMICOLON functions_list .)
    LEFTBRACKET     reduce using rule 9 (vars_lists -> data_type decla_ids_list SEMICOLON functions_list .)


state 63

    (11) decla_ids_list -> decla_identifier COMMA decla_ids_list .

    SEMICOLON       reduce using rule 11 (decla_ids_list -> decla_identifier COMMA decla_ids_list .)


state 64

    (13) decla_identifier -> ID LEFTSQRBRACKET CTEINT . RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> ID LEFTSQRBRACKET CTEINT . RIGHTSQRBRACKET

    RIGHTSQRBRACKET shift and go to state 85


state 65

    (23) function -> return_type MODULE ID neupoint_add_function parameters_list . vars block
    (24) function -> return_type MODULE ID neupoint_add_function parameters_list . block
    (7) vars -> . VAR vars_lists
    (45) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (46) block -> . LEFTBRACKET RIGHTBRACKET

    VAR             shift and go to state 8
    LEFTBRACKET     shift and go to state 32

    vars                           shift and go to state 86
    block                          shift and go to state 87

state 66

    (27) parameters_list -> LEFTPARENTHESIS . parameter RIGHTPARENTHESIS
    (28) parameters_list -> LEFTPARENTHESIS . RIGHTPARENTHESIS
    (29) parameter -> . data_type decla_identifier COMMA parameter
    (30) parameter -> . data_type decla_identifier
    (4) data_type -> . INT
    (5) data_type -> . FLOAT
    (6) data_type -> . CHAR

    RIGHTPARENTHESIS shift and go to state 89
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    parameter                      shift and go to state 88
    data_type                      shift and go to state 90

state 67

    (45) block -> LEFTBRACKET statutes_list RIGHTBRACKET .

    $end            reduce using rule 45 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    READ            reduce using rule 45 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    WRITE           reduce using rule 45 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    IF              reduce using rule 45 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    RETURN          reduce using rule 45 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    ID              reduce using rule 45 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    WHILE           reduce using rule 45 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    FOR             reduce using rule 45 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 45 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    VOID            reduce using rule 45 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    INT             reduce using rule 45 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    FLOAT           reduce using rule 45 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    CHAR            reduce using rule 45 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    MAIN            reduce using rule 45 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    LEFTBRACKET     reduce using rule 45 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    ELSE            reduce using rule 45 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)


state 68

    (47) statutes_list -> statute statutes_list .

    RIGHTBRACKET    reduce using rule 47 (statutes_list -> statute statutes_list .)


state 69

    (55) statute -> function_call SEMICOLON .

    READ            reduce using rule 55 (statute -> function_call SEMICOLON .)
    WRITE           reduce using rule 55 (statute -> function_call SEMICOLON .)
    IF              reduce using rule 55 (statute -> function_call SEMICOLON .)
    RETURN          reduce using rule 55 (statute -> function_call SEMICOLON .)
    ID              reduce using rule 55 (statute -> function_call SEMICOLON .)
    WHILE           reduce using rule 55 (statute -> function_call SEMICOLON .)
    FOR             reduce using rule 55 (statute -> function_call SEMICOLON .)
    RIGHTBRACKET    reduce using rule 55 (statute -> function_call SEMICOLON .)


state 70

    (56) asignation -> identifier EQUALS . expresion SEMICOLON
    (77) expresion -> . exp comparators exp
    (78) expresion -> . exp
    (79) exp -> . term exp_operator exp
    (80) exp -> . term
    (81) term -> . factor term_operator term
    (82) term -> . factor
    (83) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (84) factor -> . exp_operator opt_value
    (85) factor -> . opt_value
    (40) exp_operator -> . PLUS
    (41) exp_operator -> . MINUS
    (86) opt_value -> . CTEINT
    (87) opt_value -> . CTEFLOAT
    (88) opt_value -> . CTECHAR
    (89) opt_value -> . function_call
    (90) opt_value -> . identifier
    (74) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 56

    identifier                     shift and go to state 91
    expresion                      shift and go to state 92
    exp                            shift and go to state 93
    term                           shift and go to state 94
    exp_operator                   shift and go to state 95
    factor                         shift and go to state 96
    opt_value                      shift and go to state 98
    function_call                  shift and go to state 104

state 71

    (57) asignation -> identifier PLUSEQUALS . expresion SEMICOLON
    (77) expresion -> . exp comparators exp
    (78) expresion -> . exp
    (79) exp -> . term exp_operator exp
    (80) exp -> . term
    (81) term -> . factor term_operator term
    (82) term -> . factor
    (83) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (84) factor -> . exp_operator opt_value
    (85) factor -> . opt_value
    (40) exp_operator -> . PLUS
    (41) exp_operator -> . MINUS
    (86) opt_value -> . CTEINT
    (87) opt_value -> . CTEFLOAT
    (88) opt_value -> . CTECHAR
    (89) opt_value -> . function_call
    (90) opt_value -> . identifier
    (74) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 56

    identifier                     shift and go to state 91
    expresion                      shift and go to state 105
    exp                            shift and go to state 93
    term                           shift and go to state 94
    exp_operator                   shift and go to state 95
    factor                         shift and go to state 96
    opt_value                      shift and go to state 98
    function_call                  shift and go to state 104

state 72

    (58) asignation -> identifier SUBSTRACTEQUALS . expresion SEMICOLON
    (77) expresion -> . exp comparators exp
    (78) expresion -> . exp
    (79) exp -> . term exp_operator exp
    (80) exp -> . term
    (81) term -> . factor term_operator term
    (82) term -> . factor
    (83) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (84) factor -> . exp_operator opt_value
    (85) factor -> . opt_value
    (40) exp_operator -> . PLUS
    (41) exp_operator -> . MINUS
    (86) opt_value -> . CTEINT
    (87) opt_value -> . CTEFLOAT
    (88) opt_value -> . CTECHAR
    (89) opt_value -> . function_call
    (90) opt_value -> . identifier
    (74) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 56

    identifier                     shift and go to state 91
    expresion                      shift and go to state 106
    exp                            shift and go to state 93
    term                           shift and go to state 94
    exp_operator                   shift and go to state 95
    factor                         shift and go to state 96
    opt_value                      shift and go to state 98
    function_call                  shift and go to state 104

state 73

    (59) asignation -> identifier INCREMENT . SEMICOLON

    SEMICOLON       shift and go to state 107


state 74

    (60) asignation -> identifier DECREMENT . SEMICOLON

    SEMICOLON       shift and go to state 108


state 75

    (61) reading -> READ LEFTPARENTHESIS . ids_list RIGHTPARENTHESIS SEMICOLON
    (16) ids_list -> . identifier COMMA ids_list
    (17) ids_list -> . identifier
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    ID              shift and go to state 111

    ids_list                       shift and go to state 109
    identifier                     shift and go to state 110

state 76

    (62) writing -> WRITE LEFTPARENTHESIS . writing_list RIGHTPARENTHESIS SEMICOLON
    (63) writing_list -> . CTESTRING COMMA writing_list
    (64) writing_list -> . expresion COMMA writing_list
    (65) writing_list -> . CTESTRING
    (66) writing_list -> . expresion
    (77) expresion -> . exp comparators exp
    (78) expresion -> . exp
    (79) exp -> . term exp_operator exp
    (80) exp -> . term
    (81) term -> . factor term_operator term
    (82) term -> . factor
    (83) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (84) factor -> . exp_operator opt_value
    (85) factor -> . opt_value
    (40) exp_operator -> . PLUS
    (41) exp_operator -> . MINUS
    (86) opt_value -> . CTEINT
    (87) opt_value -> . CTEFLOAT
    (88) opt_value -> . CTECHAR
    (89) opt_value -> . function_call
    (90) opt_value -> . identifier
    (74) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    CTESTRING       shift and go to state 113
    LEFTPARENTHESIS shift and go to state 97
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 56

    writing_list                   shift and go to state 112
    expresion                      shift and go to state 114
    exp                            shift and go to state 93
    term                           shift and go to state 94
    exp_operator                   shift and go to state 95
    factor                         shift and go to state 96
    opt_value                      shift and go to state 98
    function_call                  shift and go to state 104
    identifier                     shift and go to state 91

state 77

    (67) decision -> IF LEFTPARENTHESIS . expresion RIGHTPARENTHESIS THEN block ELSE block
    (68) decision -> IF LEFTPARENTHESIS . expresion RIGHTPARENTHESIS THEN block
    (77) expresion -> . exp comparators exp
    (78) expresion -> . exp
    (79) exp -> . term exp_operator exp
    (80) exp -> . term
    (81) term -> . factor term_operator term
    (82) term -> . factor
    (83) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (84) factor -> . exp_operator opt_value
    (85) factor -> . opt_value
    (40) exp_operator -> . PLUS
    (41) exp_operator -> . MINUS
    (86) opt_value -> . CTEINT
    (87) opt_value -> . CTEFLOAT
    (88) opt_value -> . CTECHAR
    (89) opt_value -> . function_call
    (90) opt_value -> . identifier
    (74) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 56

    expresion                      shift and go to state 115
    exp                            shift and go to state 93
    term                           shift and go to state 94
    exp_operator                   shift and go to state 95
    factor                         shift and go to state 96
    opt_value                      shift and go to state 98
    function_call                  shift and go to state 104
    identifier                     shift and go to state 91

state 78

    (69) loop -> conditional block .

    READ            reduce using rule 69 (loop -> conditional block .)
    WRITE           reduce using rule 69 (loop -> conditional block .)
    IF              reduce using rule 69 (loop -> conditional block .)
    RETURN          reduce using rule 69 (loop -> conditional block .)
    ID              reduce using rule 69 (loop -> conditional block .)
    WHILE           reduce using rule 69 (loop -> conditional block .)
    FOR             reduce using rule 69 (loop -> conditional block .)
    RIGHTBRACKET    reduce using rule 69 (loop -> conditional block .)


state 79

    (70) loop -> non_conditional block .

    READ            reduce using rule 70 (loop -> non_conditional block .)
    WRITE           reduce using rule 70 (loop -> non_conditional block .)
    IF              reduce using rule 70 (loop -> non_conditional block .)
    RETURN          reduce using rule 70 (loop -> non_conditional block .)
    ID              reduce using rule 70 (loop -> non_conditional block .)
    WHILE           reduce using rule 70 (loop -> non_conditional block .)
    FOR             reduce using rule 70 (loop -> non_conditional block .)
    RIGHTBRACKET    reduce using rule 70 (loop -> non_conditional block .)


state 80

    (73) function_return -> RETURN LEFTPARENTHESIS . exp RIGHTPARENTHESIS SEMICOLON
    (79) exp -> . term exp_operator exp
    (80) exp -> . term
    (81) term -> . factor term_operator term
    (82) term -> . factor
    (83) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (84) factor -> . exp_operator opt_value
    (85) factor -> . opt_value
    (40) exp_operator -> . PLUS
    (41) exp_operator -> . MINUS
    (86) opt_value -> . CTEINT
    (87) opt_value -> . CTEFLOAT
    (88) opt_value -> . CTECHAR
    (89) opt_value -> . function_call
    (90) opt_value -> . identifier
    (74) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 56

    exp                            shift and go to state 116
    term                           shift and go to state 94
    exp_operator                   shift and go to state 95
    factor                         shift and go to state 96
    opt_value                      shift and go to state 98
    function_call                  shift and go to state 104
    identifier                     shift and go to state 91

state 81

    (74) function_call -> ID LEFTPARENTHESIS . expresion_list RIGHTPARENTHESIS
    (75) expresion_list -> . expresion COMMA expresion_list
    (76) expresion_list -> . expresion
    (77) expresion -> . exp comparators exp
    (78) expresion -> . exp
    (79) exp -> . term exp_operator exp
    (80) exp -> . term
    (81) term -> . factor term_operator term
    (82) term -> . factor
    (83) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (84) factor -> . exp_operator opt_value
    (85) factor -> . opt_value
    (40) exp_operator -> . PLUS
    (41) exp_operator -> . MINUS
    (86) opt_value -> . CTEINT
    (87) opt_value -> . CTEFLOAT
    (88) opt_value -> . CTECHAR
    (89) opt_value -> . function_call
    (90) opt_value -> . identifier
    (74) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 56

    expresion_list                 shift and go to state 117
    expresion                      shift and go to state 118
    exp                            shift and go to state 93
    term                           shift and go to state 94
    exp_operator                   shift and go to state 95
    factor                         shift and go to state 96
    opt_value                      shift and go to state 98
    function_call                  shift and go to state 104
    identifier                     shift and go to state 91

state 82

    (18) identifier -> ID LEFTSQRBRACKET . expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> ID LEFTSQRBRACKET . expresion RIGHTSQRBRACKET
    (77) expresion -> . exp comparators exp
    (78) expresion -> . exp
    (79) exp -> . term exp_operator exp
    (80) exp -> . term
    (81) term -> . factor term_operator term
    (82) term -> . factor
    (83) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (84) factor -> . exp_operator opt_value
    (85) factor -> . opt_value
    (40) exp_operator -> . PLUS
    (41) exp_operator -> . MINUS
    (86) opt_value -> . CTEINT
    (87) opt_value -> . CTEFLOAT
    (88) opt_value -> . CTECHAR
    (89) opt_value -> . function_call
    (90) opt_value -> . identifier
    (74) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 56

    expresion                      shift and go to state 119
    exp                            shift and go to state 93
    term                           shift and go to state 94
    exp_operator                   shift and go to state 95
    factor                         shift and go to state 96
    opt_value                      shift and go to state 98
    function_call                  shift and go to state 104
    identifier                     shift and go to state 91

state 83

    (71) conditional -> WHILE LEFTPARENTHESIS . expresion RIGHTPARENTHESIS DO
    (77) expresion -> . exp comparators exp
    (78) expresion -> . exp
    (79) exp -> . term exp_operator exp
    (80) exp -> . term
    (81) term -> . factor term_operator term
    (82) term -> . factor
    (83) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (84) factor -> . exp_operator opt_value
    (85) factor -> . opt_value
    (40) exp_operator -> . PLUS
    (41) exp_operator -> . MINUS
    (86) opt_value -> . CTEINT
    (87) opt_value -> . CTEFLOAT
    (88) opt_value -> . CTECHAR
    (89) opt_value -> . function_call
    (90) opt_value -> . identifier
    (74) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 56

    expresion                      shift and go to state 120
    exp                            shift and go to state 93
    term                           shift and go to state 94
    exp_operator                   shift and go to state 95
    factor                         shift and go to state 96
    opt_value                      shift and go to state 98
    function_call                  shift and go to state 104
    identifier                     shift and go to state 91

state 84

    (72) non_conditional -> FOR ID . EQUALS exp TO exp DO

    EQUALS          shift and go to state 121


state 85

    (13) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET . LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .

    LEFTSQRBRACKET  shift and go to state 122
    COMMA           reduce using rule 14 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)
    SEMICOLON       reduce using rule 14 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)
    RIGHTPARENTHESIS reduce using rule 14 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)


state 86

    (23) function -> return_type MODULE ID neupoint_add_function parameters_list vars . block
    (45) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (46) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 32

    block                          shift and go to state 123

state 87

    (24) function -> return_type MODULE ID neupoint_add_function parameters_list block .

    VOID            reduce using rule 24 (function -> return_type MODULE ID neupoint_add_function parameters_list block .)
    INT             reduce using rule 24 (function -> return_type MODULE ID neupoint_add_function parameters_list block .)
    FLOAT           reduce using rule 24 (function -> return_type MODULE ID neupoint_add_function parameters_list block .)
    CHAR            reduce using rule 24 (function -> return_type MODULE ID neupoint_add_function parameters_list block .)
    MAIN            reduce using rule 24 (function -> return_type MODULE ID neupoint_add_function parameters_list block .)
    LEFTBRACKET     reduce using rule 24 (function -> return_type MODULE ID neupoint_add_function parameters_list block .)


state 88

    (27) parameters_list -> LEFTPARENTHESIS parameter . RIGHTPARENTHESIS

    RIGHTPARENTHESIS shift and go to state 124


state 89

    (28) parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS .

    VAR             reduce using rule 28 (parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS .)
    LEFTBRACKET     reduce using rule 28 (parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS .)


state 90

    (29) parameter -> data_type . decla_identifier COMMA parameter
    (30) parameter -> data_type . decla_identifier
    (13) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (14) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (15) decla_identifier -> . ID

    ID              shift and go to state 28

    decla_identifier               shift and go to state 125

state 91

    (90) opt_value -> identifier .

    MULTIPLY        reduce using rule 90 (opt_value -> identifier .)
    DIVIDE          reduce using rule 90 (opt_value -> identifier .)
    MOD             reduce using rule 90 (opt_value -> identifier .)
    PLUS            reduce using rule 90 (opt_value -> identifier .)
    MINUS           reduce using rule 90 (opt_value -> identifier .)
    COMPARISON      reduce using rule 90 (opt_value -> identifier .)
    GREATERHANOREQUAL reduce using rule 90 (opt_value -> identifier .)
    LESSTHANOREQUAL reduce using rule 90 (opt_value -> identifier .)
    GREATERTHAN     reduce using rule 90 (opt_value -> identifier .)
    LESSTHAN        reduce using rule 90 (opt_value -> identifier .)
    DIFFERENT       reduce using rule 90 (opt_value -> identifier .)
    OR              reduce using rule 90 (opt_value -> identifier .)
    AND             reduce using rule 90 (opt_value -> identifier .)
    SEMICOLON       reduce using rule 90 (opt_value -> identifier .)
    COMMA           reduce using rule 90 (opt_value -> identifier .)
    RIGHTPARENTHESIS reduce using rule 90 (opt_value -> identifier .)
    RIGHTSQRBRACKET reduce using rule 90 (opt_value -> identifier .)
    TO              reduce using rule 90 (opt_value -> identifier .)
    DO              reduce using rule 90 (opt_value -> identifier .)


state 92

    (56) asignation -> identifier EQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 126


state 93

    (77) expresion -> exp . comparators exp
    (78) expresion -> exp .
    (32) comparators -> . COMPARISON
    (33) comparators -> . GREATERHANOREQUAL
    (34) comparators -> . LESSTHANOREQUAL
    (35) comparators -> . GREATERTHAN
    (36) comparators -> . LESSTHAN
    (37) comparators -> . DIFFERENT
    (38) comparators -> . OR
    (39) comparators -> . AND

    SEMICOLON       reduce using rule 78 (expresion -> exp .)
    COMMA           reduce using rule 78 (expresion -> exp .)
    RIGHTPARENTHESIS reduce using rule 78 (expresion -> exp .)
    RIGHTSQRBRACKET reduce using rule 78 (expresion -> exp .)
    COMPARISON      shift and go to state 128
    GREATERHANOREQUAL shift and go to state 129
    LESSTHANOREQUAL shift and go to state 130
    GREATERTHAN     shift and go to state 131
    LESSTHAN        shift and go to state 132
    DIFFERENT       shift and go to state 133
    OR              shift and go to state 134
    AND             shift and go to state 135

    comparators                    shift and go to state 127

state 94

    (79) exp -> term . exp_operator exp
    (80) exp -> term .
    (40) exp_operator -> . PLUS
    (41) exp_operator -> . MINUS

    COMPARISON      reduce using rule 80 (exp -> term .)
    GREATERHANOREQUAL reduce using rule 80 (exp -> term .)
    LESSTHANOREQUAL reduce using rule 80 (exp -> term .)
    GREATERTHAN     reduce using rule 80 (exp -> term .)
    LESSTHAN        reduce using rule 80 (exp -> term .)
    DIFFERENT       reduce using rule 80 (exp -> term .)
    OR              reduce using rule 80 (exp -> term .)
    AND             reduce using rule 80 (exp -> term .)
    SEMICOLON       reduce using rule 80 (exp -> term .)
    COMMA           reduce using rule 80 (exp -> term .)
    RIGHTPARENTHESIS reduce using rule 80 (exp -> term .)
    RIGHTSQRBRACKET reduce using rule 80 (exp -> term .)
    TO              reduce using rule 80 (exp -> term .)
    DO              reduce using rule 80 (exp -> term .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100

    exp_operator                   shift and go to state 136

state 95

    (84) factor -> exp_operator . opt_value
    (86) opt_value -> . CTEINT
    (87) opt_value -> . CTEFLOAT
    (88) opt_value -> . CTECHAR
    (89) opt_value -> . function_call
    (90) opt_value -> . identifier
    (74) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 56

    opt_value                      shift and go to state 137
    function_call                  shift and go to state 104
    identifier                     shift and go to state 91

state 96

    (81) term -> factor . term_operator term
    (82) term -> factor .
    (42) term_operator -> . MULTIPLY
    (43) term_operator -> . DIVIDE
    (44) term_operator -> . MOD

    PLUS            reduce using rule 82 (term -> factor .)
    MINUS           reduce using rule 82 (term -> factor .)
    COMPARISON      reduce using rule 82 (term -> factor .)
    GREATERHANOREQUAL reduce using rule 82 (term -> factor .)
    LESSTHANOREQUAL reduce using rule 82 (term -> factor .)
    GREATERTHAN     reduce using rule 82 (term -> factor .)
    LESSTHAN        reduce using rule 82 (term -> factor .)
    DIFFERENT       reduce using rule 82 (term -> factor .)
    OR              reduce using rule 82 (term -> factor .)
    AND             reduce using rule 82 (term -> factor .)
    SEMICOLON       reduce using rule 82 (term -> factor .)
    COMMA           reduce using rule 82 (term -> factor .)
    RIGHTPARENTHESIS reduce using rule 82 (term -> factor .)
    RIGHTSQRBRACKET reduce using rule 82 (term -> factor .)
    TO              reduce using rule 82 (term -> factor .)
    DO              reduce using rule 82 (term -> factor .)
    MULTIPLY        shift and go to state 139
    DIVIDE          shift and go to state 140
    MOD             shift and go to state 141

    term_operator                  shift and go to state 138

state 97

    (83) factor -> LEFTPARENTHESIS . expresion RIGHTPARENTHESIS
    (77) expresion -> . exp comparators exp
    (78) expresion -> . exp
    (79) exp -> . term exp_operator exp
    (80) exp -> . term
    (81) term -> . factor term_operator term
    (82) term -> . factor
    (83) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (84) factor -> . exp_operator opt_value
    (85) factor -> . opt_value
    (40) exp_operator -> . PLUS
    (41) exp_operator -> . MINUS
    (86) opt_value -> . CTEINT
    (87) opt_value -> . CTEFLOAT
    (88) opt_value -> . CTECHAR
    (89) opt_value -> . function_call
    (90) opt_value -> . identifier
    (74) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 56

    expresion                      shift and go to state 142
    exp                            shift and go to state 93
    term                           shift and go to state 94
    exp_operator                   shift and go to state 95
    factor                         shift and go to state 96
    opt_value                      shift and go to state 98
    function_call                  shift and go to state 104
    identifier                     shift and go to state 91

state 98

    (85) factor -> opt_value .

    MULTIPLY        reduce using rule 85 (factor -> opt_value .)
    DIVIDE          reduce using rule 85 (factor -> opt_value .)
    MOD             reduce using rule 85 (factor -> opt_value .)
    PLUS            reduce using rule 85 (factor -> opt_value .)
    MINUS           reduce using rule 85 (factor -> opt_value .)
    COMPARISON      reduce using rule 85 (factor -> opt_value .)
    GREATERHANOREQUAL reduce using rule 85 (factor -> opt_value .)
    LESSTHANOREQUAL reduce using rule 85 (factor -> opt_value .)
    GREATERTHAN     reduce using rule 85 (factor -> opt_value .)
    LESSTHAN        reduce using rule 85 (factor -> opt_value .)
    DIFFERENT       reduce using rule 85 (factor -> opt_value .)
    OR              reduce using rule 85 (factor -> opt_value .)
    AND             reduce using rule 85 (factor -> opt_value .)
    SEMICOLON       reduce using rule 85 (factor -> opt_value .)
    COMMA           reduce using rule 85 (factor -> opt_value .)
    RIGHTPARENTHESIS reduce using rule 85 (factor -> opt_value .)
    RIGHTSQRBRACKET reduce using rule 85 (factor -> opt_value .)
    TO              reduce using rule 85 (factor -> opt_value .)
    DO              reduce using rule 85 (factor -> opt_value .)


state 99

    (40) exp_operator -> PLUS .

    CTEINT          reduce using rule 40 (exp_operator -> PLUS .)
    CTEFLOAT        reduce using rule 40 (exp_operator -> PLUS .)
    CTECHAR         reduce using rule 40 (exp_operator -> PLUS .)
    ID              reduce using rule 40 (exp_operator -> PLUS .)
    LEFTPARENTHESIS reduce using rule 40 (exp_operator -> PLUS .)
    PLUS            reduce using rule 40 (exp_operator -> PLUS .)
    MINUS           reduce using rule 40 (exp_operator -> PLUS .)


state 100

    (41) exp_operator -> MINUS .

    CTEINT          reduce using rule 41 (exp_operator -> MINUS .)
    CTEFLOAT        reduce using rule 41 (exp_operator -> MINUS .)
    CTECHAR         reduce using rule 41 (exp_operator -> MINUS .)
    ID              reduce using rule 41 (exp_operator -> MINUS .)
    LEFTPARENTHESIS reduce using rule 41 (exp_operator -> MINUS .)
    PLUS            reduce using rule 41 (exp_operator -> MINUS .)
    MINUS           reduce using rule 41 (exp_operator -> MINUS .)


state 101

    (86) opt_value -> CTEINT .

    MULTIPLY        reduce using rule 86 (opt_value -> CTEINT .)
    DIVIDE          reduce using rule 86 (opt_value -> CTEINT .)
    MOD             reduce using rule 86 (opt_value -> CTEINT .)
    PLUS            reduce using rule 86 (opt_value -> CTEINT .)
    MINUS           reduce using rule 86 (opt_value -> CTEINT .)
    COMPARISON      reduce using rule 86 (opt_value -> CTEINT .)
    GREATERHANOREQUAL reduce using rule 86 (opt_value -> CTEINT .)
    LESSTHANOREQUAL reduce using rule 86 (opt_value -> CTEINT .)
    GREATERTHAN     reduce using rule 86 (opt_value -> CTEINT .)
    LESSTHAN        reduce using rule 86 (opt_value -> CTEINT .)
    DIFFERENT       reduce using rule 86 (opt_value -> CTEINT .)
    OR              reduce using rule 86 (opt_value -> CTEINT .)
    AND             reduce using rule 86 (opt_value -> CTEINT .)
    SEMICOLON       reduce using rule 86 (opt_value -> CTEINT .)
    COMMA           reduce using rule 86 (opt_value -> CTEINT .)
    RIGHTPARENTHESIS reduce using rule 86 (opt_value -> CTEINT .)
    RIGHTSQRBRACKET reduce using rule 86 (opt_value -> CTEINT .)
    TO              reduce using rule 86 (opt_value -> CTEINT .)
    DO              reduce using rule 86 (opt_value -> CTEINT .)


state 102

    (87) opt_value -> CTEFLOAT .

    MULTIPLY        reduce using rule 87 (opt_value -> CTEFLOAT .)
    DIVIDE          reduce using rule 87 (opt_value -> CTEFLOAT .)
    MOD             reduce using rule 87 (opt_value -> CTEFLOAT .)
    PLUS            reduce using rule 87 (opt_value -> CTEFLOAT .)
    MINUS           reduce using rule 87 (opt_value -> CTEFLOAT .)
    COMPARISON      reduce using rule 87 (opt_value -> CTEFLOAT .)
    GREATERHANOREQUAL reduce using rule 87 (opt_value -> CTEFLOAT .)
    LESSTHANOREQUAL reduce using rule 87 (opt_value -> CTEFLOAT .)
    GREATERTHAN     reduce using rule 87 (opt_value -> CTEFLOAT .)
    LESSTHAN        reduce using rule 87 (opt_value -> CTEFLOAT .)
    DIFFERENT       reduce using rule 87 (opt_value -> CTEFLOAT .)
    OR              reduce using rule 87 (opt_value -> CTEFLOAT .)
    AND             reduce using rule 87 (opt_value -> CTEFLOAT .)
    SEMICOLON       reduce using rule 87 (opt_value -> CTEFLOAT .)
    COMMA           reduce using rule 87 (opt_value -> CTEFLOAT .)
    RIGHTPARENTHESIS reduce using rule 87 (opt_value -> CTEFLOAT .)
    RIGHTSQRBRACKET reduce using rule 87 (opt_value -> CTEFLOAT .)
    TO              reduce using rule 87 (opt_value -> CTEFLOAT .)
    DO              reduce using rule 87 (opt_value -> CTEFLOAT .)


state 103

    (88) opt_value -> CTECHAR .

    MULTIPLY        reduce using rule 88 (opt_value -> CTECHAR .)
    DIVIDE          reduce using rule 88 (opt_value -> CTECHAR .)
    MOD             reduce using rule 88 (opt_value -> CTECHAR .)
    PLUS            reduce using rule 88 (opt_value -> CTECHAR .)
    MINUS           reduce using rule 88 (opt_value -> CTECHAR .)
    COMPARISON      reduce using rule 88 (opt_value -> CTECHAR .)
    GREATERHANOREQUAL reduce using rule 88 (opt_value -> CTECHAR .)
    LESSTHANOREQUAL reduce using rule 88 (opt_value -> CTECHAR .)
    GREATERTHAN     reduce using rule 88 (opt_value -> CTECHAR .)
    LESSTHAN        reduce using rule 88 (opt_value -> CTECHAR .)
    DIFFERENT       reduce using rule 88 (opt_value -> CTECHAR .)
    OR              reduce using rule 88 (opt_value -> CTECHAR .)
    AND             reduce using rule 88 (opt_value -> CTECHAR .)
    SEMICOLON       reduce using rule 88 (opt_value -> CTECHAR .)
    COMMA           reduce using rule 88 (opt_value -> CTECHAR .)
    RIGHTPARENTHESIS reduce using rule 88 (opt_value -> CTECHAR .)
    RIGHTSQRBRACKET reduce using rule 88 (opt_value -> CTECHAR .)
    TO              reduce using rule 88 (opt_value -> CTECHAR .)
    DO              reduce using rule 88 (opt_value -> CTECHAR .)


state 104

    (89) opt_value -> function_call .

    MULTIPLY        reduce using rule 89 (opt_value -> function_call .)
    DIVIDE          reduce using rule 89 (opt_value -> function_call .)
    MOD             reduce using rule 89 (opt_value -> function_call .)
    PLUS            reduce using rule 89 (opt_value -> function_call .)
    MINUS           reduce using rule 89 (opt_value -> function_call .)
    COMPARISON      reduce using rule 89 (opt_value -> function_call .)
    GREATERHANOREQUAL reduce using rule 89 (opt_value -> function_call .)
    LESSTHANOREQUAL reduce using rule 89 (opt_value -> function_call .)
    GREATERTHAN     reduce using rule 89 (opt_value -> function_call .)
    LESSTHAN        reduce using rule 89 (opt_value -> function_call .)
    DIFFERENT       reduce using rule 89 (opt_value -> function_call .)
    OR              reduce using rule 89 (opt_value -> function_call .)
    AND             reduce using rule 89 (opt_value -> function_call .)
    SEMICOLON       reduce using rule 89 (opt_value -> function_call .)
    COMMA           reduce using rule 89 (opt_value -> function_call .)
    RIGHTPARENTHESIS reduce using rule 89 (opt_value -> function_call .)
    RIGHTSQRBRACKET reduce using rule 89 (opt_value -> function_call .)
    TO              reduce using rule 89 (opt_value -> function_call .)
    DO              reduce using rule 89 (opt_value -> function_call .)


state 105

    (57) asignation -> identifier PLUSEQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 143


state 106

    (58) asignation -> identifier SUBSTRACTEQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 144


state 107

    (59) asignation -> identifier INCREMENT SEMICOLON .

    READ            reduce using rule 59 (asignation -> identifier INCREMENT SEMICOLON .)
    WRITE           reduce using rule 59 (asignation -> identifier INCREMENT SEMICOLON .)
    IF              reduce using rule 59 (asignation -> identifier INCREMENT SEMICOLON .)
    RETURN          reduce using rule 59 (asignation -> identifier INCREMENT SEMICOLON .)
    ID              reduce using rule 59 (asignation -> identifier INCREMENT SEMICOLON .)
    WHILE           reduce using rule 59 (asignation -> identifier INCREMENT SEMICOLON .)
    FOR             reduce using rule 59 (asignation -> identifier INCREMENT SEMICOLON .)
    RIGHTBRACKET    reduce using rule 59 (asignation -> identifier INCREMENT SEMICOLON .)


state 108

    (60) asignation -> identifier DECREMENT SEMICOLON .

    READ            reduce using rule 60 (asignation -> identifier DECREMENT SEMICOLON .)
    WRITE           reduce using rule 60 (asignation -> identifier DECREMENT SEMICOLON .)
    IF              reduce using rule 60 (asignation -> identifier DECREMENT SEMICOLON .)
    RETURN          reduce using rule 60 (asignation -> identifier DECREMENT SEMICOLON .)
    ID              reduce using rule 60 (asignation -> identifier DECREMENT SEMICOLON .)
    WHILE           reduce using rule 60 (asignation -> identifier DECREMENT SEMICOLON .)
    FOR             reduce using rule 60 (asignation -> identifier DECREMENT SEMICOLON .)
    RIGHTBRACKET    reduce using rule 60 (asignation -> identifier DECREMENT SEMICOLON .)


state 109

    (61) reading -> READ LEFTPARENTHESIS ids_list . RIGHTPARENTHESIS SEMICOLON

    RIGHTPARENTHESIS shift and go to state 145


state 110

    (16) ids_list -> identifier . COMMA ids_list
    (17) ids_list -> identifier .

    COMMA           shift and go to state 146
    RIGHTPARENTHESIS reduce using rule 17 (ids_list -> identifier .)


state 111

    (18) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> ID .

    LEFTSQRBRACKET  shift and go to state 82
    COMMA           reduce using rule 20 (identifier -> ID .)
    RIGHTPARENTHESIS reduce using rule 20 (identifier -> ID .)


state 112

    (62) writing -> WRITE LEFTPARENTHESIS writing_list . RIGHTPARENTHESIS SEMICOLON

    RIGHTPARENTHESIS shift and go to state 147


state 113

    (63) writing_list -> CTESTRING . COMMA writing_list
    (65) writing_list -> CTESTRING .

    COMMA           shift and go to state 148
    RIGHTPARENTHESIS reduce using rule 65 (writing_list -> CTESTRING .)


state 114

    (64) writing_list -> expresion . COMMA writing_list
    (66) writing_list -> expresion .

    COMMA           shift and go to state 149
    RIGHTPARENTHESIS reduce using rule 66 (writing_list -> expresion .)


state 115

    (67) decision -> IF LEFTPARENTHESIS expresion . RIGHTPARENTHESIS THEN block ELSE block
    (68) decision -> IF LEFTPARENTHESIS expresion . RIGHTPARENTHESIS THEN block

    RIGHTPARENTHESIS shift and go to state 150


state 116

    (73) function_return -> RETURN LEFTPARENTHESIS exp . RIGHTPARENTHESIS SEMICOLON

    RIGHTPARENTHESIS shift and go to state 151


state 117

    (74) function_call -> ID LEFTPARENTHESIS expresion_list . RIGHTPARENTHESIS

    RIGHTPARENTHESIS shift and go to state 152


state 118

    (75) expresion_list -> expresion . COMMA expresion_list
    (76) expresion_list -> expresion .

    COMMA           shift and go to state 153
    RIGHTPARENTHESIS reduce using rule 76 (expresion_list -> expresion .)


state 119

    (18) identifier -> ID LEFTSQRBRACKET expresion . RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> ID LEFTSQRBRACKET expresion . RIGHTSQRBRACKET

    RIGHTSQRBRACKET shift and go to state 154


state 120

    (71) conditional -> WHILE LEFTPARENTHESIS expresion . RIGHTPARENTHESIS DO

    RIGHTPARENTHESIS shift and go to state 155


state 121

    (72) non_conditional -> FOR ID EQUALS . exp TO exp DO
    (79) exp -> . term exp_operator exp
    (80) exp -> . term
    (81) term -> . factor term_operator term
    (82) term -> . factor
    (83) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (84) factor -> . exp_operator opt_value
    (85) factor -> . opt_value
    (40) exp_operator -> . PLUS
    (41) exp_operator -> . MINUS
    (86) opt_value -> . CTEINT
    (87) opt_value -> . CTEFLOAT
    (88) opt_value -> . CTECHAR
    (89) opt_value -> . function_call
    (90) opt_value -> . identifier
    (74) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 56

    exp                            shift and go to state 156
    term                           shift and go to state 94
    exp_operator                   shift and go to state 95
    factor                         shift and go to state 96
    opt_value                      shift and go to state 98
    function_call                  shift and go to state 104
    identifier                     shift and go to state 91

state 122

    (13) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET . CTEINT RIGHTSQRBRACKET

    CTEINT          shift and go to state 157


state 123

    (23) function -> return_type MODULE ID neupoint_add_function parameters_list vars block .

    VOID            reduce using rule 23 (function -> return_type MODULE ID neupoint_add_function parameters_list vars block .)
    INT             reduce using rule 23 (function -> return_type MODULE ID neupoint_add_function parameters_list vars block .)
    FLOAT           reduce using rule 23 (function -> return_type MODULE ID neupoint_add_function parameters_list vars block .)
    CHAR            reduce using rule 23 (function -> return_type MODULE ID neupoint_add_function parameters_list vars block .)
    MAIN            reduce using rule 23 (function -> return_type MODULE ID neupoint_add_function parameters_list vars block .)
    LEFTBRACKET     reduce using rule 23 (function -> return_type MODULE ID neupoint_add_function parameters_list vars block .)


state 124

    (27) parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS .

    VAR             reduce using rule 27 (parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS .)
    LEFTBRACKET     reduce using rule 27 (parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS .)


state 125

    (29) parameter -> data_type decla_identifier . COMMA parameter
    (30) parameter -> data_type decla_identifier .

    COMMA           shift and go to state 158
    RIGHTPARENTHESIS reduce using rule 30 (parameter -> data_type decla_identifier .)


state 126

    (56) asignation -> identifier EQUALS expresion SEMICOLON .

    READ            reduce using rule 56 (asignation -> identifier EQUALS expresion SEMICOLON .)
    WRITE           reduce using rule 56 (asignation -> identifier EQUALS expresion SEMICOLON .)
    IF              reduce using rule 56 (asignation -> identifier EQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 56 (asignation -> identifier EQUALS expresion SEMICOLON .)
    ID              reduce using rule 56 (asignation -> identifier EQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 56 (asignation -> identifier EQUALS expresion SEMICOLON .)
    FOR             reduce using rule 56 (asignation -> identifier EQUALS expresion SEMICOLON .)
    RIGHTBRACKET    reduce using rule 56 (asignation -> identifier EQUALS expresion SEMICOLON .)


state 127

    (77) expresion -> exp comparators . exp
    (79) exp -> . term exp_operator exp
    (80) exp -> . term
    (81) term -> . factor term_operator term
    (82) term -> . factor
    (83) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (84) factor -> . exp_operator opt_value
    (85) factor -> . opt_value
    (40) exp_operator -> . PLUS
    (41) exp_operator -> . MINUS
    (86) opt_value -> . CTEINT
    (87) opt_value -> . CTEFLOAT
    (88) opt_value -> . CTECHAR
    (89) opt_value -> . function_call
    (90) opt_value -> . identifier
    (74) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 56

    exp                            shift and go to state 159
    term                           shift and go to state 94
    exp_operator                   shift and go to state 95
    factor                         shift and go to state 96
    opt_value                      shift and go to state 98
    function_call                  shift and go to state 104
    identifier                     shift and go to state 91

state 128

    (32) comparators -> COMPARISON .

    LEFTPARENTHESIS reduce using rule 32 (comparators -> COMPARISON .)
    PLUS            reduce using rule 32 (comparators -> COMPARISON .)
    MINUS           reduce using rule 32 (comparators -> COMPARISON .)
    CTEINT          reduce using rule 32 (comparators -> COMPARISON .)
    CTEFLOAT        reduce using rule 32 (comparators -> COMPARISON .)
    CTECHAR         reduce using rule 32 (comparators -> COMPARISON .)
    ID              reduce using rule 32 (comparators -> COMPARISON .)


state 129

    (33) comparators -> GREATERHANOREQUAL .

    LEFTPARENTHESIS reduce using rule 33 (comparators -> GREATERHANOREQUAL .)
    PLUS            reduce using rule 33 (comparators -> GREATERHANOREQUAL .)
    MINUS           reduce using rule 33 (comparators -> GREATERHANOREQUAL .)
    CTEINT          reduce using rule 33 (comparators -> GREATERHANOREQUAL .)
    CTEFLOAT        reduce using rule 33 (comparators -> GREATERHANOREQUAL .)
    CTECHAR         reduce using rule 33 (comparators -> GREATERHANOREQUAL .)
    ID              reduce using rule 33 (comparators -> GREATERHANOREQUAL .)


state 130

    (34) comparators -> LESSTHANOREQUAL .

    LEFTPARENTHESIS reduce using rule 34 (comparators -> LESSTHANOREQUAL .)
    PLUS            reduce using rule 34 (comparators -> LESSTHANOREQUAL .)
    MINUS           reduce using rule 34 (comparators -> LESSTHANOREQUAL .)
    CTEINT          reduce using rule 34 (comparators -> LESSTHANOREQUAL .)
    CTEFLOAT        reduce using rule 34 (comparators -> LESSTHANOREQUAL .)
    CTECHAR         reduce using rule 34 (comparators -> LESSTHANOREQUAL .)
    ID              reduce using rule 34 (comparators -> LESSTHANOREQUAL .)


state 131

    (35) comparators -> GREATERTHAN .

    LEFTPARENTHESIS reduce using rule 35 (comparators -> GREATERTHAN .)
    PLUS            reduce using rule 35 (comparators -> GREATERTHAN .)
    MINUS           reduce using rule 35 (comparators -> GREATERTHAN .)
    CTEINT          reduce using rule 35 (comparators -> GREATERTHAN .)
    CTEFLOAT        reduce using rule 35 (comparators -> GREATERTHAN .)
    CTECHAR         reduce using rule 35 (comparators -> GREATERTHAN .)
    ID              reduce using rule 35 (comparators -> GREATERTHAN .)


state 132

    (36) comparators -> LESSTHAN .

    LEFTPARENTHESIS reduce using rule 36 (comparators -> LESSTHAN .)
    PLUS            reduce using rule 36 (comparators -> LESSTHAN .)
    MINUS           reduce using rule 36 (comparators -> LESSTHAN .)
    CTEINT          reduce using rule 36 (comparators -> LESSTHAN .)
    CTEFLOAT        reduce using rule 36 (comparators -> LESSTHAN .)
    CTECHAR         reduce using rule 36 (comparators -> LESSTHAN .)
    ID              reduce using rule 36 (comparators -> LESSTHAN .)


state 133

    (37) comparators -> DIFFERENT .

    LEFTPARENTHESIS reduce using rule 37 (comparators -> DIFFERENT .)
    PLUS            reduce using rule 37 (comparators -> DIFFERENT .)
    MINUS           reduce using rule 37 (comparators -> DIFFERENT .)
    CTEINT          reduce using rule 37 (comparators -> DIFFERENT .)
    CTEFLOAT        reduce using rule 37 (comparators -> DIFFERENT .)
    CTECHAR         reduce using rule 37 (comparators -> DIFFERENT .)
    ID              reduce using rule 37 (comparators -> DIFFERENT .)


state 134

    (38) comparators -> OR .

    LEFTPARENTHESIS reduce using rule 38 (comparators -> OR .)
    PLUS            reduce using rule 38 (comparators -> OR .)
    MINUS           reduce using rule 38 (comparators -> OR .)
    CTEINT          reduce using rule 38 (comparators -> OR .)
    CTEFLOAT        reduce using rule 38 (comparators -> OR .)
    CTECHAR         reduce using rule 38 (comparators -> OR .)
    ID              reduce using rule 38 (comparators -> OR .)


state 135

    (39) comparators -> AND .

    LEFTPARENTHESIS reduce using rule 39 (comparators -> AND .)
    PLUS            reduce using rule 39 (comparators -> AND .)
    MINUS           reduce using rule 39 (comparators -> AND .)
    CTEINT          reduce using rule 39 (comparators -> AND .)
    CTEFLOAT        reduce using rule 39 (comparators -> AND .)
    CTECHAR         reduce using rule 39 (comparators -> AND .)
    ID              reduce using rule 39 (comparators -> AND .)


state 136

    (79) exp -> term exp_operator . exp
    (79) exp -> . term exp_operator exp
    (80) exp -> . term
    (81) term -> . factor term_operator term
    (82) term -> . factor
    (83) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (84) factor -> . exp_operator opt_value
    (85) factor -> . opt_value
    (40) exp_operator -> . PLUS
    (41) exp_operator -> . MINUS
    (86) opt_value -> . CTEINT
    (87) opt_value -> . CTEFLOAT
    (88) opt_value -> . CTECHAR
    (89) opt_value -> . function_call
    (90) opt_value -> . identifier
    (74) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 56

    term                           shift and go to state 94
    exp_operator                   shift and go to state 95
    exp                            shift and go to state 160
    factor                         shift and go to state 96
    opt_value                      shift and go to state 98
    function_call                  shift and go to state 104
    identifier                     shift and go to state 91

state 137

    (84) factor -> exp_operator opt_value .

    MULTIPLY        reduce using rule 84 (factor -> exp_operator opt_value .)
    DIVIDE          reduce using rule 84 (factor -> exp_operator opt_value .)
    MOD             reduce using rule 84 (factor -> exp_operator opt_value .)
    PLUS            reduce using rule 84 (factor -> exp_operator opt_value .)
    MINUS           reduce using rule 84 (factor -> exp_operator opt_value .)
    COMPARISON      reduce using rule 84 (factor -> exp_operator opt_value .)
    GREATERHANOREQUAL reduce using rule 84 (factor -> exp_operator opt_value .)
    LESSTHANOREQUAL reduce using rule 84 (factor -> exp_operator opt_value .)
    GREATERTHAN     reduce using rule 84 (factor -> exp_operator opt_value .)
    LESSTHAN        reduce using rule 84 (factor -> exp_operator opt_value .)
    DIFFERENT       reduce using rule 84 (factor -> exp_operator opt_value .)
    OR              reduce using rule 84 (factor -> exp_operator opt_value .)
    AND             reduce using rule 84 (factor -> exp_operator opt_value .)
    SEMICOLON       reduce using rule 84 (factor -> exp_operator opt_value .)
    COMMA           reduce using rule 84 (factor -> exp_operator opt_value .)
    RIGHTPARENTHESIS reduce using rule 84 (factor -> exp_operator opt_value .)
    RIGHTSQRBRACKET reduce using rule 84 (factor -> exp_operator opt_value .)
    TO              reduce using rule 84 (factor -> exp_operator opt_value .)
    DO              reduce using rule 84 (factor -> exp_operator opt_value .)


state 138

    (81) term -> factor term_operator . term
    (81) term -> . factor term_operator term
    (82) term -> . factor
    (83) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (84) factor -> . exp_operator opt_value
    (85) factor -> . opt_value
    (40) exp_operator -> . PLUS
    (41) exp_operator -> . MINUS
    (86) opt_value -> . CTEINT
    (87) opt_value -> . CTEFLOAT
    (88) opt_value -> . CTECHAR
    (89) opt_value -> . function_call
    (90) opt_value -> . identifier
    (74) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 56

    factor                         shift and go to state 96
    term                           shift and go to state 161
    exp_operator                   shift and go to state 95
    opt_value                      shift and go to state 98
    function_call                  shift and go to state 104
    identifier                     shift and go to state 91

state 139

    (42) term_operator -> MULTIPLY .

    LEFTPARENTHESIS reduce using rule 42 (term_operator -> MULTIPLY .)
    PLUS            reduce using rule 42 (term_operator -> MULTIPLY .)
    MINUS           reduce using rule 42 (term_operator -> MULTIPLY .)
    CTEINT          reduce using rule 42 (term_operator -> MULTIPLY .)
    CTEFLOAT        reduce using rule 42 (term_operator -> MULTIPLY .)
    CTECHAR         reduce using rule 42 (term_operator -> MULTIPLY .)
    ID              reduce using rule 42 (term_operator -> MULTIPLY .)


state 140

    (43) term_operator -> DIVIDE .

    LEFTPARENTHESIS reduce using rule 43 (term_operator -> DIVIDE .)
    PLUS            reduce using rule 43 (term_operator -> DIVIDE .)
    MINUS           reduce using rule 43 (term_operator -> DIVIDE .)
    CTEINT          reduce using rule 43 (term_operator -> DIVIDE .)
    CTEFLOAT        reduce using rule 43 (term_operator -> DIVIDE .)
    CTECHAR         reduce using rule 43 (term_operator -> DIVIDE .)
    ID              reduce using rule 43 (term_operator -> DIVIDE .)


state 141

    (44) term_operator -> MOD .

    LEFTPARENTHESIS reduce using rule 44 (term_operator -> MOD .)
    PLUS            reduce using rule 44 (term_operator -> MOD .)
    MINUS           reduce using rule 44 (term_operator -> MOD .)
    CTEINT          reduce using rule 44 (term_operator -> MOD .)
    CTEFLOAT        reduce using rule 44 (term_operator -> MOD .)
    CTECHAR         reduce using rule 44 (term_operator -> MOD .)
    ID              reduce using rule 44 (term_operator -> MOD .)


state 142

    (83) factor -> LEFTPARENTHESIS expresion . RIGHTPARENTHESIS

    RIGHTPARENTHESIS shift and go to state 162


state 143

    (57) asignation -> identifier PLUSEQUALS expresion SEMICOLON .

    READ            reduce using rule 57 (asignation -> identifier PLUSEQUALS expresion SEMICOLON .)
    WRITE           reduce using rule 57 (asignation -> identifier PLUSEQUALS expresion SEMICOLON .)
    IF              reduce using rule 57 (asignation -> identifier PLUSEQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 57 (asignation -> identifier PLUSEQUALS expresion SEMICOLON .)
    ID              reduce using rule 57 (asignation -> identifier PLUSEQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 57 (asignation -> identifier PLUSEQUALS expresion SEMICOLON .)
    FOR             reduce using rule 57 (asignation -> identifier PLUSEQUALS expresion SEMICOLON .)
    RIGHTBRACKET    reduce using rule 57 (asignation -> identifier PLUSEQUALS expresion SEMICOLON .)


state 144

    (58) asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .

    READ            reduce using rule 58 (asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .)
    WRITE           reduce using rule 58 (asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .)
    IF              reduce using rule 58 (asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 58 (asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .)
    ID              reduce using rule 58 (asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 58 (asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .)
    FOR             reduce using rule 58 (asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .)
    RIGHTBRACKET    reduce using rule 58 (asignation -> identifier SUBSTRACTEQUALS expresion SEMICOLON .)


state 145

    (61) reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 163


state 146

    (16) ids_list -> identifier COMMA . ids_list
    (16) ids_list -> . identifier COMMA ids_list
    (17) ids_list -> . identifier
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    ID              shift and go to state 111

    identifier                     shift and go to state 110
    ids_list                       shift and go to state 164

state 147

    (62) writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 165


state 148

    (63) writing_list -> CTESTRING COMMA . writing_list
    (63) writing_list -> . CTESTRING COMMA writing_list
    (64) writing_list -> . expresion COMMA writing_list
    (65) writing_list -> . CTESTRING
    (66) writing_list -> . expresion
    (77) expresion -> . exp comparators exp
    (78) expresion -> . exp
    (79) exp -> . term exp_operator exp
    (80) exp -> . term
    (81) term -> . factor term_operator term
    (82) term -> . factor
    (83) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (84) factor -> . exp_operator opt_value
    (85) factor -> . opt_value
    (40) exp_operator -> . PLUS
    (41) exp_operator -> . MINUS
    (86) opt_value -> . CTEINT
    (87) opt_value -> . CTEFLOAT
    (88) opt_value -> . CTECHAR
    (89) opt_value -> . function_call
    (90) opt_value -> . identifier
    (74) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    CTESTRING       shift and go to state 113
    LEFTPARENTHESIS shift and go to state 97
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 56

    writing_list                   shift and go to state 166
    expresion                      shift and go to state 114
    exp                            shift and go to state 93
    term                           shift and go to state 94
    exp_operator                   shift and go to state 95
    factor                         shift and go to state 96
    opt_value                      shift and go to state 98
    function_call                  shift and go to state 104
    identifier                     shift and go to state 91

state 149

    (64) writing_list -> expresion COMMA . writing_list
    (63) writing_list -> . CTESTRING COMMA writing_list
    (64) writing_list -> . expresion COMMA writing_list
    (65) writing_list -> . CTESTRING
    (66) writing_list -> . expresion
    (77) expresion -> . exp comparators exp
    (78) expresion -> . exp
    (79) exp -> . term exp_operator exp
    (80) exp -> . term
    (81) term -> . factor term_operator term
    (82) term -> . factor
    (83) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (84) factor -> . exp_operator opt_value
    (85) factor -> . opt_value
    (40) exp_operator -> . PLUS
    (41) exp_operator -> . MINUS
    (86) opt_value -> . CTEINT
    (87) opt_value -> . CTEFLOAT
    (88) opt_value -> . CTECHAR
    (89) opt_value -> . function_call
    (90) opt_value -> . identifier
    (74) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    CTESTRING       shift and go to state 113
    LEFTPARENTHESIS shift and go to state 97
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 56

    expresion                      shift and go to state 114
    writing_list                   shift and go to state 167
    exp                            shift and go to state 93
    term                           shift and go to state 94
    exp_operator                   shift and go to state 95
    factor                         shift and go to state 96
    opt_value                      shift and go to state 98
    function_call                  shift and go to state 104
    identifier                     shift and go to state 91

state 150

    (67) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS . THEN block ELSE block
    (68) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS . THEN block

    THEN            shift and go to state 168


state 151

    (73) function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 169


state 152

    (74) function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .

    SEMICOLON       reduce using rule 74 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    MULTIPLY        reduce using rule 74 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    DIVIDE          reduce using rule 74 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    MOD             reduce using rule 74 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    PLUS            reduce using rule 74 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    MINUS           reduce using rule 74 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    COMPARISON      reduce using rule 74 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    GREATERHANOREQUAL reduce using rule 74 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    LESSTHANOREQUAL reduce using rule 74 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    GREATERTHAN     reduce using rule 74 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    LESSTHAN        reduce using rule 74 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    DIFFERENT       reduce using rule 74 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    OR              reduce using rule 74 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    AND             reduce using rule 74 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    COMMA           reduce using rule 74 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    RIGHTPARENTHESIS reduce using rule 74 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    RIGHTSQRBRACKET reduce using rule 74 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    TO              reduce using rule 74 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)
    DO              reduce using rule 74 (function_call -> ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS .)


state 153

    (75) expresion_list -> expresion COMMA . expresion_list
    (75) expresion_list -> . expresion COMMA expresion_list
    (76) expresion_list -> . expresion
    (77) expresion -> . exp comparators exp
    (78) expresion -> . exp
    (79) exp -> . term exp_operator exp
    (80) exp -> . term
    (81) term -> . factor term_operator term
    (82) term -> . factor
    (83) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (84) factor -> . exp_operator opt_value
    (85) factor -> . opt_value
    (40) exp_operator -> . PLUS
    (41) exp_operator -> . MINUS
    (86) opt_value -> . CTEINT
    (87) opt_value -> . CTEFLOAT
    (88) opt_value -> . CTECHAR
    (89) opt_value -> . function_call
    (90) opt_value -> . identifier
    (74) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 56

    expresion                      shift and go to state 118
    expresion_list                 shift and go to state 170
    exp                            shift and go to state 93
    term                           shift and go to state 94
    exp_operator                   shift and go to state 95
    factor                         shift and go to state 96
    opt_value                      shift and go to state 98
    function_call                  shift and go to state 104
    identifier                     shift and go to state 91

state 154

    (18) identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET . LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .

    LEFTSQRBRACKET  shift and go to state 171
    EQUALS          reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    PLUSEQUALS      reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    SUBSTRACTEQUALS reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    INCREMENT       reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DECREMENT       reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MULTIPLY        reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DIVIDE          reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MOD             reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    PLUS            reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MINUS           reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    COMPARISON      reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    GREATERHANOREQUAL reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    LESSTHANOREQUAL reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    GREATERTHAN     reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    LESSTHAN        reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DIFFERENT       reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    OR              reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    AND             reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    SEMICOLON       reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    COMMA           reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    RIGHTPARENTHESIS reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    RIGHTSQRBRACKET reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    TO              reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DO              reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)


state 155

    (71) conditional -> WHILE LEFTPARENTHESIS expresion RIGHTPARENTHESIS . DO

    DO              shift and go to state 172


state 156

    (72) non_conditional -> FOR ID EQUALS exp . TO exp DO

    TO              shift and go to state 173


state 157

    (13) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT . RIGHTSQRBRACKET

    RIGHTSQRBRACKET shift and go to state 174


state 158

    (29) parameter -> data_type decla_identifier COMMA . parameter
    (29) parameter -> . data_type decla_identifier COMMA parameter
    (30) parameter -> . data_type decla_identifier
    (4) data_type -> . INT
    (5) data_type -> . FLOAT
    (6) data_type -> . CHAR

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 15

    data_type                      shift and go to state 90
    parameter                      shift and go to state 175

state 159

    (77) expresion -> exp comparators exp .

    SEMICOLON       reduce using rule 77 (expresion -> exp comparators exp .)
    COMMA           reduce using rule 77 (expresion -> exp comparators exp .)
    RIGHTPARENTHESIS reduce using rule 77 (expresion -> exp comparators exp .)
    RIGHTSQRBRACKET reduce using rule 77 (expresion -> exp comparators exp .)


state 160

    (79) exp -> term exp_operator exp .

    COMPARISON      reduce using rule 79 (exp -> term exp_operator exp .)
    GREATERHANOREQUAL reduce using rule 79 (exp -> term exp_operator exp .)
    LESSTHANOREQUAL reduce using rule 79 (exp -> term exp_operator exp .)
    GREATERTHAN     reduce using rule 79 (exp -> term exp_operator exp .)
    LESSTHAN        reduce using rule 79 (exp -> term exp_operator exp .)
    DIFFERENT       reduce using rule 79 (exp -> term exp_operator exp .)
    OR              reduce using rule 79 (exp -> term exp_operator exp .)
    AND             reduce using rule 79 (exp -> term exp_operator exp .)
    SEMICOLON       reduce using rule 79 (exp -> term exp_operator exp .)
    COMMA           reduce using rule 79 (exp -> term exp_operator exp .)
    RIGHTPARENTHESIS reduce using rule 79 (exp -> term exp_operator exp .)
    RIGHTSQRBRACKET reduce using rule 79 (exp -> term exp_operator exp .)
    TO              reduce using rule 79 (exp -> term exp_operator exp .)
    DO              reduce using rule 79 (exp -> term exp_operator exp .)


state 161

    (81) term -> factor term_operator term .

    PLUS            reduce using rule 81 (term -> factor term_operator term .)
    MINUS           reduce using rule 81 (term -> factor term_operator term .)
    COMPARISON      reduce using rule 81 (term -> factor term_operator term .)
    GREATERHANOREQUAL reduce using rule 81 (term -> factor term_operator term .)
    LESSTHANOREQUAL reduce using rule 81 (term -> factor term_operator term .)
    GREATERTHAN     reduce using rule 81 (term -> factor term_operator term .)
    LESSTHAN        reduce using rule 81 (term -> factor term_operator term .)
    DIFFERENT       reduce using rule 81 (term -> factor term_operator term .)
    OR              reduce using rule 81 (term -> factor term_operator term .)
    AND             reduce using rule 81 (term -> factor term_operator term .)
    SEMICOLON       reduce using rule 81 (term -> factor term_operator term .)
    COMMA           reduce using rule 81 (term -> factor term_operator term .)
    RIGHTPARENTHESIS reduce using rule 81 (term -> factor term_operator term .)
    RIGHTSQRBRACKET reduce using rule 81 (term -> factor term_operator term .)
    TO              reduce using rule 81 (term -> factor term_operator term .)
    DO              reduce using rule 81 (term -> factor term_operator term .)


state 162

    (83) factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .

    MULTIPLY        reduce using rule 83 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    DIVIDE          reduce using rule 83 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    MOD             reduce using rule 83 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    PLUS            reduce using rule 83 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    MINUS           reduce using rule 83 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    COMPARISON      reduce using rule 83 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    GREATERHANOREQUAL reduce using rule 83 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    LESSTHANOREQUAL reduce using rule 83 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    GREATERTHAN     reduce using rule 83 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    LESSTHAN        reduce using rule 83 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    DIFFERENT       reduce using rule 83 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    OR              reduce using rule 83 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    AND             reduce using rule 83 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    SEMICOLON       reduce using rule 83 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    COMMA           reduce using rule 83 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    RIGHTPARENTHESIS reduce using rule 83 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    RIGHTSQRBRACKET reduce using rule 83 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    TO              reduce using rule 83 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)
    DO              reduce using rule 83 (factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS .)


state 163

    (61) reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .

    READ            reduce using rule 61 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    WRITE           reduce using rule 61 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    IF              reduce using rule 61 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 61 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    ID              reduce using rule 61 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 61 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    FOR             reduce using rule 61 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 61 (reading -> READ LEFTPARENTHESIS ids_list RIGHTPARENTHESIS SEMICOLON .)


state 164

    (16) ids_list -> identifier COMMA ids_list .

    RIGHTPARENTHESIS reduce using rule 16 (ids_list -> identifier COMMA ids_list .)


state 165

    (62) writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .

    READ            reduce using rule 62 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    WRITE           reduce using rule 62 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    IF              reduce using rule 62 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 62 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    ID              reduce using rule 62 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 62 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    FOR             reduce using rule 62 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 62 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)


state 166

    (63) writing_list -> CTESTRING COMMA writing_list .

    RIGHTPARENTHESIS reduce using rule 63 (writing_list -> CTESTRING COMMA writing_list .)


state 167

    (64) writing_list -> expresion COMMA writing_list .

    RIGHTPARENTHESIS reduce using rule 64 (writing_list -> expresion COMMA writing_list .)


state 168

    (67) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN . block ELSE block
    (68) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN . block
    (45) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (46) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 32

    block                          shift and go to state 176

state 169

    (73) function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .

    READ            reduce using rule 73 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    WRITE           reduce using rule 73 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    IF              reduce using rule 73 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 73 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    ID              reduce using rule 73 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 73 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    FOR             reduce using rule 73 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 73 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)


state 170

    (75) expresion_list -> expresion COMMA expresion_list .

    RIGHTPARENTHESIS reduce using rule 75 (expresion_list -> expresion COMMA expresion_list .)


state 171

    (18) identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET . expresion RIGHTSQRBRACKET
    (77) expresion -> . exp comparators exp
    (78) expresion -> . exp
    (79) exp -> . term exp_operator exp
    (80) exp -> . term
    (81) term -> . factor term_operator term
    (82) term -> . factor
    (83) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (84) factor -> . exp_operator opt_value
    (85) factor -> . opt_value
    (40) exp_operator -> . PLUS
    (41) exp_operator -> . MINUS
    (86) opt_value -> . CTEINT
    (87) opt_value -> . CTEFLOAT
    (88) opt_value -> . CTECHAR
    (89) opt_value -> . function_call
    (90) opt_value -> . identifier
    (74) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 56

    expresion                      shift and go to state 177
    exp                            shift and go to state 93
    term                           shift and go to state 94
    exp_operator                   shift and go to state 95
    factor                         shift and go to state 96
    opt_value                      shift and go to state 98
    function_call                  shift and go to state 104
    identifier                     shift and go to state 91

state 172

    (71) conditional -> WHILE LEFTPARENTHESIS expresion RIGHTPARENTHESIS DO .

    LEFTBRACKET     reduce using rule 71 (conditional -> WHILE LEFTPARENTHESIS expresion RIGHTPARENTHESIS DO .)


state 173

    (72) non_conditional -> FOR ID EQUALS exp TO . exp DO
    (79) exp -> . term exp_operator exp
    (80) exp -> . term
    (81) term -> . factor term_operator term
    (82) term -> . factor
    (83) factor -> . LEFTPARENTHESIS expresion RIGHTPARENTHESIS
    (84) factor -> . exp_operator opt_value
    (85) factor -> . opt_value
    (40) exp_operator -> . PLUS
    (41) exp_operator -> . MINUS
    (86) opt_value -> . CTEINT
    (87) opt_value -> . CTEFLOAT
    (88) opt_value -> . CTECHAR
    (89) opt_value -> . function_call
    (90) opt_value -> . identifier
    (74) function_call -> . ID LEFTPARENTHESIS expresion_list RIGHTPARENTHESIS
    (18) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 97
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    CTEINT          shift and go to state 101
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 103
    ID              shift and go to state 56

    exp                            shift and go to state 178
    term                           shift and go to state 94
    exp_operator                   shift and go to state 95
    factor                         shift and go to state 96
    opt_value                      shift and go to state 98
    function_call                  shift and go to state 104
    identifier                     shift and go to state 91

state 174

    (13) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .

    COMMA           reduce using rule 13 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)
    SEMICOLON       reduce using rule 13 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)
    RIGHTPARENTHESIS reduce using rule 13 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)


state 175

    (29) parameter -> data_type decla_identifier COMMA parameter .

    RIGHTPARENTHESIS reduce using rule 29 (parameter -> data_type decla_identifier COMMA parameter .)


state 176

    (67) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block . ELSE block
    (68) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .

    ELSE            shift and go to state 179
    READ            reduce using rule 68 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .)
    WRITE           reduce using rule 68 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .)
    IF              reduce using rule 68 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .)
    RETURN          reduce using rule 68 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .)
    ID              reduce using rule 68 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .)
    WHILE           reduce using rule 68 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .)
    FOR             reduce using rule 68 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .)
    RIGHTBRACKET    reduce using rule 68 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block .)


state 177

    (18) identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion . RIGHTSQRBRACKET

    RIGHTSQRBRACKET shift and go to state 180


state 178

    (72) non_conditional -> FOR ID EQUALS exp TO exp . DO

    DO              shift and go to state 181


state 179

    (67) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE . block
    (45) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (46) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 32

    block                          shift and go to state 182

state 180

    (18) identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .

    EQUALS          reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    PLUSEQUALS      reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    SUBSTRACTEQUALS reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    INCREMENT       reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DECREMENT       reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MULTIPLY        reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DIVIDE          reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MOD             reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    PLUS            reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MINUS           reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    COMPARISON      reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    GREATERHANOREQUAL reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    LESSTHANOREQUAL reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    GREATERTHAN     reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    LESSTHAN        reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DIFFERENT       reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    OR              reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    AND             reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    SEMICOLON       reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    COMMA           reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    RIGHTPARENTHESIS reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    RIGHTSQRBRACKET reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    TO              reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DO              reduce using rule 18 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)


state 181

    (72) non_conditional -> FOR ID EQUALS exp TO exp DO .

    LEFTBRACKET     reduce using rule 72 (non_conditional -> FOR ID EQUALS exp TO exp DO .)


state 182

    (67) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .

    READ            reduce using rule 67 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .)
    WRITE           reduce using rule 67 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .)
    IF              reduce using rule 67 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .)
    RETURN          reduce using rule 67 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .)
    ID              reduce using rule 67 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .)
    WHILE           reduce using rule 67 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .)
    FOR             reduce using rule 67 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .)
    RIGHTBRACKET    reduce using rule 67 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS THEN block ELSE block .)

