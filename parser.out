Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON neupoint_goto_main vars functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
Rule 2     program -> PROGRAM ID SEMICOLON neupoint_goto_main vars MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
Rule 3     program -> PROGRAM ID SEMICOLON neupoint_goto_main functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
Rule 4     program -> PROGRAM ID SEMICOLON neupoint_goto_main MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
Rule 5     neupoint_goto_main -> <empty>
Rule 6     neupoint_fill_goto_main -> <empty>
Rule 7     neupoint_end -> <empty>
Rule 8     data_type -> INT
Rule 9     data_type -> FLOAT
Rule 10    data_type -> CHAR
Rule 11    vars -> VAR vars_lists neupoint_add_vars
Rule 12    vars_lists -> data_type decla_ids_list SEMICOLON vars_lists
Rule 13    vars_lists -> data_type decla_ids_list SEMICOLON
Rule 14    decla_ids_list -> decla_identifier COMMA decla_ids_list
Rule 15    decla_ids_list -> decla_identifier
Rule 16    decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
Rule 17    decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
Rule 18    decla_identifier -> ID
Rule 19    identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
Rule 20    identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
Rule 21    identifier -> ID neupoint_add_identifier
Rule 22    neupoint_add_vars -> <empty>
Rule 23    neupoint_add_identifier -> <empty>
Rule 24    neupoint_index_array -> <empty>
Rule 25    neupoint_index_matrix -> <empty>
Rule 26    neupoint_update_array_addr -> <empty>
Rule 27    neupoint_update_matrix_addr -> <empty>
Rule 28    return_type -> data_type
Rule 29    return_type -> VOID
Rule 30    functions_list -> function functions_list
Rule 31    functions_list -> function
Rule 32    function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
Rule 33    function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function
Rule 34    parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS neupoint_add_parameters
Rule 35    parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS
Rule 36    parameter -> data_type decla_identifier COMMA parameter
Rule 37    parameter -> data_type decla_identifier
Rule 38    neupoint_add_function -> <empty>
Rule 39    neupoint_add_parameters -> <empty>
Rule 40    neupoint_start_function -> <empty>
Rule 41    neupoint_check_for_return -> <empty>
Rule 42    neupoint_end_function -> <empty>
Rule 43    comparators -> COMPARISON
Rule 44    comparators -> GREATERHANOREQUAL
Rule 45    comparators -> LESSTHANOREQUAL
Rule 46    comparators -> GREATERTHAN
Rule 47    comparators -> LESSTHAN
Rule 48    comparators -> DIFFERENT
Rule 49    exp_operator -> PLUS
Rule 50    exp_operator -> MINUS
Rule 51    term_operator -> MULTIPLY
Rule 52    term_operator -> DIVIDE
Rule 53    term_operator -> MOD
Rule 54    block -> LEFTBRACKET statutes_list RIGHTBRACKET
Rule 55    block -> LEFTBRACKET RIGHTBRACKET
Rule 56    statutes_list -> statute statutes_list
Rule 57    statutes_list -> statute
Rule 58    statute -> assignment
Rule 59    statute -> function_return
Rule 60    statute -> reading
Rule 61    statute -> writing
Rule 62    statute -> decision
Rule 63    statute -> loop
Rule 64    statute -> function_call_void
Rule 65    assignment -> identifier EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
Rule 66    assignment -> identifier PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
Rule 67    assignment -> identifier SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
Rule 68    assignment -> identifier INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
Rule 69    assignment -> identifier DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
Rule 70    reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON
Rule 71    reading_list -> identifier COMMA reading_list
Rule 72    reading_list -> identifier
Rule 73    writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON
Rule 74    writing_list -> CTESTRING neupoint_add_cte_operand neupoint_write_quad COMMA writing_list
Rule 75    writing_list -> expresion neupoint_write_quad COMMA writing_list
Rule 76    writing_list -> CTESTRING neupoint_add_cte_operand neupoint_write_quad
Rule 77    writing_list -> expresion neupoint_write_quad
Rule 78    decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
Rule 79    decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad
Rule 80    loop -> conditional
Rule 81    loop -> non_conditional
Rule 82    conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end
Rule 83    non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end
Rule 84    function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON
Rule 85    function_call_void -> function_call SEMICOLON
Rule 86    function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
Rule 87    function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
Rule 88    ags_list -> expresion neupoint_validate_args COMMA ags_list
Rule 89    ags_list -> expresion neupoint_validate_args
Rule 90    expresion -> exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
Rule 91    expresion -> exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
Rule 92    expresion -> exp_relational
Rule 93    exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
Rule 94    exp_relational -> exp
Rule 95    exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
Rule 96    exp -> term neupoint_arithmetic_exp_quad
Rule 97    term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
Rule 98    term -> factor neupoint_arithmetic_term_quad
Rule 99    factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
Rule 100   factor -> CTEINT neupoint_add_cte_operand
Rule 101   factor -> CTEFLOAT neupoint_add_cte_operand
Rule 102   factor -> CTECHAR neupoint_add_cte_operand
Rule 103   factor -> function_call
Rule 104   factor -> identifier
Rule 105   neupoint_add_operator -> <empty>
Rule 106   neupoint_add_cte_operand -> <empty>
Rule 107   neupoint_arithmetic_exp_quad -> <empty>
Rule 108   neupoint_arithmetic_term_quad -> <empty>
Rule 109   neupoint_add_wall -> <empty>
Rule 110   neupoint_remove_wall -> <empty>
Rule 111   neupoint_assignment_quad -> <empty>
Rule 112   neupoint_assignment_single_quad -> <empty>
Rule 113   neupoint_logical_relational_opt -> <empty>
Rule 114   neupoint_conditional_quad -> <empty>
Rule 115   neupoint_else_conditional_quad -> <empty>
Rule 116   neupoint_end_conditional_quad -> <empty>
Rule 117   neupoint_while_start -> <empty>
Rule 118   neupoint_while_end -> <empty>
Rule 119   neupoint_validate_function -> <empty>
Rule 120   neupoint_era_quad -> <empty>
Rule 121   neupoint_validate_args -> <empty>
Rule 122   neupoint_validate_num_args -> <empty>
Rule 123   neupoint_gosub_quad -> <empty>
Rule 124   neupoint_write_quad -> <empty>
Rule 125   neupoint_add_operand_integer -> <empty>
Rule 126   neupoint_add_operand_for -> <empty>
Rule 127   neupoint_comparison_quad -> <empty>
Rule 128   neupoint_for_end -> <empty>

Terminals, with rules where they appear

AND                  : 90
CHAR                 : 10
COMMA                : 14 36 71 74 75 88
COMPARISON           : 43
CTECHAR              : 102
CTEFLOAT             : 101
CTEINT               : 16 16 17 100
CTESTRING            : 74 76
DECREMENT            : 69
DIFFERENT            : 48
DIVIDE               : 52
DO                   : 82 83
ELSE                 : 78
EQUALS               : 65 83
FLOAT                : 9
FOR                  : 83
GREATERHANOREQUAL    : 44
GREATERTHAN          : 46
ID                   : 1 2 3 4 16 17 18 19 20 21 32 33 83 86 87
IF                   : 78 79
INCREMENT            : 68
INT                  : 8
LEFTBRACKET          : 54 55
LEFTPARENTHESIS      : 1 2 3 4 34 35 70 73 78 79 82 84 86 87 99
LEFTSQRBRACKET       : 16 16 17 19 19 20
LESSTHAN             : 47
LESSTHANOREQUAL      : 45
MAIN                 : 1 2 3 4
MINUS                : 50
MOD                  : 53
MODULE               : 32 33
MULTIPLY             : 51
OR                   : 91
PLUS                 : 49
PLUSEQUALS           : 66
PROGRAM              : 1 2 3 4
READ                 : 70
RETURN               : 84
RIGHTBRACKET         : 54 55
RIGHTPARENTHESIS     : 1 2 3 4 34 35 70 73 78 79 82 84 86 87 99
RIGHTSQRBRACKET      : 16 16 17 19 19 20
SEMICOLON            : 1 2 3 4 12 13 65 66 67 68 69 70 73 84 85
SUBSTRACTEQUALS      : 67
THEN                 : 78 79
TO                   : 83
VAR                  : 11
VOID                 : 29
WHILE                : 82
WRITE                : 73
error                : 

Nonterminals, with rules where they appear

ags_list             : 86 88
assignment           : 58
block                : 1 2 3 4 32 33 78 78 79 82 83
comparators          : 93
conditional          : 80
data_type            : 12 13 28 36 37
decision             : 62
decla_identifier     : 14 15 36 37
decla_ids_list       : 12 13 14
exp                  : 19 19 20 83 83 84 93 93 94 95
exp_operator         : 95
exp_relational       : 90 91 92
expresion            : 65 66 67 75 77 78 79 82 88 89 90 91 99
factor               : 97 98
function             : 30 31
function_call        : 85 103
function_call_void   : 64
function_return      : 59
functions_list       : 1 3 30
identifier           : 65 66 67 68 69 71 72 104
loop                 : 63
neupoint_add_cte_operand : 74 76 100 101 102
neupoint_add_function : 32 33
neupoint_add_identifier : 19 20 21
neupoint_add_operand_for : 83
neupoint_add_operand_integer : 83
neupoint_add_operator : 65 66 67 68 69 83 90 91 93 95 97
neupoint_add_parameters : 34
neupoint_add_vars    : 11
neupoint_add_wall    : 86 87 99
neupoint_arithmetic_exp_quad : 95 96
neupoint_arithmetic_term_quad : 97 98
neupoint_assignment_quad : 65 66 67 83
neupoint_assignment_single_quad : 68 69
neupoint_check_for_return : 32 33
neupoint_comparison_quad : 83
neupoint_conditional_quad : 78 79 82
neupoint_else_conditional_quad : 78
neupoint_end         : 1 2 3 4
neupoint_end_conditional_quad : 78 79
neupoint_end_function : 32 33
neupoint_era_quad    : 86 87
neupoint_fill_goto_main : 1 2 3 4
neupoint_for_end     : 83
neupoint_gosub_quad  : 86 87
neupoint_goto_main   : 1 2 3 4
neupoint_index_array : 19 20
neupoint_index_matrix : 19
neupoint_logical_relational_opt : 90 91 93
neupoint_remove_wall : 19 19 20 99
neupoint_start_function : 32 33
neupoint_update_array_addr : 20
neupoint_update_matrix_addr : 19
neupoint_validate_args : 88 89
neupoint_validate_function : 86 87
neupoint_validate_num_args : 86 87
neupoint_while_end   : 82
neupoint_while_start : 82
neupoint_write_quad  : 74 75 76 77
non_conditional      : 81
parameter            : 34 36
parameters_list      : 32 33
program              : 0
reading              : 60
reading_list         : 70 71
return_type          : 32 33
statute              : 56 57
statutes_list        : 54 56
term                 : 95 96 97
term_operator        : 97
vars                 : 1 2 32
vars_lists           : 11 12
writing              : 61
writing_list         : 73 74 75

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON neupoint_goto_main vars functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (2) program -> . PROGRAM ID SEMICOLON neupoint_goto_main vars MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (3) program -> . PROGRAM ID SEMICOLON neupoint_goto_main functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (4) program -> . PROGRAM ID SEMICOLON neupoint_goto_main MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON neupoint_goto_main vars functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (2) program -> PROGRAM . ID SEMICOLON neupoint_goto_main vars MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (3) program -> PROGRAM . ID SEMICOLON neupoint_goto_main functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (4) program -> PROGRAM . ID SEMICOLON neupoint_goto_main MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON neupoint_goto_main vars functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (2) program -> PROGRAM ID . SEMICOLON neupoint_goto_main vars MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (3) program -> PROGRAM ID . SEMICOLON neupoint_goto_main functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (4) program -> PROGRAM ID . SEMICOLON neupoint_goto_main MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . neupoint_goto_main vars functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (2) program -> PROGRAM ID SEMICOLON . neupoint_goto_main vars MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (3) program -> PROGRAM ID SEMICOLON . neupoint_goto_main functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (4) program -> PROGRAM ID SEMICOLON . neupoint_goto_main MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (5) neupoint_goto_main -> .

    MAIN            reduce using rule 5 (neupoint_goto_main -> .)
    VAR             reduce using rule 5 (neupoint_goto_main -> .)
    MODULE          reduce using rule 5 (neupoint_goto_main -> .)

    neupoint_goto_main             shift and go to state 5

state 5

    (1) program -> PROGRAM ID SEMICOLON neupoint_goto_main . vars functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (2) program -> PROGRAM ID SEMICOLON neupoint_goto_main . vars MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (3) program -> PROGRAM ID SEMICOLON neupoint_goto_main . functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (4) program -> PROGRAM ID SEMICOLON neupoint_goto_main . MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (11) vars -> . VAR vars_lists neupoint_add_vars
    (30) functions_list -> . function functions_list
    (31) functions_list -> . function
    (32) function -> . MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (33) function -> . MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function

    MAIN            shift and go to state 8
    VAR             shift and go to state 9
    MODULE          shift and go to state 11

    vars                           shift and go to state 6
    functions_list                 shift and go to state 7
    function                       shift and go to state 10

state 6

    (1) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars . functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (2) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars . MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (30) functions_list -> . function functions_list
    (31) functions_list -> . function
    (32) function -> . MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (33) function -> . MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function

    MAIN            shift and go to state 13
    MODULE          shift and go to state 11

    functions_list                 shift and go to state 12
    function                       shift and go to state 10

state 7

    (3) program -> PROGRAM ID SEMICOLON neupoint_goto_main functions_list . MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end

    MAIN            shift and go to state 14


state 8

    (4) program -> PROGRAM ID SEMICOLON neupoint_goto_main MAIN . neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (6) neupoint_fill_goto_main -> .

    LEFTPARENTHESIS reduce using rule 6 (neupoint_fill_goto_main -> .)

    neupoint_fill_goto_main        shift and go to state 15

state 9

    (11) vars -> VAR . vars_lists neupoint_add_vars
    (12) vars_lists -> . data_type decla_ids_list SEMICOLON vars_lists
    (13) vars_lists -> . data_type decla_ids_list SEMICOLON
    (8) data_type -> . INT
    (9) data_type -> . FLOAT
    (10) data_type -> . CHAR

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    vars_lists                     shift and go to state 16
    data_type                      shift and go to state 17

state 10

    (30) functions_list -> function . functions_list
    (31) functions_list -> function .
    (30) functions_list -> . function functions_list
    (31) functions_list -> . function
    (32) function -> . MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (33) function -> . MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function

    MAIN            reduce using rule 31 (functions_list -> function .)
    MODULE          shift and go to state 11

    function                       shift and go to state 10
    functions_list                 shift and go to state 21

state 11

    (32) function -> MODULE . return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (33) function -> MODULE . return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (28) return_type -> . data_type
    (29) return_type -> . VOID
    (8) data_type -> . INT
    (9) data_type -> . FLOAT
    (10) data_type -> . CHAR

    VOID            shift and go to state 24
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    return_type                    shift and go to state 22
    data_type                      shift and go to state 23

state 12

    (1) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars functions_list . MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end

    MAIN            shift and go to state 25


state 13

    (2) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars MAIN . neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (6) neupoint_fill_goto_main -> .

    LEFTPARENTHESIS reduce using rule 6 (neupoint_fill_goto_main -> .)

    neupoint_fill_goto_main        shift and go to state 26

state 14

    (3) program -> PROGRAM ID SEMICOLON neupoint_goto_main functions_list MAIN . neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (6) neupoint_fill_goto_main -> .

    LEFTPARENTHESIS reduce using rule 6 (neupoint_fill_goto_main -> .)

    neupoint_fill_goto_main        shift and go to state 27

state 15

    (4) program -> PROGRAM ID SEMICOLON neupoint_goto_main MAIN neupoint_fill_goto_main . LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end

    LEFTPARENTHESIS shift and go to state 28


state 16

    (11) vars -> VAR vars_lists . neupoint_add_vars
    (22) neupoint_add_vars -> .

    MAIN            reduce using rule 22 (neupoint_add_vars -> .)
    MODULE          reduce using rule 22 (neupoint_add_vars -> .)
    LEFTBRACKET     reduce using rule 22 (neupoint_add_vars -> .)

    neupoint_add_vars              shift and go to state 29

state 17

    (12) vars_lists -> data_type . decla_ids_list SEMICOLON vars_lists
    (13) vars_lists -> data_type . decla_ids_list SEMICOLON
    (14) decla_ids_list -> . decla_identifier COMMA decla_ids_list
    (15) decla_ids_list -> . decla_identifier
    (16) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (17) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (18) decla_identifier -> . ID

    ID              shift and go to state 32

    decla_ids_list                 shift and go to state 30
    decla_identifier               shift and go to state 31

state 18

    (8) data_type -> INT .

    ID              reduce using rule 8 (data_type -> INT .)


state 19

    (9) data_type -> FLOAT .

    ID              reduce using rule 9 (data_type -> FLOAT .)


state 20

    (10) data_type -> CHAR .

    ID              reduce using rule 10 (data_type -> CHAR .)


state 21

    (30) functions_list -> function functions_list .

    MAIN            reduce using rule 30 (functions_list -> function functions_list .)


state 22

    (32) function -> MODULE return_type . ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (33) function -> MODULE return_type . ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function

    ID              shift and go to state 33


state 23

    (28) return_type -> data_type .

    ID              reduce using rule 28 (return_type -> data_type .)


state 24

    (29) return_type -> VOID .

    ID              reduce using rule 29 (return_type -> VOID .)


state 25

    (1) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars functions_list MAIN . neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (6) neupoint_fill_goto_main -> .

    LEFTPARENTHESIS reduce using rule 6 (neupoint_fill_goto_main -> .)

    neupoint_fill_goto_main        shift and go to state 34

state 26

    (2) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars MAIN neupoint_fill_goto_main . LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end

    LEFTPARENTHESIS shift and go to state 35


state 27

    (3) program -> PROGRAM ID SEMICOLON neupoint_goto_main functions_list MAIN neupoint_fill_goto_main . LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end

    LEFTPARENTHESIS shift and go to state 36


state 28

    (4) program -> PROGRAM ID SEMICOLON neupoint_goto_main MAIN neupoint_fill_goto_main LEFTPARENTHESIS . RIGHTPARENTHESIS block neupoint_end

    RIGHTPARENTHESIS shift and go to state 37


state 29

    (11) vars -> VAR vars_lists neupoint_add_vars .

    MAIN            reduce using rule 11 (vars -> VAR vars_lists neupoint_add_vars .)
    MODULE          reduce using rule 11 (vars -> VAR vars_lists neupoint_add_vars .)
    LEFTBRACKET     reduce using rule 11 (vars -> VAR vars_lists neupoint_add_vars .)


state 30

    (12) vars_lists -> data_type decla_ids_list . SEMICOLON vars_lists
    (13) vars_lists -> data_type decla_ids_list . SEMICOLON

    SEMICOLON       shift and go to state 38


state 31

    (14) decla_ids_list -> decla_identifier . COMMA decla_ids_list
    (15) decla_ids_list -> decla_identifier .

    COMMA           shift and go to state 39
    SEMICOLON       reduce using rule 15 (decla_ids_list -> decla_identifier .)


state 32

    (16) decla_identifier -> ID . LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (17) decla_identifier -> ID . LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (18) decla_identifier -> ID .

    LEFTSQRBRACKET  shift and go to state 40
    COMMA           reduce using rule 18 (decla_identifier -> ID .)
    SEMICOLON       reduce using rule 18 (decla_identifier -> ID .)
    RIGHTPARENTHESIS reduce using rule 18 (decla_identifier -> ID .)


state 33

    (32) function -> MODULE return_type ID . neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (33) function -> MODULE return_type ID . neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (38) neupoint_add_function -> .

    LEFTPARENTHESIS reduce using rule 38 (neupoint_add_function -> .)

    neupoint_add_function          shift and go to state 41

state 34

    (1) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars functions_list MAIN neupoint_fill_goto_main . LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end

    LEFTPARENTHESIS shift and go to state 42


state 35

    (2) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars MAIN neupoint_fill_goto_main LEFTPARENTHESIS . RIGHTPARENTHESIS block neupoint_end

    RIGHTPARENTHESIS shift and go to state 43


state 36

    (3) program -> PROGRAM ID SEMICOLON neupoint_goto_main functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS . RIGHTPARENTHESIS block neupoint_end

    RIGHTPARENTHESIS shift and go to state 44


state 37

    (4) program -> PROGRAM ID SEMICOLON neupoint_goto_main MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS . block neupoint_end
    (54) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (55) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 46

    block                          shift and go to state 45

state 38

    (12) vars_lists -> data_type decla_ids_list SEMICOLON . vars_lists
    (13) vars_lists -> data_type decla_ids_list SEMICOLON .
    (12) vars_lists -> . data_type decla_ids_list SEMICOLON vars_lists
    (13) vars_lists -> . data_type decla_ids_list SEMICOLON
    (8) data_type -> . INT
    (9) data_type -> . FLOAT
    (10) data_type -> . CHAR

    MAIN            reduce using rule 13 (vars_lists -> data_type decla_ids_list SEMICOLON .)
    MODULE          reduce using rule 13 (vars_lists -> data_type decla_ids_list SEMICOLON .)
    LEFTBRACKET     reduce using rule 13 (vars_lists -> data_type decla_ids_list SEMICOLON .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    data_type                      shift and go to state 17
    vars_lists                     shift and go to state 47

state 39

    (14) decla_ids_list -> decla_identifier COMMA . decla_ids_list
    (14) decla_ids_list -> . decla_identifier COMMA decla_ids_list
    (15) decla_ids_list -> . decla_identifier
    (16) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (17) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (18) decla_identifier -> . ID

    ID              shift and go to state 32

    decla_identifier               shift and go to state 31
    decla_ids_list                 shift and go to state 48

state 40

    (16) decla_identifier -> ID LEFTSQRBRACKET . CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (17) decla_identifier -> ID LEFTSQRBRACKET . CTEINT RIGHTSQRBRACKET

    CTEINT          shift and go to state 49


state 41

    (32) function -> MODULE return_type ID neupoint_add_function . parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (33) function -> MODULE return_type ID neupoint_add_function . parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (34) parameters_list -> . LEFTPARENTHESIS parameter RIGHTPARENTHESIS neupoint_add_parameters
    (35) parameters_list -> . LEFTPARENTHESIS RIGHTPARENTHESIS

    LEFTPARENTHESIS shift and go to state 51

    parameters_list                shift and go to state 50

state 42

    (1) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS . RIGHTPARENTHESIS block neupoint_end

    RIGHTPARENTHESIS shift and go to state 52


state 43

    (2) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS . block neupoint_end
    (54) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (55) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 46

    block                          shift and go to state 53

state 44

    (3) program -> PROGRAM ID SEMICOLON neupoint_goto_main functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS . block neupoint_end
    (54) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (55) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 46

    block                          shift and go to state 54

state 45

    (4) program -> PROGRAM ID SEMICOLON neupoint_goto_main MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block . neupoint_end
    (7) neupoint_end -> .

    $end            reduce using rule 7 (neupoint_end -> .)

    neupoint_end                   shift and go to state 55

state 46

    (54) block -> LEFTBRACKET . statutes_list RIGHTBRACKET
    (55) block -> LEFTBRACKET . RIGHTBRACKET
    (56) statutes_list -> . statute statutes_list
    (57) statutes_list -> . statute
    (58) statute -> . assignment
    (59) statute -> . function_return
    (60) statute -> . reading
    (61) statute -> . writing
    (62) statute -> . decision
    (63) statute -> . loop
    (64) statute -> . function_call_void
    (65) assignment -> . identifier EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (66) assignment -> . identifier PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (67) assignment -> . identifier SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (68) assignment -> . identifier INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (69) assignment -> . identifier DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (84) function_return -> . RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON
    (70) reading -> . READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON
    (73) writing -> . WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON
    (78) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (79) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad
    (80) loop -> . conditional
    (81) loop -> . non_conditional
    (85) function_call_void -> . function_call SEMICOLON
    (19) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> . ID neupoint_add_identifier
    (82) conditional -> . WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end
    (83) non_conditional -> . FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end
    (86) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad

    RIGHTBRACKET    shift and go to state 57
    RETURN          shift and go to state 67
    READ            shift and go to state 68
    WRITE           shift and go to state 69
    IF              shift and go to state 70
    ID              shift and go to state 74
    WHILE           shift and go to state 75
    FOR             shift and go to state 76

    statutes_list                  shift and go to state 56
    statute                        shift and go to state 58
    assignment                     shift and go to state 59
    function_return                shift and go to state 60
    reading                        shift and go to state 61
    writing                        shift and go to state 62
    decision                       shift and go to state 63
    loop                           shift and go to state 64
    function_call_void             shift and go to state 65
    identifier                     shift and go to state 66
    conditional                    shift and go to state 71
    non_conditional                shift and go to state 72
    function_call                  shift and go to state 73

state 47

    (12) vars_lists -> data_type decla_ids_list SEMICOLON vars_lists .

    MAIN            reduce using rule 12 (vars_lists -> data_type decla_ids_list SEMICOLON vars_lists .)
    MODULE          reduce using rule 12 (vars_lists -> data_type decla_ids_list SEMICOLON vars_lists .)
    LEFTBRACKET     reduce using rule 12 (vars_lists -> data_type decla_ids_list SEMICOLON vars_lists .)


state 48

    (14) decla_ids_list -> decla_identifier COMMA decla_ids_list .

    SEMICOLON       reduce using rule 14 (decla_ids_list -> decla_identifier COMMA decla_ids_list .)


state 49

    (16) decla_identifier -> ID LEFTSQRBRACKET CTEINT . RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (17) decla_identifier -> ID LEFTSQRBRACKET CTEINT . RIGHTSQRBRACKET

    RIGHTSQRBRACKET shift and go to state 77


state 50

    (32) function -> MODULE return_type ID neupoint_add_function parameters_list . vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (33) function -> MODULE return_type ID neupoint_add_function parameters_list . neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (11) vars -> . VAR vars_lists neupoint_add_vars
    (40) neupoint_start_function -> .

    VAR             shift and go to state 9
    LEFTBRACKET     reduce using rule 40 (neupoint_start_function -> .)

    vars                           shift and go to state 78
    neupoint_start_function        shift and go to state 79

state 51

    (34) parameters_list -> LEFTPARENTHESIS . parameter RIGHTPARENTHESIS neupoint_add_parameters
    (35) parameters_list -> LEFTPARENTHESIS . RIGHTPARENTHESIS
    (36) parameter -> . data_type decla_identifier COMMA parameter
    (37) parameter -> . data_type decla_identifier
    (8) data_type -> . INT
    (9) data_type -> . FLOAT
    (10) data_type -> . CHAR

    RIGHTPARENTHESIS shift and go to state 81
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    parameter                      shift and go to state 80
    data_type                      shift and go to state 82

state 52

    (1) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS . block neupoint_end
    (54) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (55) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 46

    block                          shift and go to state 83

state 53

    (2) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block . neupoint_end
    (7) neupoint_end -> .

    $end            reduce using rule 7 (neupoint_end -> .)

    neupoint_end                   shift and go to state 84

state 54

    (3) program -> PROGRAM ID SEMICOLON neupoint_goto_main functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block . neupoint_end
    (7) neupoint_end -> .

    $end            reduce using rule 7 (neupoint_end -> .)

    neupoint_end                   shift and go to state 85

state 55

    (4) program -> PROGRAM ID SEMICOLON neupoint_goto_main MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end .

    $end            reduce using rule 4 (program -> PROGRAM ID SEMICOLON neupoint_goto_main MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end .)


state 56

    (54) block -> LEFTBRACKET statutes_list . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 86


state 57

    (55) block -> LEFTBRACKET RIGHTBRACKET .

    $end            reduce using rule 55 (block -> LEFTBRACKET RIGHTBRACKET .)
    MODULE          reduce using rule 55 (block -> LEFTBRACKET RIGHTBRACKET .)
    MAIN            reduce using rule 55 (block -> LEFTBRACKET RIGHTBRACKET .)
    ELSE            reduce using rule 55 (block -> LEFTBRACKET RIGHTBRACKET .)
    RETURN          reduce using rule 55 (block -> LEFTBRACKET RIGHTBRACKET .)
    READ            reduce using rule 55 (block -> LEFTBRACKET RIGHTBRACKET .)
    WRITE           reduce using rule 55 (block -> LEFTBRACKET RIGHTBRACKET .)
    IF              reduce using rule 55 (block -> LEFTBRACKET RIGHTBRACKET .)
    ID              reduce using rule 55 (block -> LEFTBRACKET RIGHTBRACKET .)
    WHILE           reduce using rule 55 (block -> LEFTBRACKET RIGHTBRACKET .)
    FOR             reduce using rule 55 (block -> LEFTBRACKET RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 55 (block -> LEFTBRACKET RIGHTBRACKET .)


state 58

    (56) statutes_list -> statute . statutes_list
    (57) statutes_list -> statute .
    (56) statutes_list -> . statute statutes_list
    (57) statutes_list -> . statute
    (58) statute -> . assignment
    (59) statute -> . function_return
    (60) statute -> . reading
    (61) statute -> . writing
    (62) statute -> . decision
    (63) statute -> . loop
    (64) statute -> . function_call_void
    (65) assignment -> . identifier EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (66) assignment -> . identifier PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (67) assignment -> . identifier SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (68) assignment -> . identifier INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (69) assignment -> . identifier DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (84) function_return -> . RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON
    (70) reading -> . READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON
    (73) writing -> . WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON
    (78) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (79) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad
    (80) loop -> . conditional
    (81) loop -> . non_conditional
    (85) function_call_void -> . function_call SEMICOLON
    (19) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> . ID neupoint_add_identifier
    (82) conditional -> . WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end
    (83) non_conditional -> . FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end
    (86) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad

    RIGHTBRACKET    reduce using rule 57 (statutes_list -> statute .)
    RETURN          shift and go to state 67
    READ            shift and go to state 68
    WRITE           shift and go to state 69
    IF              shift and go to state 70
    ID              shift and go to state 74
    WHILE           shift and go to state 75
    FOR             shift and go to state 76

    statute                        shift and go to state 58
    statutes_list                  shift and go to state 87
    assignment                     shift and go to state 59
    function_return                shift and go to state 60
    reading                        shift and go to state 61
    writing                        shift and go to state 62
    decision                       shift and go to state 63
    loop                           shift and go to state 64
    function_call_void             shift and go to state 65
    identifier                     shift and go to state 66
    conditional                    shift and go to state 71
    non_conditional                shift and go to state 72
    function_call                  shift and go to state 73

state 59

    (58) statute -> assignment .

    RETURN          reduce using rule 58 (statute -> assignment .)
    READ            reduce using rule 58 (statute -> assignment .)
    WRITE           reduce using rule 58 (statute -> assignment .)
    IF              reduce using rule 58 (statute -> assignment .)
    ID              reduce using rule 58 (statute -> assignment .)
    WHILE           reduce using rule 58 (statute -> assignment .)
    FOR             reduce using rule 58 (statute -> assignment .)
    RIGHTBRACKET    reduce using rule 58 (statute -> assignment .)


state 60

    (59) statute -> function_return .

    RETURN          reduce using rule 59 (statute -> function_return .)
    READ            reduce using rule 59 (statute -> function_return .)
    WRITE           reduce using rule 59 (statute -> function_return .)
    IF              reduce using rule 59 (statute -> function_return .)
    ID              reduce using rule 59 (statute -> function_return .)
    WHILE           reduce using rule 59 (statute -> function_return .)
    FOR             reduce using rule 59 (statute -> function_return .)
    RIGHTBRACKET    reduce using rule 59 (statute -> function_return .)


state 61

    (60) statute -> reading .

    RETURN          reduce using rule 60 (statute -> reading .)
    READ            reduce using rule 60 (statute -> reading .)
    WRITE           reduce using rule 60 (statute -> reading .)
    IF              reduce using rule 60 (statute -> reading .)
    ID              reduce using rule 60 (statute -> reading .)
    WHILE           reduce using rule 60 (statute -> reading .)
    FOR             reduce using rule 60 (statute -> reading .)
    RIGHTBRACKET    reduce using rule 60 (statute -> reading .)


state 62

    (61) statute -> writing .

    RETURN          reduce using rule 61 (statute -> writing .)
    READ            reduce using rule 61 (statute -> writing .)
    WRITE           reduce using rule 61 (statute -> writing .)
    IF              reduce using rule 61 (statute -> writing .)
    ID              reduce using rule 61 (statute -> writing .)
    WHILE           reduce using rule 61 (statute -> writing .)
    FOR             reduce using rule 61 (statute -> writing .)
    RIGHTBRACKET    reduce using rule 61 (statute -> writing .)


state 63

    (62) statute -> decision .

    RETURN          reduce using rule 62 (statute -> decision .)
    READ            reduce using rule 62 (statute -> decision .)
    WRITE           reduce using rule 62 (statute -> decision .)
    IF              reduce using rule 62 (statute -> decision .)
    ID              reduce using rule 62 (statute -> decision .)
    WHILE           reduce using rule 62 (statute -> decision .)
    FOR             reduce using rule 62 (statute -> decision .)
    RIGHTBRACKET    reduce using rule 62 (statute -> decision .)


state 64

    (63) statute -> loop .

    RETURN          reduce using rule 63 (statute -> loop .)
    READ            reduce using rule 63 (statute -> loop .)
    WRITE           reduce using rule 63 (statute -> loop .)
    IF              reduce using rule 63 (statute -> loop .)
    ID              reduce using rule 63 (statute -> loop .)
    WHILE           reduce using rule 63 (statute -> loop .)
    FOR             reduce using rule 63 (statute -> loop .)
    RIGHTBRACKET    reduce using rule 63 (statute -> loop .)


state 65

    (64) statute -> function_call_void .

    RETURN          reduce using rule 64 (statute -> function_call_void .)
    READ            reduce using rule 64 (statute -> function_call_void .)
    WRITE           reduce using rule 64 (statute -> function_call_void .)
    IF              reduce using rule 64 (statute -> function_call_void .)
    ID              reduce using rule 64 (statute -> function_call_void .)
    WHILE           reduce using rule 64 (statute -> function_call_void .)
    FOR             reduce using rule 64 (statute -> function_call_void .)
    RIGHTBRACKET    reduce using rule 64 (statute -> function_call_void .)


state 66

    (65) assignment -> identifier . EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (66) assignment -> identifier . PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (67) assignment -> identifier . SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (68) assignment -> identifier . INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (69) assignment -> identifier . DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON

    EQUALS          shift and go to state 88
    PLUSEQUALS      shift and go to state 89
    SUBSTRACTEQUALS shift and go to state 90
    INCREMENT       shift and go to state 91
    DECREMENT       shift and go to state 92


state 67

    (84) function_return -> RETURN . LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON

    LEFTPARENTHESIS shift and go to state 93


state 68

    (70) reading -> READ . LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON

    LEFTPARENTHESIS shift and go to state 94


state 69

    (73) writing -> WRITE . LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON

    LEFTPARENTHESIS shift and go to state 95


state 70

    (78) decision -> IF . LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (79) decision -> IF . LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad

    LEFTPARENTHESIS shift and go to state 96


state 71

    (80) loop -> conditional .

    RETURN          reduce using rule 80 (loop -> conditional .)
    READ            reduce using rule 80 (loop -> conditional .)
    WRITE           reduce using rule 80 (loop -> conditional .)
    IF              reduce using rule 80 (loop -> conditional .)
    ID              reduce using rule 80 (loop -> conditional .)
    WHILE           reduce using rule 80 (loop -> conditional .)
    FOR             reduce using rule 80 (loop -> conditional .)
    RIGHTBRACKET    reduce using rule 80 (loop -> conditional .)


state 72

    (81) loop -> non_conditional .

    RETURN          reduce using rule 81 (loop -> non_conditional .)
    READ            reduce using rule 81 (loop -> non_conditional .)
    WRITE           reduce using rule 81 (loop -> non_conditional .)
    IF              reduce using rule 81 (loop -> non_conditional .)
    ID              reduce using rule 81 (loop -> non_conditional .)
    WHILE           reduce using rule 81 (loop -> non_conditional .)
    FOR             reduce using rule 81 (loop -> non_conditional .)
    RIGHTBRACKET    reduce using rule 81 (loop -> non_conditional .)


state 73

    (85) function_call_void -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 97


state 74

    (19) identifier -> ID . neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> ID . neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> ID . neupoint_add_identifier
    (86) function_call -> ID . neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> ID . neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (23) neupoint_add_identifier -> .
    (119) neupoint_validate_function -> .

    LEFTSQRBRACKET  reduce using rule 23 (neupoint_add_identifier -> .)
    EQUALS          reduce using rule 23 (neupoint_add_identifier -> .)
    PLUSEQUALS      reduce using rule 23 (neupoint_add_identifier -> .)
    SUBSTRACTEQUALS reduce using rule 23 (neupoint_add_identifier -> .)
    INCREMENT       reduce using rule 23 (neupoint_add_identifier -> .)
    DECREMENT       reduce using rule 23 (neupoint_add_identifier -> .)
    LEFTPARENTHESIS reduce using rule 119 (neupoint_validate_function -> .)

    neupoint_add_identifier        shift and go to state 98
    neupoint_validate_function     shift and go to state 99

state 75

    (82) conditional -> WHILE . neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end
    (117) neupoint_while_start -> .

    LEFTPARENTHESIS reduce using rule 117 (neupoint_while_start -> .)

    neupoint_while_start           shift and go to state 100

state 76

    (83) non_conditional -> FOR . ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end

    ID              shift and go to state 101


state 77

    (16) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET . LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (17) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .

    LEFTSQRBRACKET  shift and go to state 102
    COMMA           reduce using rule 17 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)
    SEMICOLON       reduce using rule 17 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)
    RIGHTPARENTHESIS reduce using rule 17 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)


state 78

    (32) function -> MODULE return_type ID neupoint_add_function parameters_list vars . neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (40) neupoint_start_function -> .

    LEFTBRACKET     reduce using rule 40 (neupoint_start_function -> .)

    neupoint_start_function        shift and go to state 103

state 79

    (33) function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function . block neupoint_check_for_return neupoint_end_function
    (54) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (55) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 46

    block                          shift and go to state 104

state 80

    (34) parameters_list -> LEFTPARENTHESIS parameter . RIGHTPARENTHESIS neupoint_add_parameters

    RIGHTPARENTHESIS shift and go to state 105


state 81

    (35) parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS .

    VAR             reduce using rule 35 (parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS .)
    LEFTBRACKET     reduce using rule 35 (parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS .)


state 82

    (36) parameter -> data_type . decla_identifier COMMA parameter
    (37) parameter -> data_type . decla_identifier
    (16) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (17) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (18) decla_identifier -> . ID

    ID              shift and go to state 32

    decla_identifier               shift and go to state 106

state 83

    (1) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block . neupoint_end
    (7) neupoint_end -> .

    $end            reduce using rule 7 (neupoint_end -> .)

    neupoint_end                   shift and go to state 107

state 84

    (2) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end .

    $end            reduce using rule 2 (program -> PROGRAM ID SEMICOLON neupoint_goto_main vars MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end .)


state 85

    (3) program -> PROGRAM ID SEMICOLON neupoint_goto_main functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end .

    $end            reduce using rule 3 (program -> PROGRAM ID SEMICOLON neupoint_goto_main functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end .)


state 86

    (54) block -> LEFTBRACKET statutes_list RIGHTBRACKET .

    $end            reduce using rule 54 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    MODULE          reduce using rule 54 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    MAIN            reduce using rule 54 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    ELSE            reduce using rule 54 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    RETURN          reduce using rule 54 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    READ            reduce using rule 54 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    WRITE           reduce using rule 54 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    IF              reduce using rule 54 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    ID              reduce using rule 54 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    WHILE           reduce using rule 54 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    FOR             reduce using rule 54 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 54 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)


state 87

    (56) statutes_list -> statute statutes_list .

    RIGHTBRACKET    reduce using rule 56 (statutes_list -> statute statutes_list .)


state 88

    (65) assignment -> identifier EQUALS . neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (105) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 105 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 105 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 105 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 105 (neupoint_add_operator -> .)
    ID              reduce using rule 105 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 108

state 89

    (66) assignment -> identifier PLUSEQUALS . neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (105) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 105 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 105 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 105 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 105 (neupoint_add_operator -> .)
    ID              reduce using rule 105 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 109

state 90

    (67) assignment -> identifier SUBSTRACTEQUALS . neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (105) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 105 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 105 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 105 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 105 (neupoint_add_operator -> .)
    ID              reduce using rule 105 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 110

state 91

    (68) assignment -> identifier INCREMENT . neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (105) neupoint_add_operator -> .

    SEMICOLON       reduce using rule 105 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 111

state 92

    (69) assignment -> identifier DECREMENT . neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (105) neupoint_add_operator -> .

    SEMICOLON       reduce using rule 105 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 112

state 93

    (84) function_return -> RETURN LEFTPARENTHESIS . exp RIGHTPARENTHESIS SEMICOLON
    (95) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (96) exp -> . term neupoint_arithmetic_exp_quad
    (97) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (98) term -> . factor neupoint_arithmetic_term_quad
    (99) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (100) factor -> . CTEINT neupoint_add_cte_operand
    (101) factor -> . CTEFLOAT neupoint_add_cte_operand
    (102) factor -> . CTECHAR neupoint_add_cte_operand
    (103) factor -> . function_call
    (104) factor -> . identifier
    (86) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> . ID neupoint_add_identifier

    LEFTPARENTHESIS shift and go to state 113
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118
    CTECHAR         shift and go to state 119
    ID              shift and go to state 122

    exp                            shift and go to state 114
    term                           shift and go to state 115
    factor                         shift and go to state 116
    function_call                  shift and go to state 120
    identifier                     shift and go to state 121

state 94

    (70) reading -> READ LEFTPARENTHESIS . reading_list RIGHTPARENTHESIS SEMICOLON
    (71) reading_list -> . identifier COMMA reading_list
    (72) reading_list -> . identifier
    (19) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> . ID neupoint_add_identifier

    ID              shift and go to state 125

    reading_list                   shift and go to state 123
    identifier                     shift and go to state 124

state 95

    (73) writing -> WRITE LEFTPARENTHESIS . writing_list RIGHTPARENTHESIS SEMICOLON
    (74) writing_list -> . CTESTRING neupoint_add_cte_operand neupoint_write_quad COMMA writing_list
    (75) writing_list -> . expresion neupoint_write_quad COMMA writing_list
    (76) writing_list -> . CTESTRING neupoint_add_cte_operand neupoint_write_quad
    (77) writing_list -> . expresion neupoint_write_quad
    (90) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (91) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (92) expresion -> . exp_relational
    (93) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (94) exp_relational -> . exp
    (95) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (96) exp -> . term neupoint_arithmetic_exp_quad
    (97) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (98) term -> . factor neupoint_arithmetic_term_quad
    (99) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (100) factor -> . CTEINT neupoint_add_cte_operand
    (101) factor -> . CTEFLOAT neupoint_add_cte_operand
    (102) factor -> . CTECHAR neupoint_add_cte_operand
    (103) factor -> . function_call
    (104) factor -> . identifier
    (86) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> . ID neupoint_add_identifier

    CTESTRING       shift and go to state 127
    LEFTPARENTHESIS shift and go to state 113
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118
    CTECHAR         shift and go to state 119
    ID              shift and go to state 122

    writing_list                   shift and go to state 126
    expresion                      shift and go to state 128
    exp_relational                 shift and go to state 129
    exp                            shift and go to state 130
    term                           shift and go to state 115
    factor                         shift and go to state 116
    function_call                  shift and go to state 120
    identifier                     shift and go to state 121

state 96

    (78) decision -> IF LEFTPARENTHESIS . expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (79) decision -> IF LEFTPARENTHESIS . expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad
    (90) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (91) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (92) expresion -> . exp_relational
    (93) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (94) exp_relational -> . exp
    (95) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (96) exp -> . term neupoint_arithmetic_exp_quad
    (97) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (98) term -> . factor neupoint_arithmetic_term_quad
    (99) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (100) factor -> . CTEINT neupoint_add_cte_operand
    (101) factor -> . CTEFLOAT neupoint_add_cte_operand
    (102) factor -> . CTECHAR neupoint_add_cte_operand
    (103) factor -> . function_call
    (104) factor -> . identifier
    (86) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> . ID neupoint_add_identifier

    LEFTPARENTHESIS shift and go to state 113
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118
    CTECHAR         shift and go to state 119
    ID              shift and go to state 122

    expresion                      shift and go to state 131
    exp_relational                 shift and go to state 129
    exp                            shift and go to state 130
    term                           shift and go to state 115
    factor                         shift and go to state 116
    function_call                  shift and go to state 120
    identifier                     shift and go to state 121

state 97

    (85) function_call_void -> function_call SEMICOLON .

    RETURN          reduce using rule 85 (function_call_void -> function_call SEMICOLON .)
    READ            reduce using rule 85 (function_call_void -> function_call SEMICOLON .)
    WRITE           reduce using rule 85 (function_call_void -> function_call SEMICOLON .)
    IF              reduce using rule 85 (function_call_void -> function_call SEMICOLON .)
    ID              reduce using rule 85 (function_call_void -> function_call SEMICOLON .)
    WHILE           reduce using rule 85 (function_call_void -> function_call SEMICOLON .)
    FOR             reduce using rule 85 (function_call_void -> function_call SEMICOLON .)
    RIGHTBRACKET    reduce using rule 85 (function_call_void -> function_call SEMICOLON .)


state 98

    (19) identifier -> ID neupoint_add_identifier . LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> ID neupoint_add_identifier . LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> ID neupoint_add_identifier .

    LEFTSQRBRACKET  shift and go to state 132
    EQUALS          reduce using rule 21 (identifier -> ID neupoint_add_identifier .)
    PLUSEQUALS      reduce using rule 21 (identifier -> ID neupoint_add_identifier .)
    SUBSTRACTEQUALS reduce using rule 21 (identifier -> ID neupoint_add_identifier .)
    INCREMENT       reduce using rule 21 (identifier -> ID neupoint_add_identifier .)
    DECREMENT       reduce using rule 21 (identifier -> ID neupoint_add_identifier .)
    MULTIPLY        reduce using rule 21 (identifier -> ID neupoint_add_identifier .)
    DIVIDE          reduce using rule 21 (identifier -> ID neupoint_add_identifier .)
    MOD             reduce using rule 21 (identifier -> ID neupoint_add_identifier .)
    PLUS            reduce using rule 21 (identifier -> ID neupoint_add_identifier .)
    MINUS           reduce using rule 21 (identifier -> ID neupoint_add_identifier .)
    RIGHTPARENTHESIS reduce using rule 21 (identifier -> ID neupoint_add_identifier .)
    COMMA           reduce using rule 21 (identifier -> ID neupoint_add_identifier .)
    COMPARISON      reduce using rule 21 (identifier -> ID neupoint_add_identifier .)
    GREATERHANOREQUAL reduce using rule 21 (identifier -> ID neupoint_add_identifier .)
    LESSTHANOREQUAL reduce using rule 21 (identifier -> ID neupoint_add_identifier .)
    GREATERTHAN     reduce using rule 21 (identifier -> ID neupoint_add_identifier .)
    LESSTHAN        reduce using rule 21 (identifier -> ID neupoint_add_identifier .)
    DIFFERENT       reduce using rule 21 (identifier -> ID neupoint_add_identifier .)
    AND             reduce using rule 21 (identifier -> ID neupoint_add_identifier .)
    OR              reduce using rule 21 (identifier -> ID neupoint_add_identifier .)
    SEMICOLON       reduce using rule 21 (identifier -> ID neupoint_add_identifier .)
    RIGHTSQRBRACKET reduce using rule 21 (identifier -> ID neupoint_add_identifier .)
    TO              reduce using rule 21 (identifier -> ID neupoint_add_identifier .)
    DO              reduce using rule 21 (identifier -> ID neupoint_add_identifier .)


state 99

    (86) function_call -> ID neupoint_validate_function . LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> ID neupoint_validate_function . LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad

    LEFTPARENTHESIS shift and go to state 133


state 100

    (82) conditional -> WHILE neupoint_while_start . LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end

    LEFTPARENTHESIS shift and go to state 134


state 101

    (83) non_conditional -> FOR ID . neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end
    (125) neupoint_add_operand_integer -> .

    EQUALS          reduce using rule 125 (neupoint_add_operand_integer -> .)

    neupoint_add_operand_integer   shift and go to state 135

state 102

    (16) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET . CTEINT RIGHTSQRBRACKET

    CTEINT          shift and go to state 136


state 103

    (32) function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function . block neupoint_check_for_return neupoint_end_function
    (54) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (55) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 46

    block                          shift and go to state 137

state 104

    (33) function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block . neupoint_check_for_return neupoint_end_function
    (41) neupoint_check_for_return -> .

    MODULE          reduce using rule 41 (neupoint_check_for_return -> .)
    MAIN            reduce using rule 41 (neupoint_check_for_return -> .)

    neupoint_check_for_return      shift and go to state 138

state 105

    (34) parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS . neupoint_add_parameters
    (39) neupoint_add_parameters -> .

    VAR             reduce using rule 39 (neupoint_add_parameters -> .)
    LEFTBRACKET     reduce using rule 39 (neupoint_add_parameters -> .)

    neupoint_add_parameters        shift and go to state 139

state 106

    (36) parameter -> data_type decla_identifier . COMMA parameter
    (37) parameter -> data_type decla_identifier .

    COMMA           shift and go to state 140
    RIGHTPARENTHESIS reduce using rule 37 (parameter -> data_type decla_identifier .)


state 107

    (1) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON neupoint_goto_main vars functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end .)


state 108

    (65) assignment -> identifier EQUALS neupoint_add_operator . expresion neupoint_assignment_quad SEMICOLON
    (90) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (91) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (92) expresion -> . exp_relational
    (93) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (94) exp_relational -> . exp
    (95) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (96) exp -> . term neupoint_arithmetic_exp_quad
    (97) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (98) term -> . factor neupoint_arithmetic_term_quad
    (99) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (100) factor -> . CTEINT neupoint_add_cte_operand
    (101) factor -> . CTEFLOAT neupoint_add_cte_operand
    (102) factor -> . CTECHAR neupoint_add_cte_operand
    (103) factor -> . function_call
    (104) factor -> . identifier
    (86) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> . ID neupoint_add_identifier

    LEFTPARENTHESIS shift and go to state 113
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118
    CTECHAR         shift and go to state 119
    ID              shift and go to state 122

    identifier                     shift and go to state 121
    expresion                      shift and go to state 141
    exp_relational                 shift and go to state 129
    exp                            shift and go to state 130
    term                           shift and go to state 115
    factor                         shift and go to state 116
    function_call                  shift and go to state 120

state 109

    (66) assignment -> identifier PLUSEQUALS neupoint_add_operator . expresion neupoint_assignment_quad SEMICOLON
    (90) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (91) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (92) expresion -> . exp_relational
    (93) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (94) exp_relational -> . exp
    (95) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (96) exp -> . term neupoint_arithmetic_exp_quad
    (97) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (98) term -> . factor neupoint_arithmetic_term_quad
    (99) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (100) factor -> . CTEINT neupoint_add_cte_operand
    (101) factor -> . CTEFLOAT neupoint_add_cte_operand
    (102) factor -> . CTECHAR neupoint_add_cte_operand
    (103) factor -> . function_call
    (104) factor -> . identifier
    (86) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> . ID neupoint_add_identifier

    LEFTPARENTHESIS shift and go to state 113
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118
    CTECHAR         shift and go to state 119
    ID              shift and go to state 122

    identifier                     shift and go to state 121
    expresion                      shift and go to state 142
    exp_relational                 shift and go to state 129
    exp                            shift and go to state 130
    term                           shift and go to state 115
    factor                         shift and go to state 116
    function_call                  shift and go to state 120

state 110

    (67) assignment -> identifier SUBSTRACTEQUALS neupoint_add_operator . expresion neupoint_assignment_quad SEMICOLON
    (90) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (91) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (92) expresion -> . exp_relational
    (93) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (94) exp_relational -> . exp
    (95) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (96) exp -> . term neupoint_arithmetic_exp_quad
    (97) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (98) term -> . factor neupoint_arithmetic_term_quad
    (99) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (100) factor -> . CTEINT neupoint_add_cte_operand
    (101) factor -> . CTEFLOAT neupoint_add_cte_operand
    (102) factor -> . CTECHAR neupoint_add_cte_operand
    (103) factor -> . function_call
    (104) factor -> . identifier
    (86) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> . ID neupoint_add_identifier

    LEFTPARENTHESIS shift and go to state 113
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118
    CTECHAR         shift and go to state 119
    ID              shift and go to state 122

    identifier                     shift and go to state 121
    expresion                      shift and go to state 143
    exp_relational                 shift and go to state 129
    exp                            shift and go to state 130
    term                           shift and go to state 115
    factor                         shift and go to state 116
    function_call                  shift and go to state 120

state 111

    (68) assignment -> identifier INCREMENT neupoint_add_operator . neupoint_assignment_single_quad SEMICOLON
    (112) neupoint_assignment_single_quad -> .

    SEMICOLON       reduce using rule 112 (neupoint_assignment_single_quad -> .)

    neupoint_assignment_single_quad shift and go to state 144

state 112

    (69) assignment -> identifier DECREMENT neupoint_add_operator . neupoint_assignment_single_quad SEMICOLON
    (112) neupoint_assignment_single_quad -> .

    SEMICOLON       reduce using rule 112 (neupoint_assignment_single_quad -> .)

    neupoint_assignment_single_quad shift and go to state 145

state 113

    (99) factor -> LEFTPARENTHESIS . neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (109) neupoint_add_wall -> .

    LEFTPARENTHESIS reduce using rule 109 (neupoint_add_wall -> .)
    CTEINT          reduce using rule 109 (neupoint_add_wall -> .)
    CTEFLOAT        reduce using rule 109 (neupoint_add_wall -> .)
    CTECHAR         reduce using rule 109 (neupoint_add_wall -> .)
    ID              reduce using rule 109 (neupoint_add_wall -> .)

    neupoint_add_wall              shift and go to state 146

state 114

    (84) function_return -> RETURN LEFTPARENTHESIS exp . RIGHTPARENTHESIS SEMICOLON

    RIGHTPARENTHESIS shift and go to state 147


state 115

    (95) exp -> term . neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (96) exp -> term . neupoint_arithmetic_exp_quad
    (107) neupoint_arithmetic_exp_quad -> .

    PLUS            reduce using rule 107 (neupoint_arithmetic_exp_quad -> .)
    MINUS           reduce using rule 107 (neupoint_arithmetic_exp_quad -> .)
    RIGHTPARENTHESIS reduce using rule 107 (neupoint_arithmetic_exp_quad -> .)
    COMPARISON      reduce using rule 107 (neupoint_arithmetic_exp_quad -> .)
    GREATERHANOREQUAL reduce using rule 107 (neupoint_arithmetic_exp_quad -> .)
    LESSTHANOREQUAL reduce using rule 107 (neupoint_arithmetic_exp_quad -> .)
    GREATERTHAN     reduce using rule 107 (neupoint_arithmetic_exp_quad -> .)
    LESSTHAN        reduce using rule 107 (neupoint_arithmetic_exp_quad -> .)
    DIFFERENT       reduce using rule 107 (neupoint_arithmetic_exp_quad -> .)
    AND             reduce using rule 107 (neupoint_arithmetic_exp_quad -> .)
    OR              reduce using rule 107 (neupoint_arithmetic_exp_quad -> .)
    COMMA           reduce using rule 107 (neupoint_arithmetic_exp_quad -> .)
    SEMICOLON       reduce using rule 107 (neupoint_arithmetic_exp_quad -> .)
    RIGHTSQRBRACKET reduce using rule 107 (neupoint_arithmetic_exp_quad -> .)
    TO              reduce using rule 107 (neupoint_arithmetic_exp_quad -> .)
    DO              reduce using rule 107 (neupoint_arithmetic_exp_quad -> .)

    neupoint_arithmetic_exp_quad   shift and go to state 148

state 116

    (97) term -> factor . neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (98) term -> factor . neupoint_arithmetic_term_quad
    (108) neupoint_arithmetic_term_quad -> .

    MULTIPLY        reduce using rule 108 (neupoint_arithmetic_term_quad -> .)
    DIVIDE          reduce using rule 108 (neupoint_arithmetic_term_quad -> .)
    MOD             reduce using rule 108 (neupoint_arithmetic_term_quad -> .)
    PLUS            reduce using rule 108 (neupoint_arithmetic_term_quad -> .)
    MINUS           reduce using rule 108 (neupoint_arithmetic_term_quad -> .)
    RIGHTPARENTHESIS reduce using rule 108 (neupoint_arithmetic_term_quad -> .)
    COMPARISON      reduce using rule 108 (neupoint_arithmetic_term_quad -> .)
    GREATERHANOREQUAL reduce using rule 108 (neupoint_arithmetic_term_quad -> .)
    LESSTHANOREQUAL reduce using rule 108 (neupoint_arithmetic_term_quad -> .)
    GREATERTHAN     reduce using rule 108 (neupoint_arithmetic_term_quad -> .)
    LESSTHAN        reduce using rule 108 (neupoint_arithmetic_term_quad -> .)
    DIFFERENT       reduce using rule 108 (neupoint_arithmetic_term_quad -> .)
    AND             reduce using rule 108 (neupoint_arithmetic_term_quad -> .)
    OR              reduce using rule 108 (neupoint_arithmetic_term_quad -> .)
    COMMA           reduce using rule 108 (neupoint_arithmetic_term_quad -> .)
    SEMICOLON       reduce using rule 108 (neupoint_arithmetic_term_quad -> .)
    RIGHTSQRBRACKET reduce using rule 108 (neupoint_arithmetic_term_quad -> .)
    TO              reduce using rule 108 (neupoint_arithmetic_term_quad -> .)
    DO              reduce using rule 108 (neupoint_arithmetic_term_quad -> .)

    neupoint_arithmetic_term_quad  shift and go to state 149

state 117

    (100) factor -> CTEINT . neupoint_add_cte_operand
    (106) neupoint_add_cte_operand -> .

    MULTIPLY        reduce using rule 106 (neupoint_add_cte_operand -> .)
    DIVIDE          reduce using rule 106 (neupoint_add_cte_operand -> .)
    MOD             reduce using rule 106 (neupoint_add_cte_operand -> .)
    PLUS            reduce using rule 106 (neupoint_add_cte_operand -> .)
    MINUS           reduce using rule 106 (neupoint_add_cte_operand -> .)
    RIGHTPARENTHESIS reduce using rule 106 (neupoint_add_cte_operand -> .)
    COMPARISON      reduce using rule 106 (neupoint_add_cte_operand -> .)
    GREATERHANOREQUAL reduce using rule 106 (neupoint_add_cte_operand -> .)
    LESSTHANOREQUAL reduce using rule 106 (neupoint_add_cte_operand -> .)
    GREATERTHAN     reduce using rule 106 (neupoint_add_cte_operand -> .)
    LESSTHAN        reduce using rule 106 (neupoint_add_cte_operand -> .)
    DIFFERENT       reduce using rule 106 (neupoint_add_cte_operand -> .)
    AND             reduce using rule 106 (neupoint_add_cte_operand -> .)
    OR              reduce using rule 106 (neupoint_add_cte_operand -> .)
    COMMA           reduce using rule 106 (neupoint_add_cte_operand -> .)
    SEMICOLON       reduce using rule 106 (neupoint_add_cte_operand -> .)
    RIGHTSQRBRACKET reduce using rule 106 (neupoint_add_cte_operand -> .)
    TO              reduce using rule 106 (neupoint_add_cte_operand -> .)
    DO              reduce using rule 106 (neupoint_add_cte_operand -> .)

    neupoint_add_cte_operand       shift and go to state 150

state 118

    (101) factor -> CTEFLOAT . neupoint_add_cte_operand
    (106) neupoint_add_cte_operand -> .

    MULTIPLY        reduce using rule 106 (neupoint_add_cte_operand -> .)
    DIVIDE          reduce using rule 106 (neupoint_add_cte_operand -> .)
    MOD             reduce using rule 106 (neupoint_add_cte_operand -> .)
    PLUS            reduce using rule 106 (neupoint_add_cte_operand -> .)
    MINUS           reduce using rule 106 (neupoint_add_cte_operand -> .)
    RIGHTPARENTHESIS reduce using rule 106 (neupoint_add_cte_operand -> .)
    COMPARISON      reduce using rule 106 (neupoint_add_cte_operand -> .)
    GREATERHANOREQUAL reduce using rule 106 (neupoint_add_cte_operand -> .)
    LESSTHANOREQUAL reduce using rule 106 (neupoint_add_cte_operand -> .)
    GREATERTHAN     reduce using rule 106 (neupoint_add_cte_operand -> .)
    LESSTHAN        reduce using rule 106 (neupoint_add_cte_operand -> .)
    DIFFERENT       reduce using rule 106 (neupoint_add_cte_operand -> .)
    AND             reduce using rule 106 (neupoint_add_cte_operand -> .)
    OR              reduce using rule 106 (neupoint_add_cte_operand -> .)
    COMMA           reduce using rule 106 (neupoint_add_cte_operand -> .)
    SEMICOLON       reduce using rule 106 (neupoint_add_cte_operand -> .)
    RIGHTSQRBRACKET reduce using rule 106 (neupoint_add_cte_operand -> .)
    TO              reduce using rule 106 (neupoint_add_cte_operand -> .)
    DO              reduce using rule 106 (neupoint_add_cte_operand -> .)

    neupoint_add_cte_operand       shift and go to state 151

state 119

    (102) factor -> CTECHAR . neupoint_add_cte_operand
    (106) neupoint_add_cte_operand -> .

    MULTIPLY        reduce using rule 106 (neupoint_add_cte_operand -> .)
    DIVIDE          reduce using rule 106 (neupoint_add_cte_operand -> .)
    MOD             reduce using rule 106 (neupoint_add_cte_operand -> .)
    PLUS            reduce using rule 106 (neupoint_add_cte_operand -> .)
    MINUS           reduce using rule 106 (neupoint_add_cte_operand -> .)
    RIGHTPARENTHESIS reduce using rule 106 (neupoint_add_cte_operand -> .)
    COMPARISON      reduce using rule 106 (neupoint_add_cte_operand -> .)
    GREATERHANOREQUAL reduce using rule 106 (neupoint_add_cte_operand -> .)
    LESSTHANOREQUAL reduce using rule 106 (neupoint_add_cte_operand -> .)
    GREATERTHAN     reduce using rule 106 (neupoint_add_cte_operand -> .)
    LESSTHAN        reduce using rule 106 (neupoint_add_cte_operand -> .)
    DIFFERENT       reduce using rule 106 (neupoint_add_cte_operand -> .)
    AND             reduce using rule 106 (neupoint_add_cte_operand -> .)
    OR              reduce using rule 106 (neupoint_add_cte_operand -> .)
    COMMA           reduce using rule 106 (neupoint_add_cte_operand -> .)
    SEMICOLON       reduce using rule 106 (neupoint_add_cte_operand -> .)
    RIGHTSQRBRACKET reduce using rule 106 (neupoint_add_cte_operand -> .)
    TO              reduce using rule 106 (neupoint_add_cte_operand -> .)
    DO              reduce using rule 106 (neupoint_add_cte_operand -> .)

    neupoint_add_cte_operand       shift and go to state 152

state 120

    (103) factor -> function_call .

    MULTIPLY        reduce using rule 103 (factor -> function_call .)
    DIVIDE          reduce using rule 103 (factor -> function_call .)
    MOD             reduce using rule 103 (factor -> function_call .)
    PLUS            reduce using rule 103 (factor -> function_call .)
    MINUS           reduce using rule 103 (factor -> function_call .)
    RIGHTPARENTHESIS reduce using rule 103 (factor -> function_call .)
    COMPARISON      reduce using rule 103 (factor -> function_call .)
    GREATERHANOREQUAL reduce using rule 103 (factor -> function_call .)
    LESSTHANOREQUAL reduce using rule 103 (factor -> function_call .)
    GREATERTHAN     reduce using rule 103 (factor -> function_call .)
    LESSTHAN        reduce using rule 103 (factor -> function_call .)
    DIFFERENT       reduce using rule 103 (factor -> function_call .)
    AND             reduce using rule 103 (factor -> function_call .)
    OR              reduce using rule 103 (factor -> function_call .)
    COMMA           reduce using rule 103 (factor -> function_call .)
    SEMICOLON       reduce using rule 103 (factor -> function_call .)
    RIGHTSQRBRACKET reduce using rule 103 (factor -> function_call .)
    TO              reduce using rule 103 (factor -> function_call .)
    DO              reduce using rule 103 (factor -> function_call .)


state 121

    (104) factor -> identifier .

    MULTIPLY        reduce using rule 104 (factor -> identifier .)
    DIVIDE          reduce using rule 104 (factor -> identifier .)
    MOD             reduce using rule 104 (factor -> identifier .)
    PLUS            reduce using rule 104 (factor -> identifier .)
    MINUS           reduce using rule 104 (factor -> identifier .)
    RIGHTPARENTHESIS reduce using rule 104 (factor -> identifier .)
    COMPARISON      reduce using rule 104 (factor -> identifier .)
    GREATERHANOREQUAL reduce using rule 104 (factor -> identifier .)
    LESSTHANOREQUAL reduce using rule 104 (factor -> identifier .)
    GREATERTHAN     reduce using rule 104 (factor -> identifier .)
    LESSTHAN        reduce using rule 104 (factor -> identifier .)
    DIFFERENT       reduce using rule 104 (factor -> identifier .)
    AND             reduce using rule 104 (factor -> identifier .)
    OR              reduce using rule 104 (factor -> identifier .)
    COMMA           reduce using rule 104 (factor -> identifier .)
    SEMICOLON       reduce using rule 104 (factor -> identifier .)
    RIGHTSQRBRACKET reduce using rule 104 (factor -> identifier .)
    TO              reduce using rule 104 (factor -> identifier .)
    DO              reduce using rule 104 (factor -> identifier .)


state 122

    (86) function_call -> ID . neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> ID . neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> ID . neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> ID . neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> ID . neupoint_add_identifier
    (119) neupoint_validate_function -> .
    (23) neupoint_add_identifier -> .

    LEFTPARENTHESIS reduce using rule 119 (neupoint_validate_function -> .)
    LEFTSQRBRACKET  reduce using rule 23 (neupoint_add_identifier -> .)
    MULTIPLY        reduce using rule 23 (neupoint_add_identifier -> .)
    DIVIDE          reduce using rule 23 (neupoint_add_identifier -> .)
    MOD             reduce using rule 23 (neupoint_add_identifier -> .)
    PLUS            reduce using rule 23 (neupoint_add_identifier -> .)
    MINUS           reduce using rule 23 (neupoint_add_identifier -> .)
    RIGHTPARENTHESIS reduce using rule 23 (neupoint_add_identifier -> .)
    COMPARISON      reduce using rule 23 (neupoint_add_identifier -> .)
    GREATERHANOREQUAL reduce using rule 23 (neupoint_add_identifier -> .)
    LESSTHANOREQUAL reduce using rule 23 (neupoint_add_identifier -> .)
    GREATERTHAN     reduce using rule 23 (neupoint_add_identifier -> .)
    LESSTHAN        reduce using rule 23 (neupoint_add_identifier -> .)
    DIFFERENT       reduce using rule 23 (neupoint_add_identifier -> .)
    AND             reduce using rule 23 (neupoint_add_identifier -> .)
    OR              reduce using rule 23 (neupoint_add_identifier -> .)
    COMMA           reduce using rule 23 (neupoint_add_identifier -> .)
    SEMICOLON       reduce using rule 23 (neupoint_add_identifier -> .)
    RIGHTSQRBRACKET reduce using rule 23 (neupoint_add_identifier -> .)
    TO              reduce using rule 23 (neupoint_add_identifier -> .)
    DO              reduce using rule 23 (neupoint_add_identifier -> .)

    neupoint_validate_function     shift and go to state 99
    neupoint_add_identifier        shift and go to state 98

state 123

    (70) reading -> READ LEFTPARENTHESIS reading_list . RIGHTPARENTHESIS SEMICOLON

    RIGHTPARENTHESIS shift and go to state 153


state 124

    (71) reading_list -> identifier . COMMA reading_list
    (72) reading_list -> identifier .

    COMMA           shift and go to state 154
    RIGHTPARENTHESIS reduce using rule 72 (reading_list -> identifier .)


state 125

    (19) identifier -> ID . neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> ID . neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> ID . neupoint_add_identifier
    (23) neupoint_add_identifier -> .

    LEFTSQRBRACKET  reduce using rule 23 (neupoint_add_identifier -> .)
    COMMA           reduce using rule 23 (neupoint_add_identifier -> .)
    RIGHTPARENTHESIS reduce using rule 23 (neupoint_add_identifier -> .)

    neupoint_add_identifier        shift and go to state 98

state 126

    (73) writing -> WRITE LEFTPARENTHESIS writing_list . RIGHTPARENTHESIS SEMICOLON

    RIGHTPARENTHESIS shift and go to state 155


state 127

    (74) writing_list -> CTESTRING . neupoint_add_cte_operand neupoint_write_quad COMMA writing_list
    (76) writing_list -> CTESTRING . neupoint_add_cte_operand neupoint_write_quad
    (106) neupoint_add_cte_operand -> .

    COMMA           reduce using rule 106 (neupoint_add_cte_operand -> .)
    RIGHTPARENTHESIS reduce using rule 106 (neupoint_add_cte_operand -> .)

    neupoint_add_cte_operand       shift and go to state 156

state 128

    (75) writing_list -> expresion . neupoint_write_quad COMMA writing_list
    (77) writing_list -> expresion . neupoint_write_quad
    (124) neupoint_write_quad -> .

    COMMA           reduce using rule 124 (neupoint_write_quad -> .)
    RIGHTPARENTHESIS reduce using rule 124 (neupoint_write_quad -> .)

    neupoint_write_quad            shift and go to state 157

state 129

    (90) expresion -> exp_relational . AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (91) expresion -> exp_relational . OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (92) expresion -> exp_relational .

    AND             shift and go to state 158
    OR              shift and go to state 159
    COMMA           reduce using rule 92 (expresion -> exp_relational .)
    RIGHTPARENTHESIS reduce using rule 92 (expresion -> exp_relational .)
    SEMICOLON       reduce using rule 92 (expresion -> exp_relational .)


state 130

    (93) exp_relational -> exp . comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (94) exp_relational -> exp .
    (43) comparators -> . COMPARISON
    (44) comparators -> . GREATERHANOREQUAL
    (45) comparators -> . LESSTHANOREQUAL
    (46) comparators -> . GREATERTHAN
    (47) comparators -> . LESSTHAN
    (48) comparators -> . DIFFERENT

    AND             reduce using rule 94 (exp_relational -> exp .)
    OR              reduce using rule 94 (exp_relational -> exp .)
    COMMA           reduce using rule 94 (exp_relational -> exp .)
    RIGHTPARENTHESIS reduce using rule 94 (exp_relational -> exp .)
    SEMICOLON       reduce using rule 94 (exp_relational -> exp .)
    COMPARISON      shift and go to state 161
    GREATERHANOREQUAL shift and go to state 162
    LESSTHANOREQUAL shift and go to state 163
    GREATERTHAN     shift and go to state 164
    LESSTHAN        shift and go to state 165
    DIFFERENT       shift and go to state 166

    comparators                    shift and go to state 160

state 131

    (78) decision -> IF LEFTPARENTHESIS expresion . RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (79) decision -> IF LEFTPARENTHESIS expresion . RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad

    RIGHTPARENTHESIS shift and go to state 167


state 132

    (19) identifier -> ID neupoint_add_identifier LEFTSQRBRACKET . neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> ID neupoint_add_identifier LEFTSQRBRACKET . neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (24) neupoint_index_array -> .

    LEFTPARENTHESIS reduce using rule 24 (neupoint_index_array -> .)
    CTEINT          reduce using rule 24 (neupoint_index_array -> .)
    CTEFLOAT        reduce using rule 24 (neupoint_index_array -> .)
    CTECHAR         reduce using rule 24 (neupoint_index_array -> .)
    ID              reduce using rule 24 (neupoint_index_array -> .)

    neupoint_index_array           shift and go to state 168

state 133

    (86) function_call -> ID neupoint_validate_function LEFTPARENTHESIS . neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> ID neupoint_validate_function LEFTPARENTHESIS . neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (120) neupoint_era_quad -> .

    LEFTPARENTHESIS reduce using rule 120 (neupoint_era_quad -> .)
    CTEINT          reduce using rule 120 (neupoint_era_quad -> .)
    CTEFLOAT        reduce using rule 120 (neupoint_era_quad -> .)
    CTECHAR         reduce using rule 120 (neupoint_era_quad -> .)
    ID              reduce using rule 120 (neupoint_era_quad -> .)
    RIGHTPARENTHESIS reduce using rule 120 (neupoint_era_quad -> .)

    neupoint_era_quad              shift and go to state 169

state 134

    (82) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS . expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end
    (90) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (91) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (92) expresion -> . exp_relational
    (93) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (94) exp_relational -> . exp
    (95) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (96) exp -> . term neupoint_arithmetic_exp_quad
    (97) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (98) term -> . factor neupoint_arithmetic_term_quad
    (99) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (100) factor -> . CTEINT neupoint_add_cte_operand
    (101) factor -> . CTEFLOAT neupoint_add_cte_operand
    (102) factor -> . CTECHAR neupoint_add_cte_operand
    (103) factor -> . function_call
    (104) factor -> . identifier
    (86) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> . ID neupoint_add_identifier

    LEFTPARENTHESIS shift and go to state 113
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118
    CTECHAR         shift and go to state 119
    ID              shift and go to state 122

    expresion                      shift and go to state 170
    exp_relational                 shift and go to state 129
    exp                            shift and go to state 130
    term                           shift and go to state 115
    factor                         shift and go to state 116
    function_call                  shift and go to state 120
    identifier                     shift and go to state 121

state 135

    (83) non_conditional -> FOR ID neupoint_add_operand_integer . EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end

    EQUALS          shift and go to state 171


state 136

    (16) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT . RIGHTSQRBRACKET

    RIGHTSQRBRACKET shift and go to state 172


state 137

    (32) function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block . neupoint_check_for_return neupoint_end_function
    (41) neupoint_check_for_return -> .

    MODULE          reduce using rule 41 (neupoint_check_for_return -> .)
    MAIN            reduce using rule 41 (neupoint_check_for_return -> .)

    neupoint_check_for_return      shift and go to state 173

state 138

    (33) function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return . neupoint_end_function
    (42) neupoint_end_function -> .

    MODULE          reduce using rule 42 (neupoint_end_function -> .)
    MAIN            reduce using rule 42 (neupoint_end_function -> .)

    neupoint_end_function          shift and go to state 174

state 139

    (34) parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS neupoint_add_parameters .

    VAR             reduce using rule 34 (parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS neupoint_add_parameters .)
    LEFTBRACKET     reduce using rule 34 (parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS neupoint_add_parameters .)


state 140

    (36) parameter -> data_type decla_identifier COMMA . parameter
    (36) parameter -> . data_type decla_identifier COMMA parameter
    (37) parameter -> . data_type decla_identifier
    (8) data_type -> . INT
    (9) data_type -> . FLOAT
    (10) data_type -> . CHAR

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    data_type                      shift and go to state 82
    parameter                      shift and go to state 175

state 141

    (65) assignment -> identifier EQUALS neupoint_add_operator expresion . neupoint_assignment_quad SEMICOLON
    (111) neupoint_assignment_quad -> .

    SEMICOLON       reduce using rule 111 (neupoint_assignment_quad -> .)

    neupoint_assignment_quad       shift and go to state 176

state 142

    (66) assignment -> identifier PLUSEQUALS neupoint_add_operator expresion . neupoint_assignment_quad SEMICOLON
    (111) neupoint_assignment_quad -> .

    SEMICOLON       reduce using rule 111 (neupoint_assignment_quad -> .)

    neupoint_assignment_quad       shift and go to state 177

state 143

    (67) assignment -> identifier SUBSTRACTEQUALS neupoint_add_operator expresion . neupoint_assignment_quad SEMICOLON
    (111) neupoint_assignment_quad -> .

    SEMICOLON       reduce using rule 111 (neupoint_assignment_quad -> .)

    neupoint_assignment_quad       shift and go to state 178

state 144

    (68) assignment -> identifier INCREMENT neupoint_add_operator neupoint_assignment_single_quad . SEMICOLON

    SEMICOLON       shift and go to state 179


state 145

    (69) assignment -> identifier DECREMENT neupoint_add_operator neupoint_assignment_single_quad . SEMICOLON

    SEMICOLON       shift and go to state 180


state 146

    (99) factor -> LEFTPARENTHESIS neupoint_add_wall . expresion neupoint_remove_wall RIGHTPARENTHESIS
    (90) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (91) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (92) expresion -> . exp_relational
    (93) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (94) exp_relational -> . exp
    (95) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (96) exp -> . term neupoint_arithmetic_exp_quad
    (97) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (98) term -> . factor neupoint_arithmetic_term_quad
    (99) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (100) factor -> . CTEINT neupoint_add_cte_operand
    (101) factor -> . CTEFLOAT neupoint_add_cte_operand
    (102) factor -> . CTECHAR neupoint_add_cte_operand
    (103) factor -> . function_call
    (104) factor -> . identifier
    (86) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> . ID neupoint_add_identifier

    LEFTPARENTHESIS shift and go to state 113
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118
    CTECHAR         shift and go to state 119
    ID              shift and go to state 122

    expresion                      shift and go to state 181
    exp_relational                 shift and go to state 129
    exp                            shift and go to state 130
    term                           shift and go to state 115
    factor                         shift and go to state 116
    function_call                  shift and go to state 120
    identifier                     shift and go to state 121

state 147

    (84) function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 182


state 148

    (95) exp -> term neupoint_arithmetic_exp_quad . exp_operator neupoint_add_operator exp
    (96) exp -> term neupoint_arithmetic_exp_quad .
    (49) exp_operator -> . PLUS
    (50) exp_operator -> . MINUS

    RIGHTPARENTHESIS reduce using rule 96 (exp -> term neupoint_arithmetic_exp_quad .)
    COMPARISON      reduce using rule 96 (exp -> term neupoint_arithmetic_exp_quad .)
    GREATERHANOREQUAL reduce using rule 96 (exp -> term neupoint_arithmetic_exp_quad .)
    LESSTHANOREQUAL reduce using rule 96 (exp -> term neupoint_arithmetic_exp_quad .)
    GREATERTHAN     reduce using rule 96 (exp -> term neupoint_arithmetic_exp_quad .)
    LESSTHAN        reduce using rule 96 (exp -> term neupoint_arithmetic_exp_quad .)
    DIFFERENT       reduce using rule 96 (exp -> term neupoint_arithmetic_exp_quad .)
    AND             reduce using rule 96 (exp -> term neupoint_arithmetic_exp_quad .)
    OR              reduce using rule 96 (exp -> term neupoint_arithmetic_exp_quad .)
    COMMA           reduce using rule 96 (exp -> term neupoint_arithmetic_exp_quad .)
    SEMICOLON       reduce using rule 96 (exp -> term neupoint_arithmetic_exp_quad .)
    RIGHTSQRBRACKET reduce using rule 96 (exp -> term neupoint_arithmetic_exp_quad .)
    TO              reduce using rule 96 (exp -> term neupoint_arithmetic_exp_quad .)
    DO              reduce using rule 96 (exp -> term neupoint_arithmetic_exp_quad .)
    PLUS            shift and go to state 184
    MINUS           shift and go to state 185

    exp_operator                   shift and go to state 183

state 149

    (97) term -> factor neupoint_arithmetic_term_quad . term_operator neupoint_add_operator term
    (98) term -> factor neupoint_arithmetic_term_quad .
    (51) term_operator -> . MULTIPLY
    (52) term_operator -> . DIVIDE
    (53) term_operator -> . MOD

    PLUS            reduce using rule 98 (term -> factor neupoint_arithmetic_term_quad .)
    MINUS           reduce using rule 98 (term -> factor neupoint_arithmetic_term_quad .)
    RIGHTPARENTHESIS reduce using rule 98 (term -> factor neupoint_arithmetic_term_quad .)
    COMPARISON      reduce using rule 98 (term -> factor neupoint_arithmetic_term_quad .)
    GREATERHANOREQUAL reduce using rule 98 (term -> factor neupoint_arithmetic_term_quad .)
    LESSTHANOREQUAL reduce using rule 98 (term -> factor neupoint_arithmetic_term_quad .)
    GREATERTHAN     reduce using rule 98 (term -> factor neupoint_arithmetic_term_quad .)
    LESSTHAN        reduce using rule 98 (term -> factor neupoint_arithmetic_term_quad .)
    DIFFERENT       reduce using rule 98 (term -> factor neupoint_arithmetic_term_quad .)
    AND             reduce using rule 98 (term -> factor neupoint_arithmetic_term_quad .)
    OR              reduce using rule 98 (term -> factor neupoint_arithmetic_term_quad .)
    COMMA           reduce using rule 98 (term -> factor neupoint_arithmetic_term_quad .)
    SEMICOLON       reduce using rule 98 (term -> factor neupoint_arithmetic_term_quad .)
    RIGHTSQRBRACKET reduce using rule 98 (term -> factor neupoint_arithmetic_term_quad .)
    TO              reduce using rule 98 (term -> factor neupoint_arithmetic_term_quad .)
    DO              reduce using rule 98 (term -> factor neupoint_arithmetic_term_quad .)
    MULTIPLY        shift and go to state 187
    DIVIDE          shift and go to state 188
    MOD             shift and go to state 189

    term_operator                  shift and go to state 186

state 150

    (100) factor -> CTEINT neupoint_add_cte_operand .

    MULTIPLY        reduce using rule 100 (factor -> CTEINT neupoint_add_cte_operand .)
    DIVIDE          reduce using rule 100 (factor -> CTEINT neupoint_add_cte_operand .)
    MOD             reduce using rule 100 (factor -> CTEINT neupoint_add_cte_operand .)
    PLUS            reduce using rule 100 (factor -> CTEINT neupoint_add_cte_operand .)
    MINUS           reduce using rule 100 (factor -> CTEINT neupoint_add_cte_operand .)
    RIGHTPARENTHESIS reduce using rule 100 (factor -> CTEINT neupoint_add_cte_operand .)
    COMPARISON      reduce using rule 100 (factor -> CTEINT neupoint_add_cte_operand .)
    GREATERHANOREQUAL reduce using rule 100 (factor -> CTEINT neupoint_add_cte_operand .)
    LESSTHANOREQUAL reduce using rule 100 (factor -> CTEINT neupoint_add_cte_operand .)
    GREATERTHAN     reduce using rule 100 (factor -> CTEINT neupoint_add_cte_operand .)
    LESSTHAN        reduce using rule 100 (factor -> CTEINT neupoint_add_cte_operand .)
    DIFFERENT       reduce using rule 100 (factor -> CTEINT neupoint_add_cte_operand .)
    AND             reduce using rule 100 (factor -> CTEINT neupoint_add_cte_operand .)
    OR              reduce using rule 100 (factor -> CTEINT neupoint_add_cte_operand .)
    COMMA           reduce using rule 100 (factor -> CTEINT neupoint_add_cte_operand .)
    SEMICOLON       reduce using rule 100 (factor -> CTEINT neupoint_add_cte_operand .)
    RIGHTSQRBRACKET reduce using rule 100 (factor -> CTEINT neupoint_add_cte_operand .)
    TO              reduce using rule 100 (factor -> CTEINT neupoint_add_cte_operand .)
    DO              reduce using rule 100 (factor -> CTEINT neupoint_add_cte_operand .)


state 151

    (101) factor -> CTEFLOAT neupoint_add_cte_operand .

    MULTIPLY        reduce using rule 101 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    DIVIDE          reduce using rule 101 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    MOD             reduce using rule 101 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    PLUS            reduce using rule 101 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    MINUS           reduce using rule 101 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    RIGHTPARENTHESIS reduce using rule 101 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    COMPARISON      reduce using rule 101 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    GREATERHANOREQUAL reduce using rule 101 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    LESSTHANOREQUAL reduce using rule 101 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    GREATERTHAN     reduce using rule 101 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    LESSTHAN        reduce using rule 101 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    DIFFERENT       reduce using rule 101 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    AND             reduce using rule 101 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    OR              reduce using rule 101 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    COMMA           reduce using rule 101 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    SEMICOLON       reduce using rule 101 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    RIGHTSQRBRACKET reduce using rule 101 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    TO              reduce using rule 101 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    DO              reduce using rule 101 (factor -> CTEFLOAT neupoint_add_cte_operand .)


state 152

    (102) factor -> CTECHAR neupoint_add_cte_operand .

    MULTIPLY        reduce using rule 102 (factor -> CTECHAR neupoint_add_cte_operand .)
    DIVIDE          reduce using rule 102 (factor -> CTECHAR neupoint_add_cte_operand .)
    MOD             reduce using rule 102 (factor -> CTECHAR neupoint_add_cte_operand .)
    PLUS            reduce using rule 102 (factor -> CTECHAR neupoint_add_cte_operand .)
    MINUS           reduce using rule 102 (factor -> CTECHAR neupoint_add_cte_operand .)
    RIGHTPARENTHESIS reduce using rule 102 (factor -> CTECHAR neupoint_add_cte_operand .)
    COMPARISON      reduce using rule 102 (factor -> CTECHAR neupoint_add_cte_operand .)
    GREATERHANOREQUAL reduce using rule 102 (factor -> CTECHAR neupoint_add_cte_operand .)
    LESSTHANOREQUAL reduce using rule 102 (factor -> CTECHAR neupoint_add_cte_operand .)
    GREATERTHAN     reduce using rule 102 (factor -> CTECHAR neupoint_add_cte_operand .)
    LESSTHAN        reduce using rule 102 (factor -> CTECHAR neupoint_add_cte_operand .)
    DIFFERENT       reduce using rule 102 (factor -> CTECHAR neupoint_add_cte_operand .)
    AND             reduce using rule 102 (factor -> CTECHAR neupoint_add_cte_operand .)
    OR              reduce using rule 102 (factor -> CTECHAR neupoint_add_cte_operand .)
    COMMA           reduce using rule 102 (factor -> CTECHAR neupoint_add_cte_operand .)
    SEMICOLON       reduce using rule 102 (factor -> CTECHAR neupoint_add_cte_operand .)
    RIGHTSQRBRACKET reduce using rule 102 (factor -> CTECHAR neupoint_add_cte_operand .)
    TO              reduce using rule 102 (factor -> CTECHAR neupoint_add_cte_operand .)
    DO              reduce using rule 102 (factor -> CTECHAR neupoint_add_cte_operand .)


state 153

    (70) reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 190


state 154

    (71) reading_list -> identifier COMMA . reading_list
    (71) reading_list -> . identifier COMMA reading_list
    (72) reading_list -> . identifier
    (19) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> . ID neupoint_add_identifier

    ID              shift and go to state 125

    identifier                     shift and go to state 124
    reading_list                   shift and go to state 191

state 155

    (73) writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 192


state 156

    (74) writing_list -> CTESTRING neupoint_add_cte_operand . neupoint_write_quad COMMA writing_list
    (76) writing_list -> CTESTRING neupoint_add_cte_operand . neupoint_write_quad
    (124) neupoint_write_quad -> .

    COMMA           reduce using rule 124 (neupoint_write_quad -> .)
    RIGHTPARENTHESIS reduce using rule 124 (neupoint_write_quad -> .)

    neupoint_write_quad            shift and go to state 193

state 157

    (75) writing_list -> expresion neupoint_write_quad . COMMA writing_list
    (77) writing_list -> expresion neupoint_write_quad .

    COMMA           shift and go to state 194
    RIGHTPARENTHESIS reduce using rule 77 (writing_list -> expresion neupoint_write_quad .)


state 158

    (90) expresion -> exp_relational AND . neupoint_add_operator expresion neupoint_logical_relational_opt
    (105) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 105 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 105 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 105 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 105 (neupoint_add_operator -> .)
    ID              reduce using rule 105 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 195

state 159

    (91) expresion -> exp_relational OR . neupoint_add_operator expresion neupoint_logical_relational_opt
    (105) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 105 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 105 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 105 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 105 (neupoint_add_operator -> .)
    ID              reduce using rule 105 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 196

state 160

    (93) exp_relational -> exp comparators . neupoint_add_operator exp neupoint_logical_relational_opt
    (105) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 105 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 105 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 105 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 105 (neupoint_add_operator -> .)
    ID              reduce using rule 105 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 197

state 161

    (43) comparators -> COMPARISON .

    LEFTPARENTHESIS reduce using rule 43 (comparators -> COMPARISON .)
    CTEINT          reduce using rule 43 (comparators -> COMPARISON .)
    CTEFLOAT        reduce using rule 43 (comparators -> COMPARISON .)
    CTECHAR         reduce using rule 43 (comparators -> COMPARISON .)
    ID              reduce using rule 43 (comparators -> COMPARISON .)


state 162

    (44) comparators -> GREATERHANOREQUAL .

    LEFTPARENTHESIS reduce using rule 44 (comparators -> GREATERHANOREQUAL .)
    CTEINT          reduce using rule 44 (comparators -> GREATERHANOREQUAL .)
    CTEFLOAT        reduce using rule 44 (comparators -> GREATERHANOREQUAL .)
    CTECHAR         reduce using rule 44 (comparators -> GREATERHANOREQUAL .)
    ID              reduce using rule 44 (comparators -> GREATERHANOREQUAL .)


state 163

    (45) comparators -> LESSTHANOREQUAL .

    LEFTPARENTHESIS reduce using rule 45 (comparators -> LESSTHANOREQUAL .)
    CTEINT          reduce using rule 45 (comparators -> LESSTHANOREQUAL .)
    CTEFLOAT        reduce using rule 45 (comparators -> LESSTHANOREQUAL .)
    CTECHAR         reduce using rule 45 (comparators -> LESSTHANOREQUAL .)
    ID              reduce using rule 45 (comparators -> LESSTHANOREQUAL .)


state 164

    (46) comparators -> GREATERTHAN .

    LEFTPARENTHESIS reduce using rule 46 (comparators -> GREATERTHAN .)
    CTEINT          reduce using rule 46 (comparators -> GREATERTHAN .)
    CTEFLOAT        reduce using rule 46 (comparators -> GREATERTHAN .)
    CTECHAR         reduce using rule 46 (comparators -> GREATERTHAN .)
    ID              reduce using rule 46 (comparators -> GREATERTHAN .)


state 165

    (47) comparators -> LESSTHAN .

    LEFTPARENTHESIS reduce using rule 47 (comparators -> LESSTHAN .)
    CTEINT          reduce using rule 47 (comparators -> LESSTHAN .)
    CTEFLOAT        reduce using rule 47 (comparators -> LESSTHAN .)
    CTECHAR         reduce using rule 47 (comparators -> LESSTHAN .)
    ID              reduce using rule 47 (comparators -> LESSTHAN .)


state 166

    (48) comparators -> DIFFERENT .

    LEFTPARENTHESIS reduce using rule 48 (comparators -> DIFFERENT .)
    CTEINT          reduce using rule 48 (comparators -> DIFFERENT .)
    CTEFLOAT        reduce using rule 48 (comparators -> DIFFERENT .)
    CTECHAR         reduce using rule 48 (comparators -> DIFFERENT .)
    ID              reduce using rule 48 (comparators -> DIFFERENT .)


state 167

    (78) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS . neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (79) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS . neupoint_conditional_quad THEN block neupoint_end_conditional_quad
    (114) neupoint_conditional_quad -> .

    THEN            reduce using rule 114 (neupoint_conditional_quad -> .)

    neupoint_conditional_quad      shift and go to state 198

state 168

    (19) identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array . exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array . exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (95) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (96) exp -> . term neupoint_arithmetic_exp_quad
    (97) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (98) term -> . factor neupoint_arithmetic_term_quad
    (99) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (100) factor -> . CTEINT neupoint_add_cte_operand
    (101) factor -> . CTEFLOAT neupoint_add_cte_operand
    (102) factor -> . CTECHAR neupoint_add_cte_operand
    (103) factor -> . function_call
    (104) factor -> . identifier
    (86) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> . ID neupoint_add_identifier

    LEFTPARENTHESIS shift and go to state 113
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118
    CTECHAR         shift and go to state 119
    ID              shift and go to state 122

    exp                            shift and go to state 199
    term                           shift and go to state 115
    factor                         shift and go to state 116
    function_call                  shift and go to state 120
    identifier                     shift and go to state 121

state 169

    (86) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad . neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad . neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (109) neupoint_add_wall -> .

    LEFTPARENTHESIS reduce using rule 109 (neupoint_add_wall -> .)
    CTEINT          reduce using rule 109 (neupoint_add_wall -> .)
    CTEFLOAT        reduce using rule 109 (neupoint_add_wall -> .)
    CTECHAR         reduce using rule 109 (neupoint_add_wall -> .)
    ID              reduce using rule 109 (neupoint_add_wall -> .)
    RIGHTPARENTHESIS reduce using rule 109 (neupoint_add_wall -> .)

    neupoint_add_wall              shift and go to state 200

state 170

    (82) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion . RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end

    RIGHTPARENTHESIS shift and go to state 201


state 171

    (83) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS . neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end
    (105) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 105 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 105 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 105 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 105 (neupoint_add_operator -> .)
    ID              reduce using rule 105 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 202

state 172

    (16) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .

    COMMA           reduce using rule 16 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)
    SEMICOLON       reduce using rule 16 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)
    RIGHTPARENTHESIS reduce using rule 16 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)


state 173

    (32) function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return . neupoint_end_function
    (42) neupoint_end_function -> .

    MODULE          reduce using rule 42 (neupoint_end_function -> .)
    MAIN            reduce using rule 42 (neupoint_end_function -> .)

    neupoint_end_function          shift and go to state 203

state 174

    (33) function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function .

    MODULE          reduce using rule 33 (function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function .)
    MAIN            reduce using rule 33 (function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function .)


state 175

    (36) parameter -> data_type decla_identifier COMMA parameter .

    RIGHTPARENTHESIS reduce using rule 36 (parameter -> data_type decla_identifier COMMA parameter .)


state 176

    (65) assignment -> identifier EQUALS neupoint_add_operator expresion neupoint_assignment_quad . SEMICOLON

    SEMICOLON       shift and go to state 204


state 177

    (66) assignment -> identifier PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad . SEMICOLON

    SEMICOLON       shift and go to state 205


state 178

    (67) assignment -> identifier SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad . SEMICOLON

    SEMICOLON       shift and go to state 206


state 179

    (68) assignment -> identifier INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .

    RETURN          reduce using rule 68 (assignment -> identifier INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    READ            reduce using rule 68 (assignment -> identifier INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    WRITE           reduce using rule 68 (assignment -> identifier INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    IF              reduce using rule 68 (assignment -> identifier INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    ID              reduce using rule 68 (assignment -> identifier INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    WHILE           reduce using rule 68 (assignment -> identifier INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    FOR             reduce using rule 68 (assignment -> identifier INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    RIGHTBRACKET    reduce using rule 68 (assignment -> identifier INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)


state 180

    (69) assignment -> identifier DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .

    RETURN          reduce using rule 69 (assignment -> identifier DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    READ            reduce using rule 69 (assignment -> identifier DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    WRITE           reduce using rule 69 (assignment -> identifier DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    IF              reduce using rule 69 (assignment -> identifier DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    ID              reduce using rule 69 (assignment -> identifier DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    WHILE           reduce using rule 69 (assignment -> identifier DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    FOR             reduce using rule 69 (assignment -> identifier DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    RIGHTBRACKET    reduce using rule 69 (assignment -> identifier DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)


state 181

    (99) factor -> LEFTPARENTHESIS neupoint_add_wall expresion . neupoint_remove_wall RIGHTPARENTHESIS
    (110) neupoint_remove_wall -> .

    RIGHTPARENTHESIS reduce using rule 110 (neupoint_remove_wall -> .)

    neupoint_remove_wall           shift and go to state 207

state 182

    (84) function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .

    RETURN          reduce using rule 84 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    READ            reduce using rule 84 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    WRITE           reduce using rule 84 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    IF              reduce using rule 84 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    ID              reduce using rule 84 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 84 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    FOR             reduce using rule 84 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 84 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)


state 183

    (95) exp -> term neupoint_arithmetic_exp_quad exp_operator . neupoint_add_operator exp
    (105) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 105 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 105 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 105 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 105 (neupoint_add_operator -> .)
    ID              reduce using rule 105 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 208

state 184

    (49) exp_operator -> PLUS .

    LEFTPARENTHESIS reduce using rule 49 (exp_operator -> PLUS .)
    CTEINT          reduce using rule 49 (exp_operator -> PLUS .)
    CTEFLOAT        reduce using rule 49 (exp_operator -> PLUS .)
    CTECHAR         reduce using rule 49 (exp_operator -> PLUS .)
    ID              reduce using rule 49 (exp_operator -> PLUS .)


state 185

    (50) exp_operator -> MINUS .

    LEFTPARENTHESIS reduce using rule 50 (exp_operator -> MINUS .)
    CTEINT          reduce using rule 50 (exp_operator -> MINUS .)
    CTEFLOAT        reduce using rule 50 (exp_operator -> MINUS .)
    CTECHAR         reduce using rule 50 (exp_operator -> MINUS .)
    ID              reduce using rule 50 (exp_operator -> MINUS .)


state 186

    (97) term -> factor neupoint_arithmetic_term_quad term_operator . neupoint_add_operator term
    (105) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 105 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 105 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 105 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 105 (neupoint_add_operator -> .)
    ID              reduce using rule 105 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 209

state 187

    (51) term_operator -> MULTIPLY .

    LEFTPARENTHESIS reduce using rule 51 (term_operator -> MULTIPLY .)
    CTEINT          reduce using rule 51 (term_operator -> MULTIPLY .)
    CTEFLOAT        reduce using rule 51 (term_operator -> MULTIPLY .)
    CTECHAR         reduce using rule 51 (term_operator -> MULTIPLY .)
    ID              reduce using rule 51 (term_operator -> MULTIPLY .)


state 188

    (52) term_operator -> DIVIDE .

    LEFTPARENTHESIS reduce using rule 52 (term_operator -> DIVIDE .)
    CTEINT          reduce using rule 52 (term_operator -> DIVIDE .)
    CTEFLOAT        reduce using rule 52 (term_operator -> DIVIDE .)
    CTECHAR         reduce using rule 52 (term_operator -> DIVIDE .)
    ID              reduce using rule 52 (term_operator -> DIVIDE .)


state 189

    (53) term_operator -> MOD .

    LEFTPARENTHESIS reduce using rule 53 (term_operator -> MOD .)
    CTEINT          reduce using rule 53 (term_operator -> MOD .)
    CTEFLOAT        reduce using rule 53 (term_operator -> MOD .)
    CTECHAR         reduce using rule 53 (term_operator -> MOD .)
    ID              reduce using rule 53 (term_operator -> MOD .)


state 190

    (70) reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .

    RETURN          reduce using rule 70 (reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .)
    READ            reduce using rule 70 (reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .)
    WRITE           reduce using rule 70 (reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .)
    IF              reduce using rule 70 (reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .)
    ID              reduce using rule 70 (reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 70 (reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .)
    FOR             reduce using rule 70 (reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 70 (reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .)


state 191

    (71) reading_list -> identifier COMMA reading_list .

    RIGHTPARENTHESIS reduce using rule 71 (reading_list -> identifier COMMA reading_list .)


state 192

    (73) writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .

    RETURN          reduce using rule 73 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    READ            reduce using rule 73 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    WRITE           reduce using rule 73 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    IF              reduce using rule 73 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    ID              reduce using rule 73 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 73 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    FOR             reduce using rule 73 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 73 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)


state 193

    (74) writing_list -> CTESTRING neupoint_add_cte_operand neupoint_write_quad . COMMA writing_list
    (76) writing_list -> CTESTRING neupoint_add_cte_operand neupoint_write_quad .

    COMMA           shift and go to state 210
    RIGHTPARENTHESIS reduce using rule 76 (writing_list -> CTESTRING neupoint_add_cte_operand neupoint_write_quad .)


state 194

    (75) writing_list -> expresion neupoint_write_quad COMMA . writing_list
    (74) writing_list -> . CTESTRING neupoint_add_cte_operand neupoint_write_quad COMMA writing_list
    (75) writing_list -> . expresion neupoint_write_quad COMMA writing_list
    (76) writing_list -> . CTESTRING neupoint_add_cte_operand neupoint_write_quad
    (77) writing_list -> . expresion neupoint_write_quad
    (90) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (91) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (92) expresion -> . exp_relational
    (93) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (94) exp_relational -> . exp
    (95) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (96) exp -> . term neupoint_arithmetic_exp_quad
    (97) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (98) term -> . factor neupoint_arithmetic_term_quad
    (99) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (100) factor -> . CTEINT neupoint_add_cte_operand
    (101) factor -> . CTEFLOAT neupoint_add_cte_operand
    (102) factor -> . CTECHAR neupoint_add_cte_operand
    (103) factor -> . function_call
    (104) factor -> . identifier
    (86) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> . ID neupoint_add_identifier

    CTESTRING       shift and go to state 127
    LEFTPARENTHESIS shift and go to state 113
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118
    CTECHAR         shift and go to state 119
    ID              shift and go to state 122

    expresion                      shift and go to state 128
    writing_list                   shift and go to state 211
    exp_relational                 shift and go to state 129
    exp                            shift and go to state 130
    term                           shift and go to state 115
    factor                         shift and go to state 116
    function_call                  shift and go to state 120
    identifier                     shift and go to state 121

state 195

    (90) expresion -> exp_relational AND neupoint_add_operator . expresion neupoint_logical_relational_opt
    (90) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (91) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (92) expresion -> . exp_relational
    (93) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (94) exp_relational -> . exp
    (95) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (96) exp -> . term neupoint_arithmetic_exp_quad
    (97) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (98) term -> . factor neupoint_arithmetic_term_quad
    (99) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (100) factor -> . CTEINT neupoint_add_cte_operand
    (101) factor -> . CTEFLOAT neupoint_add_cte_operand
    (102) factor -> . CTECHAR neupoint_add_cte_operand
    (103) factor -> . function_call
    (104) factor -> . identifier
    (86) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> . ID neupoint_add_identifier

    LEFTPARENTHESIS shift and go to state 113
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118
    CTECHAR         shift and go to state 119
    ID              shift and go to state 122

    exp_relational                 shift and go to state 129
    expresion                      shift and go to state 212
    exp                            shift and go to state 130
    term                           shift and go to state 115
    factor                         shift and go to state 116
    function_call                  shift and go to state 120
    identifier                     shift and go to state 121

state 196

    (91) expresion -> exp_relational OR neupoint_add_operator . expresion neupoint_logical_relational_opt
    (90) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (91) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (92) expresion -> . exp_relational
    (93) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (94) exp_relational -> . exp
    (95) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (96) exp -> . term neupoint_arithmetic_exp_quad
    (97) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (98) term -> . factor neupoint_arithmetic_term_quad
    (99) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (100) factor -> . CTEINT neupoint_add_cte_operand
    (101) factor -> . CTEFLOAT neupoint_add_cte_operand
    (102) factor -> . CTECHAR neupoint_add_cte_operand
    (103) factor -> . function_call
    (104) factor -> . identifier
    (86) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> . ID neupoint_add_identifier

    LEFTPARENTHESIS shift and go to state 113
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118
    CTECHAR         shift and go to state 119
    ID              shift and go to state 122

    exp_relational                 shift and go to state 129
    expresion                      shift and go to state 213
    exp                            shift and go to state 130
    term                           shift and go to state 115
    factor                         shift and go to state 116
    function_call                  shift and go to state 120
    identifier                     shift and go to state 121

state 197

    (93) exp_relational -> exp comparators neupoint_add_operator . exp neupoint_logical_relational_opt
    (95) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (96) exp -> . term neupoint_arithmetic_exp_quad
    (97) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (98) term -> . factor neupoint_arithmetic_term_quad
    (99) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (100) factor -> . CTEINT neupoint_add_cte_operand
    (101) factor -> . CTEFLOAT neupoint_add_cte_operand
    (102) factor -> . CTECHAR neupoint_add_cte_operand
    (103) factor -> . function_call
    (104) factor -> . identifier
    (86) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> . ID neupoint_add_identifier

    LEFTPARENTHESIS shift and go to state 113
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118
    CTECHAR         shift and go to state 119
    ID              shift and go to state 122

    exp                            shift and go to state 214
    term                           shift and go to state 115
    factor                         shift and go to state 116
    function_call                  shift and go to state 120
    identifier                     shift and go to state 121

state 198

    (78) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad . THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (79) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad . THEN block neupoint_end_conditional_quad

    THEN            shift and go to state 215


state 199

    (19) identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp . neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp . neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (110) neupoint_remove_wall -> .

    RIGHTSQRBRACKET reduce using rule 110 (neupoint_remove_wall -> .)

    neupoint_remove_wall           shift and go to state 216

state 200

    (86) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall . ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall . neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (88) ags_list -> . expresion neupoint_validate_args COMMA ags_list
    (89) ags_list -> . expresion neupoint_validate_args
    (122) neupoint_validate_num_args -> .
    (90) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (91) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (92) expresion -> . exp_relational
    (93) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (94) exp_relational -> . exp
    (95) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (96) exp -> . term neupoint_arithmetic_exp_quad
    (97) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (98) term -> . factor neupoint_arithmetic_term_quad
    (99) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (100) factor -> . CTEINT neupoint_add_cte_operand
    (101) factor -> . CTEFLOAT neupoint_add_cte_operand
    (102) factor -> . CTECHAR neupoint_add_cte_operand
    (103) factor -> . function_call
    (104) factor -> . identifier
    (86) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> . ID neupoint_add_identifier

    RIGHTPARENTHESIS reduce using rule 122 (neupoint_validate_num_args -> .)
    LEFTPARENTHESIS shift and go to state 113
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118
    CTECHAR         shift and go to state 119
    ID              shift and go to state 122

    ags_list                       shift and go to state 217
    neupoint_validate_num_args     shift and go to state 218
    expresion                      shift and go to state 219
    exp_relational                 shift and go to state 129
    exp                            shift and go to state 130
    term                           shift and go to state 115
    factor                         shift and go to state 116
    function_call                  shift and go to state 120
    identifier                     shift and go to state 121

state 201

    (82) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS . neupoint_conditional_quad DO block neupoint_while_end
    (114) neupoint_conditional_quad -> .

    DO              reduce using rule 114 (neupoint_conditional_quad -> .)

    neupoint_conditional_quad      shift and go to state 220

state 202

    (83) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator . exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end
    (95) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (96) exp -> . term neupoint_arithmetic_exp_quad
    (97) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (98) term -> . factor neupoint_arithmetic_term_quad
    (99) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (100) factor -> . CTEINT neupoint_add_cte_operand
    (101) factor -> . CTEFLOAT neupoint_add_cte_operand
    (102) factor -> . CTECHAR neupoint_add_cte_operand
    (103) factor -> . function_call
    (104) factor -> . identifier
    (86) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> . ID neupoint_add_identifier

    LEFTPARENTHESIS shift and go to state 113
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118
    CTECHAR         shift and go to state 119
    ID              shift and go to state 122

    exp                            shift and go to state 221
    term                           shift and go to state 115
    factor                         shift and go to state 116
    function_call                  shift and go to state 120
    identifier                     shift and go to state 121

state 203

    (32) function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function .

    MODULE          reduce using rule 32 (function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function .)
    MAIN            reduce using rule 32 (function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function .)


state 204

    (65) assignment -> identifier EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .

    RETURN          reduce using rule 65 (assignment -> identifier EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    READ            reduce using rule 65 (assignment -> identifier EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    WRITE           reduce using rule 65 (assignment -> identifier EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    IF              reduce using rule 65 (assignment -> identifier EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    ID              reduce using rule 65 (assignment -> identifier EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    WHILE           reduce using rule 65 (assignment -> identifier EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    FOR             reduce using rule 65 (assignment -> identifier EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    RIGHTBRACKET    reduce using rule 65 (assignment -> identifier EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)


state 205

    (66) assignment -> identifier PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .

    RETURN          reduce using rule 66 (assignment -> identifier PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    READ            reduce using rule 66 (assignment -> identifier PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    WRITE           reduce using rule 66 (assignment -> identifier PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    IF              reduce using rule 66 (assignment -> identifier PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    ID              reduce using rule 66 (assignment -> identifier PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    WHILE           reduce using rule 66 (assignment -> identifier PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    FOR             reduce using rule 66 (assignment -> identifier PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    RIGHTBRACKET    reduce using rule 66 (assignment -> identifier PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)


state 206

    (67) assignment -> identifier SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .

    RETURN          reduce using rule 67 (assignment -> identifier SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    READ            reduce using rule 67 (assignment -> identifier SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    WRITE           reduce using rule 67 (assignment -> identifier SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    IF              reduce using rule 67 (assignment -> identifier SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    ID              reduce using rule 67 (assignment -> identifier SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    WHILE           reduce using rule 67 (assignment -> identifier SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    FOR             reduce using rule 67 (assignment -> identifier SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    RIGHTBRACKET    reduce using rule 67 (assignment -> identifier SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)


state 207

    (99) factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall . RIGHTPARENTHESIS

    RIGHTPARENTHESIS shift and go to state 222


state 208

    (95) exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator . exp
    (95) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (96) exp -> . term neupoint_arithmetic_exp_quad
    (97) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (98) term -> . factor neupoint_arithmetic_term_quad
    (99) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (100) factor -> . CTEINT neupoint_add_cte_operand
    (101) factor -> . CTEFLOAT neupoint_add_cte_operand
    (102) factor -> . CTECHAR neupoint_add_cte_operand
    (103) factor -> . function_call
    (104) factor -> . identifier
    (86) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> . ID neupoint_add_identifier

    LEFTPARENTHESIS shift and go to state 113
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118
    CTECHAR         shift and go to state 119
    ID              shift and go to state 122

    term                           shift and go to state 115
    exp                            shift and go to state 223
    factor                         shift and go to state 116
    function_call                  shift and go to state 120
    identifier                     shift and go to state 121

state 209

    (97) term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator . term
    (97) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (98) term -> . factor neupoint_arithmetic_term_quad
    (99) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (100) factor -> . CTEINT neupoint_add_cte_operand
    (101) factor -> . CTEFLOAT neupoint_add_cte_operand
    (102) factor -> . CTECHAR neupoint_add_cte_operand
    (103) factor -> . function_call
    (104) factor -> . identifier
    (86) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> . ID neupoint_add_identifier

    LEFTPARENTHESIS shift and go to state 113
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118
    CTECHAR         shift and go to state 119
    ID              shift and go to state 122

    factor                         shift and go to state 116
    term                           shift and go to state 224
    function_call                  shift and go to state 120
    identifier                     shift and go to state 121

state 210

    (74) writing_list -> CTESTRING neupoint_add_cte_operand neupoint_write_quad COMMA . writing_list
    (74) writing_list -> . CTESTRING neupoint_add_cte_operand neupoint_write_quad COMMA writing_list
    (75) writing_list -> . expresion neupoint_write_quad COMMA writing_list
    (76) writing_list -> . CTESTRING neupoint_add_cte_operand neupoint_write_quad
    (77) writing_list -> . expresion neupoint_write_quad
    (90) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (91) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (92) expresion -> . exp_relational
    (93) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (94) exp_relational -> . exp
    (95) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (96) exp -> . term neupoint_arithmetic_exp_quad
    (97) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (98) term -> . factor neupoint_arithmetic_term_quad
    (99) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (100) factor -> . CTEINT neupoint_add_cte_operand
    (101) factor -> . CTEFLOAT neupoint_add_cte_operand
    (102) factor -> . CTECHAR neupoint_add_cte_operand
    (103) factor -> . function_call
    (104) factor -> . identifier
    (86) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> . ID neupoint_add_identifier

    CTESTRING       shift and go to state 127
    LEFTPARENTHESIS shift and go to state 113
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118
    CTECHAR         shift and go to state 119
    ID              shift and go to state 122

    writing_list                   shift and go to state 225
    expresion                      shift and go to state 128
    exp_relational                 shift and go to state 129
    exp                            shift and go to state 130
    term                           shift and go to state 115
    factor                         shift and go to state 116
    function_call                  shift and go to state 120
    identifier                     shift and go to state 121

state 211

    (75) writing_list -> expresion neupoint_write_quad COMMA writing_list .

    RIGHTPARENTHESIS reduce using rule 75 (writing_list -> expresion neupoint_write_quad COMMA writing_list .)


state 212

    (90) expresion -> exp_relational AND neupoint_add_operator expresion . neupoint_logical_relational_opt
    (113) neupoint_logical_relational_opt -> .

    COMMA           reduce using rule 113 (neupoint_logical_relational_opt -> .)
    RIGHTPARENTHESIS reduce using rule 113 (neupoint_logical_relational_opt -> .)
    SEMICOLON       reduce using rule 113 (neupoint_logical_relational_opt -> .)

    neupoint_logical_relational_opt shift and go to state 226

state 213

    (91) expresion -> exp_relational OR neupoint_add_operator expresion . neupoint_logical_relational_opt
    (113) neupoint_logical_relational_opt -> .

    COMMA           reduce using rule 113 (neupoint_logical_relational_opt -> .)
    RIGHTPARENTHESIS reduce using rule 113 (neupoint_logical_relational_opt -> .)
    SEMICOLON       reduce using rule 113 (neupoint_logical_relational_opt -> .)

    neupoint_logical_relational_opt shift and go to state 227

state 214

    (93) exp_relational -> exp comparators neupoint_add_operator exp . neupoint_logical_relational_opt
    (113) neupoint_logical_relational_opt -> .

    AND             reduce using rule 113 (neupoint_logical_relational_opt -> .)
    OR              reduce using rule 113 (neupoint_logical_relational_opt -> .)
    COMMA           reduce using rule 113 (neupoint_logical_relational_opt -> .)
    RIGHTPARENTHESIS reduce using rule 113 (neupoint_logical_relational_opt -> .)
    SEMICOLON       reduce using rule 113 (neupoint_logical_relational_opt -> .)

    neupoint_logical_relational_opt shift and go to state 228

state 215

    (78) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN . block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (79) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN . block neupoint_end_conditional_quad
    (54) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (55) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 46

    block                          shift and go to state 229

state 216

    (19) identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall . RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall . RIGHTSQRBRACKET neupoint_update_array_addr

    RIGHTSQRBRACKET shift and go to state 230


state 217

    (86) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list . neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (122) neupoint_validate_num_args -> .

    RIGHTPARENTHESIS reduce using rule 122 (neupoint_validate_num_args -> .)

    neupoint_validate_num_args     shift and go to state 231

state 218

    (87) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args . RIGHTPARENTHESIS neupoint_gosub_quad

    RIGHTPARENTHESIS shift and go to state 232


state 219

    (88) ags_list -> expresion . neupoint_validate_args COMMA ags_list
    (89) ags_list -> expresion . neupoint_validate_args
    (121) neupoint_validate_args -> .

    COMMA           reduce using rule 121 (neupoint_validate_args -> .)
    RIGHTPARENTHESIS reduce using rule 121 (neupoint_validate_args -> .)

    neupoint_validate_args         shift and go to state 233

state 220

    (82) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad . DO block neupoint_while_end

    DO              shift and go to state 234


state 221

    (83) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp . neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end
    (111) neupoint_assignment_quad -> .

    TO              reduce using rule 111 (neupoint_assignment_quad -> .)

    neupoint_assignment_quad       shift and go to state 235

state 222

    (99) factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .

    MULTIPLY        reduce using rule 99 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    DIVIDE          reduce using rule 99 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    MOD             reduce using rule 99 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    PLUS            reduce using rule 99 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    MINUS           reduce using rule 99 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    RIGHTPARENTHESIS reduce using rule 99 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    COMPARISON      reduce using rule 99 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    GREATERHANOREQUAL reduce using rule 99 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    LESSTHANOREQUAL reduce using rule 99 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    GREATERTHAN     reduce using rule 99 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    LESSTHAN        reduce using rule 99 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    DIFFERENT       reduce using rule 99 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    AND             reduce using rule 99 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    OR              reduce using rule 99 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    COMMA           reduce using rule 99 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    SEMICOLON       reduce using rule 99 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    RIGHTSQRBRACKET reduce using rule 99 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    TO              reduce using rule 99 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    DO              reduce using rule 99 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)


state 223

    (95) exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .

    RIGHTPARENTHESIS reduce using rule 95 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    COMPARISON      reduce using rule 95 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    GREATERHANOREQUAL reduce using rule 95 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    LESSTHANOREQUAL reduce using rule 95 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    GREATERTHAN     reduce using rule 95 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    LESSTHAN        reduce using rule 95 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    DIFFERENT       reduce using rule 95 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    AND             reduce using rule 95 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    OR              reduce using rule 95 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    COMMA           reduce using rule 95 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    SEMICOLON       reduce using rule 95 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    RIGHTSQRBRACKET reduce using rule 95 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    TO              reduce using rule 95 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    DO              reduce using rule 95 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)


state 224

    (97) term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .

    PLUS            reduce using rule 97 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    MINUS           reduce using rule 97 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    RIGHTPARENTHESIS reduce using rule 97 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    COMPARISON      reduce using rule 97 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    GREATERHANOREQUAL reduce using rule 97 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    LESSTHANOREQUAL reduce using rule 97 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    GREATERTHAN     reduce using rule 97 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    LESSTHAN        reduce using rule 97 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    DIFFERENT       reduce using rule 97 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    AND             reduce using rule 97 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    OR              reduce using rule 97 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    COMMA           reduce using rule 97 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    SEMICOLON       reduce using rule 97 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    RIGHTSQRBRACKET reduce using rule 97 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    TO              reduce using rule 97 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    DO              reduce using rule 97 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)


state 225

    (74) writing_list -> CTESTRING neupoint_add_cte_operand neupoint_write_quad COMMA writing_list .

    RIGHTPARENTHESIS reduce using rule 74 (writing_list -> CTESTRING neupoint_add_cte_operand neupoint_write_quad COMMA writing_list .)


state 226

    (90) expresion -> exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt .

    COMMA           reduce using rule 90 (expresion -> exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt .)
    RIGHTPARENTHESIS reduce using rule 90 (expresion -> exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt .)
    SEMICOLON       reduce using rule 90 (expresion -> exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt .)


state 227

    (91) expresion -> exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt .

    COMMA           reduce using rule 91 (expresion -> exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt .)
    RIGHTPARENTHESIS reduce using rule 91 (expresion -> exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt .)
    SEMICOLON       reduce using rule 91 (expresion -> exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt .)


state 228

    (93) exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .

    AND             reduce using rule 93 (exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .)
    OR              reduce using rule 93 (exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .)
    COMMA           reduce using rule 93 (exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .)
    RIGHTPARENTHESIS reduce using rule 93 (exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .)
    SEMICOLON       reduce using rule 93 (exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .)


state 229

    (78) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block . ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (79) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block . neupoint_end_conditional_quad
    (116) neupoint_end_conditional_quad -> .

    ELSE            shift and go to state 236
    RETURN          reduce using rule 116 (neupoint_end_conditional_quad -> .)
    READ            reduce using rule 116 (neupoint_end_conditional_quad -> .)
    WRITE           reduce using rule 116 (neupoint_end_conditional_quad -> .)
    IF              reduce using rule 116 (neupoint_end_conditional_quad -> .)
    ID              reduce using rule 116 (neupoint_end_conditional_quad -> .)
    WHILE           reduce using rule 116 (neupoint_end_conditional_quad -> .)
    FOR             reduce using rule 116 (neupoint_end_conditional_quad -> .)
    RIGHTBRACKET    reduce using rule 116 (neupoint_end_conditional_quad -> .)

    neupoint_end_conditional_quad  shift and go to state 237

state 230

    (19) identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET . LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET . neupoint_update_array_addr
    (26) neupoint_update_array_addr -> .

    LEFTSQRBRACKET  shift and go to state 238
    EQUALS          reduce using rule 26 (neupoint_update_array_addr -> .)
    PLUSEQUALS      reduce using rule 26 (neupoint_update_array_addr -> .)
    SUBSTRACTEQUALS reduce using rule 26 (neupoint_update_array_addr -> .)
    INCREMENT       reduce using rule 26 (neupoint_update_array_addr -> .)
    DECREMENT       reduce using rule 26 (neupoint_update_array_addr -> .)
    MULTIPLY        reduce using rule 26 (neupoint_update_array_addr -> .)
    DIVIDE          reduce using rule 26 (neupoint_update_array_addr -> .)
    MOD             reduce using rule 26 (neupoint_update_array_addr -> .)
    PLUS            reduce using rule 26 (neupoint_update_array_addr -> .)
    MINUS           reduce using rule 26 (neupoint_update_array_addr -> .)
    RIGHTPARENTHESIS reduce using rule 26 (neupoint_update_array_addr -> .)
    COMMA           reduce using rule 26 (neupoint_update_array_addr -> .)
    COMPARISON      reduce using rule 26 (neupoint_update_array_addr -> .)
    GREATERHANOREQUAL reduce using rule 26 (neupoint_update_array_addr -> .)
    LESSTHANOREQUAL reduce using rule 26 (neupoint_update_array_addr -> .)
    GREATERTHAN     reduce using rule 26 (neupoint_update_array_addr -> .)
    LESSTHAN        reduce using rule 26 (neupoint_update_array_addr -> .)
    DIFFERENT       reduce using rule 26 (neupoint_update_array_addr -> .)
    AND             reduce using rule 26 (neupoint_update_array_addr -> .)
    OR              reduce using rule 26 (neupoint_update_array_addr -> .)
    SEMICOLON       reduce using rule 26 (neupoint_update_array_addr -> .)
    RIGHTSQRBRACKET reduce using rule 26 (neupoint_update_array_addr -> .)
    TO              reduce using rule 26 (neupoint_update_array_addr -> .)
    DO              reduce using rule 26 (neupoint_update_array_addr -> .)

    neupoint_update_array_addr     shift and go to state 239

state 231

    (86) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args . RIGHTPARENTHESIS neupoint_gosub_quad

    RIGHTPARENTHESIS shift and go to state 240


state 232

    (87) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS . neupoint_gosub_quad
    (123) neupoint_gosub_quad -> .

    SEMICOLON       reduce using rule 123 (neupoint_gosub_quad -> .)
    MULTIPLY        reduce using rule 123 (neupoint_gosub_quad -> .)
    DIVIDE          reduce using rule 123 (neupoint_gosub_quad -> .)
    MOD             reduce using rule 123 (neupoint_gosub_quad -> .)
    PLUS            reduce using rule 123 (neupoint_gosub_quad -> .)
    MINUS           reduce using rule 123 (neupoint_gosub_quad -> .)
    RIGHTPARENTHESIS reduce using rule 123 (neupoint_gosub_quad -> .)
    COMPARISON      reduce using rule 123 (neupoint_gosub_quad -> .)
    GREATERHANOREQUAL reduce using rule 123 (neupoint_gosub_quad -> .)
    LESSTHANOREQUAL reduce using rule 123 (neupoint_gosub_quad -> .)
    GREATERTHAN     reduce using rule 123 (neupoint_gosub_quad -> .)
    LESSTHAN        reduce using rule 123 (neupoint_gosub_quad -> .)
    DIFFERENT       reduce using rule 123 (neupoint_gosub_quad -> .)
    AND             reduce using rule 123 (neupoint_gosub_quad -> .)
    OR              reduce using rule 123 (neupoint_gosub_quad -> .)
    COMMA           reduce using rule 123 (neupoint_gosub_quad -> .)
    RIGHTSQRBRACKET reduce using rule 123 (neupoint_gosub_quad -> .)
    TO              reduce using rule 123 (neupoint_gosub_quad -> .)
    DO              reduce using rule 123 (neupoint_gosub_quad -> .)

    neupoint_gosub_quad            shift and go to state 241

state 233

    (88) ags_list -> expresion neupoint_validate_args . COMMA ags_list
    (89) ags_list -> expresion neupoint_validate_args .

    COMMA           shift and go to state 242
    RIGHTPARENTHESIS reduce using rule 89 (ags_list -> expresion neupoint_validate_args .)


state 234

    (82) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO . block neupoint_while_end
    (54) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (55) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 46

    block                          shift and go to state 243

state 235

    (83) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad . neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end
    (126) neupoint_add_operand_for -> .

    TO              reduce using rule 126 (neupoint_add_operand_for -> .)

    neupoint_add_operand_for       shift and go to state 244

state 236

    (78) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE . neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (115) neupoint_else_conditional_quad -> .

    LEFTBRACKET     reduce using rule 115 (neupoint_else_conditional_quad -> .)

    neupoint_else_conditional_quad shift and go to state 245

state 237

    (79) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .

    RETURN          reduce using rule 79 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    READ            reduce using rule 79 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    WRITE           reduce using rule 79 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    IF              reduce using rule 79 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    ID              reduce using rule 79 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    WHILE           reduce using rule 79 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    FOR             reduce using rule 79 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    RIGHTBRACKET    reduce using rule 79 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)


state 238

    (19) identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET . neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (25) neupoint_index_matrix -> .

    LEFTPARENTHESIS reduce using rule 25 (neupoint_index_matrix -> .)
    CTEINT          reduce using rule 25 (neupoint_index_matrix -> .)
    CTEFLOAT        reduce using rule 25 (neupoint_index_matrix -> .)
    CTECHAR         reduce using rule 25 (neupoint_index_matrix -> .)
    ID              reduce using rule 25 (neupoint_index_matrix -> .)

    neupoint_index_matrix          shift and go to state 246

state 239

    (20) identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr .

    EQUALS          reduce using rule 20 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr .)
    PLUSEQUALS      reduce using rule 20 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr .)
    SUBSTRACTEQUALS reduce using rule 20 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr .)
    INCREMENT       reduce using rule 20 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr .)
    DECREMENT       reduce using rule 20 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr .)
    MULTIPLY        reduce using rule 20 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr .)
    DIVIDE          reduce using rule 20 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr .)
    MOD             reduce using rule 20 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr .)
    PLUS            reduce using rule 20 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr .)
    MINUS           reduce using rule 20 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr .)
    RIGHTPARENTHESIS reduce using rule 20 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr .)
    COMMA           reduce using rule 20 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr .)
    COMPARISON      reduce using rule 20 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr .)
    GREATERHANOREQUAL reduce using rule 20 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr .)
    LESSTHANOREQUAL reduce using rule 20 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr .)
    GREATERTHAN     reduce using rule 20 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr .)
    LESSTHAN        reduce using rule 20 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr .)
    DIFFERENT       reduce using rule 20 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr .)
    AND             reduce using rule 20 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr .)
    OR              reduce using rule 20 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr .)
    SEMICOLON       reduce using rule 20 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr .)
    RIGHTSQRBRACKET reduce using rule 20 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr .)
    TO              reduce using rule 20 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr .)
    DO              reduce using rule 20 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr .)


state 240

    (86) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS . neupoint_gosub_quad
    (123) neupoint_gosub_quad -> .

    SEMICOLON       reduce using rule 123 (neupoint_gosub_quad -> .)
    MULTIPLY        reduce using rule 123 (neupoint_gosub_quad -> .)
    DIVIDE          reduce using rule 123 (neupoint_gosub_quad -> .)
    MOD             reduce using rule 123 (neupoint_gosub_quad -> .)
    PLUS            reduce using rule 123 (neupoint_gosub_quad -> .)
    MINUS           reduce using rule 123 (neupoint_gosub_quad -> .)
    RIGHTPARENTHESIS reduce using rule 123 (neupoint_gosub_quad -> .)
    COMPARISON      reduce using rule 123 (neupoint_gosub_quad -> .)
    GREATERHANOREQUAL reduce using rule 123 (neupoint_gosub_quad -> .)
    LESSTHANOREQUAL reduce using rule 123 (neupoint_gosub_quad -> .)
    GREATERTHAN     reduce using rule 123 (neupoint_gosub_quad -> .)
    LESSTHAN        reduce using rule 123 (neupoint_gosub_quad -> .)
    DIFFERENT       reduce using rule 123 (neupoint_gosub_quad -> .)
    AND             reduce using rule 123 (neupoint_gosub_quad -> .)
    OR              reduce using rule 123 (neupoint_gosub_quad -> .)
    COMMA           reduce using rule 123 (neupoint_gosub_quad -> .)
    RIGHTSQRBRACKET reduce using rule 123 (neupoint_gosub_quad -> .)
    TO              reduce using rule 123 (neupoint_gosub_quad -> .)
    DO              reduce using rule 123 (neupoint_gosub_quad -> .)

    neupoint_gosub_quad            shift and go to state 247

state 241

    (87) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .

    SEMICOLON       reduce using rule 87 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    MULTIPLY        reduce using rule 87 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    DIVIDE          reduce using rule 87 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    MOD             reduce using rule 87 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    PLUS            reduce using rule 87 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    MINUS           reduce using rule 87 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    RIGHTPARENTHESIS reduce using rule 87 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    COMPARISON      reduce using rule 87 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    GREATERHANOREQUAL reduce using rule 87 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    LESSTHANOREQUAL reduce using rule 87 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    GREATERTHAN     reduce using rule 87 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    LESSTHAN        reduce using rule 87 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    DIFFERENT       reduce using rule 87 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    AND             reduce using rule 87 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    OR              reduce using rule 87 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    COMMA           reduce using rule 87 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    RIGHTSQRBRACKET reduce using rule 87 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    TO              reduce using rule 87 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    DO              reduce using rule 87 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)


state 242

    (88) ags_list -> expresion neupoint_validate_args COMMA . ags_list
    (88) ags_list -> . expresion neupoint_validate_args COMMA ags_list
    (89) ags_list -> . expresion neupoint_validate_args
    (90) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (91) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (92) expresion -> . exp_relational
    (93) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (94) exp_relational -> . exp
    (95) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (96) exp -> . term neupoint_arithmetic_exp_quad
    (97) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (98) term -> . factor neupoint_arithmetic_term_quad
    (99) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (100) factor -> . CTEINT neupoint_add_cte_operand
    (101) factor -> . CTEFLOAT neupoint_add_cte_operand
    (102) factor -> . CTECHAR neupoint_add_cte_operand
    (103) factor -> . function_call
    (104) factor -> . identifier
    (86) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> . ID neupoint_add_identifier

    LEFTPARENTHESIS shift and go to state 113
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118
    CTECHAR         shift and go to state 119
    ID              shift and go to state 122

    expresion                      shift and go to state 219
    ags_list                       shift and go to state 248
    exp_relational                 shift and go to state 129
    exp                            shift and go to state 130
    term                           shift and go to state 115
    factor                         shift and go to state 116
    function_call                  shift and go to state 120
    identifier                     shift and go to state 121

state 243

    (82) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block . neupoint_while_end
    (118) neupoint_while_end -> .

    RETURN          reduce using rule 118 (neupoint_while_end -> .)
    READ            reduce using rule 118 (neupoint_while_end -> .)
    WRITE           reduce using rule 118 (neupoint_while_end -> .)
    IF              reduce using rule 118 (neupoint_while_end -> .)
    ID              reduce using rule 118 (neupoint_while_end -> .)
    WHILE           reduce using rule 118 (neupoint_while_end -> .)
    FOR             reduce using rule 118 (neupoint_while_end -> .)
    RIGHTBRACKET    reduce using rule 118 (neupoint_while_end -> .)

    neupoint_while_end             shift and go to state 249

state 244

    (83) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for . TO exp neupoint_comparison_quad DO block neupoint_for_end

    TO              shift and go to state 250


state 245

    (78) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad . block neupoint_end_conditional_quad
    (54) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (55) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 46

    block                          shift and go to state 251

state 246

    (19) identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix . exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (95) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (96) exp -> . term neupoint_arithmetic_exp_quad
    (97) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (98) term -> . factor neupoint_arithmetic_term_quad
    (99) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (100) factor -> . CTEINT neupoint_add_cte_operand
    (101) factor -> . CTEFLOAT neupoint_add_cte_operand
    (102) factor -> . CTECHAR neupoint_add_cte_operand
    (103) factor -> . function_call
    (104) factor -> . identifier
    (86) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> . ID neupoint_add_identifier

    LEFTPARENTHESIS shift and go to state 113
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118
    CTECHAR         shift and go to state 119
    ID              shift and go to state 122

    exp                            shift and go to state 252
    term                           shift and go to state 115
    factor                         shift and go to state 116
    function_call                  shift and go to state 120
    identifier                     shift and go to state 121

state 247

    (86) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .

    SEMICOLON       reduce using rule 86 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    MULTIPLY        reduce using rule 86 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    DIVIDE          reduce using rule 86 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    MOD             reduce using rule 86 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    PLUS            reduce using rule 86 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    MINUS           reduce using rule 86 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    RIGHTPARENTHESIS reduce using rule 86 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    COMPARISON      reduce using rule 86 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    GREATERHANOREQUAL reduce using rule 86 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    LESSTHANOREQUAL reduce using rule 86 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    GREATERTHAN     reduce using rule 86 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    LESSTHAN        reduce using rule 86 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    DIFFERENT       reduce using rule 86 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    AND             reduce using rule 86 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    OR              reduce using rule 86 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    COMMA           reduce using rule 86 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    RIGHTSQRBRACKET reduce using rule 86 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    TO              reduce using rule 86 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    DO              reduce using rule 86 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)


state 248

    (88) ags_list -> expresion neupoint_validate_args COMMA ags_list .

    RIGHTPARENTHESIS reduce using rule 88 (ags_list -> expresion neupoint_validate_args COMMA ags_list .)


state 249

    (82) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .

    RETURN          reduce using rule 82 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    READ            reduce using rule 82 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    WRITE           reduce using rule 82 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    IF              reduce using rule 82 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    ID              reduce using rule 82 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    WHILE           reduce using rule 82 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    FOR             reduce using rule 82 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    RIGHTBRACKET    reduce using rule 82 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)


state 250

    (83) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO . exp neupoint_comparison_quad DO block neupoint_for_end
    (95) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (96) exp -> . term neupoint_arithmetic_exp_quad
    (97) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (98) term -> . factor neupoint_arithmetic_term_quad
    (99) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (100) factor -> . CTEINT neupoint_add_cte_operand
    (101) factor -> . CTEFLOAT neupoint_add_cte_operand
    (102) factor -> . CTECHAR neupoint_add_cte_operand
    (103) factor -> . function_call
    (104) factor -> . identifier
    (86) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (87) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (20) identifier -> . ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_array_addr
    (21) identifier -> . ID neupoint_add_identifier

    LEFTPARENTHESIS shift and go to state 113
    CTEINT          shift and go to state 117
    CTEFLOAT        shift and go to state 118
    CTECHAR         shift and go to state 119
    ID              shift and go to state 122

    exp                            shift and go to state 253
    term                           shift and go to state 115
    factor                         shift and go to state 116
    function_call                  shift and go to state 120
    identifier                     shift and go to state 121

state 251

    (78) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block . neupoint_end_conditional_quad
    (116) neupoint_end_conditional_quad -> .

    RETURN          reduce using rule 116 (neupoint_end_conditional_quad -> .)
    READ            reduce using rule 116 (neupoint_end_conditional_quad -> .)
    WRITE           reduce using rule 116 (neupoint_end_conditional_quad -> .)
    IF              reduce using rule 116 (neupoint_end_conditional_quad -> .)
    ID              reduce using rule 116 (neupoint_end_conditional_quad -> .)
    WHILE           reduce using rule 116 (neupoint_end_conditional_quad -> .)
    FOR             reduce using rule 116 (neupoint_end_conditional_quad -> .)
    RIGHTBRACKET    reduce using rule 116 (neupoint_end_conditional_quad -> .)

    neupoint_end_conditional_quad  shift and go to state 254

state 252

    (19) identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp . neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr
    (110) neupoint_remove_wall -> .

    RIGHTSQRBRACKET reduce using rule 110 (neupoint_remove_wall -> .)

    neupoint_remove_wall           shift and go to state 255

state 253

    (83) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp . neupoint_comparison_quad DO block neupoint_for_end
    (127) neupoint_comparison_quad -> .

    DO              reduce using rule 127 (neupoint_comparison_quad -> .)

    neupoint_comparison_quad       shift and go to state 256

state 254

    (78) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .

    RETURN          reduce using rule 78 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    READ            reduce using rule 78 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    WRITE           reduce using rule 78 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    IF              reduce using rule 78 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    ID              reduce using rule 78 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    WHILE           reduce using rule 78 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    FOR             reduce using rule 78 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    RIGHTBRACKET    reduce using rule 78 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)


state 255

    (19) identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall . RIGHTSQRBRACKET neupoint_update_matrix_addr

    RIGHTSQRBRACKET shift and go to state 257


state 256

    (83) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad . DO block neupoint_for_end

    DO              shift and go to state 258


state 257

    (19) identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET . neupoint_update_matrix_addr
    (27) neupoint_update_matrix_addr -> .

    EQUALS          reduce using rule 27 (neupoint_update_matrix_addr -> .)
    PLUSEQUALS      reduce using rule 27 (neupoint_update_matrix_addr -> .)
    SUBSTRACTEQUALS reduce using rule 27 (neupoint_update_matrix_addr -> .)
    INCREMENT       reduce using rule 27 (neupoint_update_matrix_addr -> .)
    DECREMENT       reduce using rule 27 (neupoint_update_matrix_addr -> .)
    MULTIPLY        reduce using rule 27 (neupoint_update_matrix_addr -> .)
    DIVIDE          reduce using rule 27 (neupoint_update_matrix_addr -> .)
    MOD             reduce using rule 27 (neupoint_update_matrix_addr -> .)
    PLUS            reduce using rule 27 (neupoint_update_matrix_addr -> .)
    MINUS           reduce using rule 27 (neupoint_update_matrix_addr -> .)
    RIGHTPARENTHESIS reduce using rule 27 (neupoint_update_matrix_addr -> .)
    COMMA           reduce using rule 27 (neupoint_update_matrix_addr -> .)
    COMPARISON      reduce using rule 27 (neupoint_update_matrix_addr -> .)
    GREATERHANOREQUAL reduce using rule 27 (neupoint_update_matrix_addr -> .)
    LESSTHANOREQUAL reduce using rule 27 (neupoint_update_matrix_addr -> .)
    GREATERTHAN     reduce using rule 27 (neupoint_update_matrix_addr -> .)
    LESSTHAN        reduce using rule 27 (neupoint_update_matrix_addr -> .)
    DIFFERENT       reduce using rule 27 (neupoint_update_matrix_addr -> .)
    AND             reduce using rule 27 (neupoint_update_matrix_addr -> .)
    OR              reduce using rule 27 (neupoint_update_matrix_addr -> .)
    SEMICOLON       reduce using rule 27 (neupoint_update_matrix_addr -> .)
    RIGHTSQRBRACKET reduce using rule 27 (neupoint_update_matrix_addr -> .)
    TO              reduce using rule 27 (neupoint_update_matrix_addr -> .)
    DO              reduce using rule 27 (neupoint_update_matrix_addr -> .)

    neupoint_update_matrix_addr    shift and go to state 259

state 258

    (83) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO . block neupoint_for_end
    (54) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (55) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 46

    block                          shift and go to state 260

state 259

    (19) identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr .

    EQUALS          reduce using rule 19 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr .)
    PLUSEQUALS      reduce using rule 19 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr .)
    SUBSTRACTEQUALS reduce using rule 19 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr .)
    INCREMENT       reduce using rule 19 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr .)
    DECREMENT       reduce using rule 19 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr .)
    MULTIPLY        reduce using rule 19 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr .)
    DIVIDE          reduce using rule 19 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr .)
    MOD             reduce using rule 19 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr .)
    PLUS            reduce using rule 19 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr .)
    MINUS           reduce using rule 19 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr .)
    RIGHTPARENTHESIS reduce using rule 19 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr .)
    COMMA           reduce using rule 19 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr .)
    COMPARISON      reduce using rule 19 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr .)
    GREATERHANOREQUAL reduce using rule 19 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr .)
    LESSTHANOREQUAL reduce using rule 19 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr .)
    GREATERTHAN     reduce using rule 19 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr .)
    LESSTHAN        reduce using rule 19 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr .)
    DIFFERENT       reduce using rule 19 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr .)
    AND             reduce using rule 19 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr .)
    OR              reduce using rule 19 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr .)
    SEMICOLON       reduce using rule 19 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr .)
    RIGHTSQRBRACKET reduce using rule 19 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr .)
    TO              reduce using rule 19 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr .)
    DO              reduce using rule 19 (identifier -> ID neupoint_add_identifier LEFTSQRBRACKET neupoint_index_array exp neupoint_remove_wall RIGHTSQRBRACKET LEFTSQRBRACKET neupoint_index_matrix exp neupoint_remove_wall RIGHTSQRBRACKET neupoint_update_matrix_addr .)


state 260

    (83) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block . neupoint_for_end
    (128) neupoint_for_end -> .

    RETURN          reduce using rule 128 (neupoint_for_end -> .)
    READ            reduce using rule 128 (neupoint_for_end -> .)
    WRITE           reduce using rule 128 (neupoint_for_end -> .)
    IF              reduce using rule 128 (neupoint_for_end -> .)
    ID              reduce using rule 128 (neupoint_for_end -> .)
    WHILE           reduce using rule 128 (neupoint_for_end -> .)
    FOR             reduce using rule 128 (neupoint_for_end -> .)
    RIGHTBRACKET    reduce using rule 128 (neupoint_for_end -> .)

    neupoint_for_end               shift and go to state 261

state 261

    (83) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .

    RETURN          reduce using rule 83 (non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .)
    READ            reduce using rule 83 (non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .)
    WRITE           reduce using rule 83 (non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .)
    IF              reduce using rule 83 (non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .)
    ID              reduce using rule 83 (non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .)
    WHILE           reduce using rule 83 (non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .)
    FOR             reduce using rule 83 (non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .)
    RIGHTBRACKET    reduce using rule 83 (non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .)

