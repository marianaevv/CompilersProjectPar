Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON neupoint_goto_main vars functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
Rule 2     program -> PROGRAM ID SEMICOLON neupoint_goto_main vars MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
Rule 3     program -> PROGRAM ID SEMICOLON neupoint_goto_main functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
Rule 4     program -> PROGRAM ID SEMICOLON neupoint_goto_main MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
Rule 5     neupoint_goto_main -> <empty>
Rule 6     neupoint_fill_goto_main -> <empty>
Rule 7     neupoint_end -> <empty>
Rule 8     data_type -> INT
Rule 9     data_type -> FLOAT
Rule 10    data_type -> CHAR
Rule 11    vars -> VAR vars_lists neupoint_add_vars
Rule 12    vars_lists -> data_type decla_ids_list SEMICOLON vars_lists
Rule 13    vars_lists -> data_type decla_ids_list SEMICOLON
Rule 14    decla_ids_list -> decla_identifier COMMA decla_ids_list
Rule 15    decla_ids_list -> decla_identifier
Rule 16    decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
Rule 17    decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
Rule 18    decla_identifier -> ID
Rule 19    identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
Rule 20    identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
Rule 21    identifier -> ID
Rule 22    neupoint_add_vars -> <empty>
Rule 23    return_type -> data_type
Rule 24    return_type -> VOID
Rule 25    functions_list -> function functions_list
Rule 26    functions_list -> function
Rule 27    function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
Rule 28    function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function
Rule 29    parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS neupoint_add_parameters
Rule 30    parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS
Rule 31    parameter -> data_type decla_identifier COMMA parameter
Rule 32    parameter -> data_type decla_identifier
Rule 33    neupoint_add_function -> <empty>
Rule 34    neupoint_add_parameters -> <empty>
Rule 35    neupoint_start_function -> <empty>
Rule 36    neupoint_check_for_return -> <empty>
Rule 37    neupoint_end_function -> <empty>
Rule 38    comparators -> COMPARISON
Rule 39    comparators -> GREATERHANOREQUAL
Rule 40    comparators -> LESSTHANOREQUAL
Rule 41    comparators -> GREATERTHAN
Rule 42    comparators -> LESSTHAN
Rule 43    comparators -> DIFFERENT
Rule 44    exp_operator -> PLUS
Rule 45    exp_operator -> MINUS
Rule 46    term_operator -> MULTIPLY
Rule 47    term_operator -> DIVIDE
Rule 48    term_operator -> MOD
Rule 49    block -> LEFTBRACKET statutes_list RIGHTBRACKET
Rule 50    block -> LEFTBRACKET RIGHTBRACKET
Rule 51    statutes_list -> statute statutes_list
Rule 52    statutes_list -> statute
Rule 53    statute -> assignment
Rule 54    statute -> function_return
Rule 55    statute -> reading
Rule 56    statute -> writing
Rule 57    statute -> decision
Rule 58    statute -> loop
Rule 59    statute -> function_call_void
Rule 60    assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
Rule 61    assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
Rule 62    assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
Rule 63    assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
Rule 64    assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
Rule 65    reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON
Rule 66    reading_list -> identifier neupoint_add_operand COMMA reading_list
Rule 67    reading_list -> identifier neupoint_add_operand
Rule 68    writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON
Rule 69    writing_list -> CTESTRING neupoint_add_cte_operand neupoint_write_quad COMMA writing_list
Rule 70    writing_list -> expresion neupoint_write_quad COMMA writing_list
Rule 71    writing_list -> CTESTRING neupoint_add_cte_operand neupoint_write_quad
Rule 72    writing_list -> expresion neupoint_write_quad
Rule 73    decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
Rule 74    decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad
Rule 75    loop -> conditional
Rule 76    loop -> non_conditional
Rule 77    conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end
Rule 78    non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end
Rule 79    function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON
Rule 80    function_call_void -> function_call SEMICOLON
Rule 81    function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
Rule 82    function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
Rule 83    ags_list -> expresion neupoint_validate_args COMMA ags_list
Rule 84    ags_list -> expresion neupoint_validate_args
Rule 85    expresion -> exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
Rule 86    expresion -> exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
Rule 87    expresion -> exp_relational
Rule 88    exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
Rule 89    exp_relational -> exp
Rule 90    exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
Rule 91    exp -> term neupoint_arithmetic_exp_quad
Rule 92    term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
Rule 93    term -> factor neupoint_arithmetic_term_quad
Rule 94    factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
Rule 95    factor -> CTEINT neupoint_add_cte_operand
Rule 96    factor -> CTEFLOAT neupoint_add_cte_operand
Rule 97    factor -> CTECHAR neupoint_add_cte_operand
Rule 98    factor -> function_call
Rule 99    factor -> identifier neupoint_add_operand
Rule 100   neupoint_add_operator -> <empty>
Rule 101   neupoint_add_operand -> <empty>
Rule 102   neupoint_add_cte_operand -> <empty>
Rule 103   neupoint_arithmetic_exp_quad -> <empty>
Rule 104   neupoint_arithmetic_term_quad -> <empty>
Rule 105   neupoint_add_wall -> <empty>
Rule 106   neupoint_remove_wall -> <empty>
Rule 107   neupoint_assignment_quad -> <empty>
Rule 108   neupoint_assignment_single_quad -> <empty>
Rule 109   neupoint_logical_relational_opt -> <empty>
Rule 110   neupoint_conditional_quad -> <empty>
Rule 111   neupoint_else_conditional_quad -> <empty>
Rule 112   neupoint_end_conditional_quad -> <empty>
Rule 113   neupoint_while_start -> <empty>
Rule 114   neupoint_while_end -> <empty>
Rule 115   neupoint_validate_function -> <empty>
Rule 116   neupoint_era_quad -> <empty>
Rule 117   neupoint_validate_args -> <empty>
Rule 118   neupoint_validate_num_args -> <empty>
Rule 119   neupoint_gosub_quad -> <empty>
Rule 120   neupoint_write_quad -> <empty>
Rule 121   neupoint_add_operand_integer -> <empty>
Rule 122   neupoint_add_operand_for -> <empty>
Rule 123   neupoint_comparison_quad -> <empty>
Rule 124   neupoint_for_end -> <empty>

Terminals, with rules where they appear

AND                  : 85
CHAR                 : 10
COMMA                : 14 31 66 69 70 83
COMPARISON           : 38
CTECHAR              : 97
CTEFLOAT             : 96
CTEINT               : 16 16 17 95
CTESTRING            : 69 71
DECREMENT            : 64
DIFFERENT            : 43
DIVIDE               : 47
DO                   : 77 78
ELSE                 : 73
EQUALS               : 60 78
FLOAT                : 9
FOR                  : 78
GREATERHANOREQUAL    : 39
GREATERTHAN          : 41
ID                   : 1 2 3 4 16 17 18 19 20 21 27 28 78 81 82
IF                   : 73 74
INCREMENT            : 63
INT                  : 8
LEFTBRACKET          : 49 50
LEFTPARENTHESIS      : 1 2 3 4 29 30 65 68 73 74 77 79 81 82 94
LEFTSQRBRACKET       : 16 16 17 19 19 20
LESSTHAN             : 42
LESSTHANOREQUAL      : 40
MAIN                 : 1 2 3 4
MINUS                : 45
MOD                  : 48
MODULE               : 27 28
MULTIPLY             : 46
OR                   : 86
PLUS                 : 44
PLUSEQUALS           : 61
PROGRAM              : 1 2 3 4
READ                 : 65
RETURN               : 79
RIGHTBRACKET         : 49 50
RIGHTPARENTHESIS     : 1 2 3 4 29 30 65 68 73 74 77 79 81 82 94
RIGHTSQRBRACKET      : 16 16 17 19 19 20
SEMICOLON            : 1 2 3 4 12 13 60 61 62 63 64 65 68 79 80
SUBSTRACTEQUALS      : 62
THEN                 : 73 74
TO                   : 78
VAR                  : 11
VOID                 : 24
WHILE                : 77
WRITE                : 68
error                : 

Nonterminals, with rules where they appear

ags_list             : 81 83
assignment           : 53
block                : 1 2 3 4 27 28 73 73 74 77 78
comparators          : 88
conditional          : 75
data_type            : 12 13 23 31 32
decision             : 57
decla_identifier     : 14 15 31 32
decla_ids_list       : 12 13 14
exp                  : 78 78 79 88 88 89 90
exp_operator         : 90
exp_relational       : 85 86 87
expresion            : 19 19 20 60 61 62 70 72 73 74 77 83 84 85 86 94
factor               : 92 93
function             : 25 26
function_call        : 80 98
function_call_void   : 59
function_return      : 54
functions_list       : 1 3 25
identifier           : 60 61 62 63 64 66 67 99
loop                 : 58
neupoint_add_cte_operand : 69 71 95 96 97
neupoint_add_function : 27 28
neupoint_add_operand : 60 61 62 63 64 66 67 99
neupoint_add_operand_for : 78
neupoint_add_operand_integer : 78
neupoint_add_operator : 60 61 62 63 64 78 85 86 88 90 92
neupoint_add_parameters : 29
neupoint_add_vars    : 11
neupoint_add_wall    : 81 82 94
neupoint_arithmetic_exp_quad : 90 91
neupoint_arithmetic_term_quad : 92 93
neupoint_assignment_quad : 60 61 62 78
neupoint_assignment_single_quad : 63 64
neupoint_check_for_return : 27 28
neupoint_comparison_quad : 78
neupoint_conditional_quad : 73 74 77
neupoint_else_conditional_quad : 73
neupoint_end         : 1 2 3 4
neupoint_end_conditional_quad : 73 74
neupoint_end_function : 27 28
neupoint_era_quad    : 81 82
neupoint_fill_goto_main : 1 2 3 4
neupoint_for_end     : 78
neupoint_gosub_quad  : 81 82
neupoint_goto_main   : 1 2 3 4
neupoint_logical_relational_opt : 85 86 88
neupoint_remove_wall : 94
neupoint_start_function : 27 28
neupoint_validate_args : 83 84
neupoint_validate_function : 81 82
neupoint_validate_num_args : 81 82
neupoint_while_end   : 77
neupoint_while_start : 77
neupoint_write_quad  : 69 70 71 72
non_conditional      : 76
parameter            : 29 31
parameters_list      : 27 28
program              : 0
reading              : 55
reading_list         : 65 66
return_type          : 27 28
statute              : 51 52
statutes_list        : 49 51
term                 : 90 91 92
term_operator        : 92
vars                 : 1 2 27
vars_lists           : 11 12
writing              : 56
writing_list         : 68 69 70

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON neupoint_goto_main vars functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (2) program -> . PROGRAM ID SEMICOLON neupoint_goto_main vars MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (3) program -> . PROGRAM ID SEMICOLON neupoint_goto_main functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (4) program -> . PROGRAM ID SEMICOLON neupoint_goto_main MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON neupoint_goto_main vars functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (2) program -> PROGRAM . ID SEMICOLON neupoint_goto_main vars MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (3) program -> PROGRAM . ID SEMICOLON neupoint_goto_main functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (4) program -> PROGRAM . ID SEMICOLON neupoint_goto_main MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON neupoint_goto_main vars functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (2) program -> PROGRAM ID . SEMICOLON neupoint_goto_main vars MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (3) program -> PROGRAM ID . SEMICOLON neupoint_goto_main functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (4) program -> PROGRAM ID . SEMICOLON neupoint_goto_main MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . neupoint_goto_main vars functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (2) program -> PROGRAM ID SEMICOLON . neupoint_goto_main vars MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (3) program -> PROGRAM ID SEMICOLON . neupoint_goto_main functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (4) program -> PROGRAM ID SEMICOLON . neupoint_goto_main MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (5) neupoint_goto_main -> .

    MAIN            reduce using rule 5 (neupoint_goto_main -> .)
    VAR             reduce using rule 5 (neupoint_goto_main -> .)
    MODULE          reduce using rule 5 (neupoint_goto_main -> .)

    neupoint_goto_main             shift and go to state 5

state 5

    (1) program -> PROGRAM ID SEMICOLON neupoint_goto_main . vars functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (2) program -> PROGRAM ID SEMICOLON neupoint_goto_main . vars MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (3) program -> PROGRAM ID SEMICOLON neupoint_goto_main . functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (4) program -> PROGRAM ID SEMICOLON neupoint_goto_main . MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (11) vars -> . VAR vars_lists neupoint_add_vars
    (25) functions_list -> . function functions_list
    (26) functions_list -> . function
    (27) function -> . MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (28) function -> . MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function

    MAIN            shift and go to state 8
    VAR             shift and go to state 9
    MODULE          shift and go to state 11

    vars                           shift and go to state 6
    functions_list                 shift and go to state 7
    function                       shift and go to state 10

state 6

    (1) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars . functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (2) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars . MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (25) functions_list -> . function functions_list
    (26) functions_list -> . function
    (27) function -> . MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (28) function -> . MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function

    MAIN            shift and go to state 13
    MODULE          shift and go to state 11

    functions_list                 shift and go to state 12
    function                       shift and go to state 10

state 7

    (3) program -> PROGRAM ID SEMICOLON neupoint_goto_main functions_list . MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end

    MAIN            shift and go to state 14


state 8

    (4) program -> PROGRAM ID SEMICOLON neupoint_goto_main MAIN . neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (6) neupoint_fill_goto_main -> .

    LEFTPARENTHESIS reduce using rule 6 (neupoint_fill_goto_main -> .)

    neupoint_fill_goto_main        shift and go to state 15

state 9

    (11) vars -> VAR . vars_lists neupoint_add_vars
    (12) vars_lists -> . data_type decla_ids_list SEMICOLON vars_lists
    (13) vars_lists -> . data_type decla_ids_list SEMICOLON
    (8) data_type -> . INT
    (9) data_type -> . FLOAT
    (10) data_type -> . CHAR

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    vars_lists                     shift and go to state 16
    data_type                      shift and go to state 17

state 10

    (25) functions_list -> function . functions_list
    (26) functions_list -> function .
    (25) functions_list -> . function functions_list
    (26) functions_list -> . function
    (27) function -> . MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (28) function -> . MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function

    MAIN            reduce using rule 26 (functions_list -> function .)
    MODULE          shift and go to state 11

    function                       shift and go to state 10
    functions_list                 shift and go to state 21

state 11

    (27) function -> MODULE . return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (28) function -> MODULE . return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (23) return_type -> . data_type
    (24) return_type -> . VOID
    (8) data_type -> . INT
    (9) data_type -> . FLOAT
    (10) data_type -> . CHAR

    VOID            shift and go to state 24
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    return_type                    shift and go to state 22
    data_type                      shift and go to state 23

state 12

    (1) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars functions_list . MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end

    MAIN            shift and go to state 25


state 13

    (2) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars MAIN . neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (6) neupoint_fill_goto_main -> .

    LEFTPARENTHESIS reduce using rule 6 (neupoint_fill_goto_main -> .)

    neupoint_fill_goto_main        shift and go to state 26

state 14

    (3) program -> PROGRAM ID SEMICOLON neupoint_goto_main functions_list MAIN . neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (6) neupoint_fill_goto_main -> .

    LEFTPARENTHESIS reduce using rule 6 (neupoint_fill_goto_main -> .)

    neupoint_fill_goto_main        shift and go to state 27

state 15

    (4) program -> PROGRAM ID SEMICOLON neupoint_goto_main MAIN neupoint_fill_goto_main . LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end

    LEFTPARENTHESIS shift and go to state 28


state 16

    (11) vars -> VAR vars_lists . neupoint_add_vars
    (22) neupoint_add_vars -> .

    MAIN            reduce using rule 22 (neupoint_add_vars -> .)
    MODULE          reduce using rule 22 (neupoint_add_vars -> .)
    LEFTBRACKET     reduce using rule 22 (neupoint_add_vars -> .)

    neupoint_add_vars              shift and go to state 29

state 17

    (12) vars_lists -> data_type . decla_ids_list SEMICOLON vars_lists
    (13) vars_lists -> data_type . decla_ids_list SEMICOLON
    (14) decla_ids_list -> . decla_identifier COMMA decla_ids_list
    (15) decla_ids_list -> . decla_identifier
    (16) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (17) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (18) decla_identifier -> . ID

    ID              shift and go to state 32

    decla_ids_list                 shift and go to state 30
    decla_identifier               shift and go to state 31

state 18

    (8) data_type -> INT .

    ID              reduce using rule 8 (data_type -> INT .)


state 19

    (9) data_type -> FLOAT .

    ID              reduce using rule 9 (data_type -> FLOAT .)


state 20

    (10) data_type -> CHAR .

    ID              reduce using rule 10 (data_type -> CHAR .)


state 21

    (25) functions_list -> function functions_list .

    MAIN            reduce using rule 25 (functions_list -> function functions_list .)


state 22

    (27) function -> MODULE return_type . ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (28) function -> MODULE return_type . ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function

    ID              shift and go to state 33


state 23

    (23) return_type -> data_type .

    ID              reduce using rule 23 (return_type -> data_type .)


state 24

    (24) return_type -> VOID .

    ID              reduce using rule 24 (return_type -> VOID .)


state 25

    (1) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars functions_list MAIN . neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end
    (6) neupoint_fill_goto_main -> .

    LEFTPARENTHESIS reduce using rule 6 (neupoint_fill_goto_main -> .)

    neupoint_fill_goto_main        shift and go to state 34

state 26

    (2) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars MAIN neupoint_fill_goto_main . LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end

    LEFTPARENTHESIS shift and go to state 35


state 27

    (3) program -> PROGRAM ID SEMICOLON neupoint_goto_main functions_list MAIN neupoint_fill_goto_main . LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end

    LEFTPARENTHESIS shift and go to state 36


state 28

    (4) program -> PROGRAM ID SEMICOLON neupoint_goto_main MAIN neupoint_fill_goto_main LEFTPARENTHESIS . RIGHTPARENTHESIS block neupoint_end

    RIGHTPARENTHESIS shift and go to state 37


state 29

    (11) vars -> VAR vars_lists neupoint_add_vars .

    MAIN            reduce using rule 11 (vars -> VAR vars_lists neupoint_add_vars .)
    MODULE          reduce using rule 11 (vars -> VAR vars_lists neupoint_add_vars .)
    LEFTBRACKET     reduce using rule 11 (vars -> VAR vars_lists neupoint_add_vars .)


state 30

    (12) vars_lists -> data_type decla_ids_list . SEMICOLON vars_lists
    (13) vars_lists -> data_type decla_ids_list . SEMICOLON

    SEMICOLON       shift and go to state 38


state 31

    (14) decla_ids_list -> decla_identifier . COMMA decla_ids_list
    (15) decla_ids_list -> decla_identifier .

    COMMA           shift and go to state 39
    SEMICOLON       reduce using rule 15 (decla_ids_list -> decla_identifier .)


state 32

    (16) decla_identifier -> ID . LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (17) decla_identifier -> ID . LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (18) decla_identifier -> ID .

    LEFTSQRBRACKET  shift and go to state 40
    COMMA           reduce using rule 18 (decla_identifier -> ID .)
    SEMICOLON       reduce using rule 18 (decla_identifier -> ID .)
    RIGHTPARENTHESIS reduce using rule 18 (decla_identifier -> ID .)


state 33

    (27) function -> MODULE return_type ID . neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (28) function -> MODULE return_type ID . neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (33) neupoint_add_function -> .

    LEFTPARENTHESIS reduce using rule 33 (neupoint_add_function -> .)

    neupoint_add_function          shift and go to state 41

state 34

    (1) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars functions_list MAIN neupoint_fill_goto_main . LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end

    LEFTPARENTHESIS shift and go to state 42


state 35

    (2) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars MAIN neupoint_fill_goto_main LEFTPARENTHESIS . RIGHTPARENTHESIS block neupoint_end

    RIGHTPARENTHESIS shift and go to state 43


state 36

    (3) program -> PROGRAM ID SEMICOLON neupoint_goto_main functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS . RIGHTPARENTHESIS block neupoint_end

    RIGHTPARENTHESIS shift and go to state 44


state 37

    (4) program -> PROGRAM ID SEMICOLON neupoint_goto_main MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS . block neupoint_end
    (49) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (50) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 46

    block                          shift and go to state 45

state 38

    (12) vars_lists -> data_type decla_ids_list SEMICOLON . vars_lists
    (13) vars_lists -> data_type decla_ids_list SEMICOLON .
    (12) vars_lists -> . data_type decla_ids_list SEMICOLON vars_lists
    (13) vars_lists -> . data_type decla_ids_list SEMICOLON
    (8) data_type -> . INT
    (9) data_type -> . FLOAT
    (10) data_type -> . CHAR

    MAIN            reduce using rule 13 (vars_lists -> data_type decla_ids_list SEMICOLON .)
    MODULE          reduce using rule 13 (vars_lists -> data_type decla_ids_list SEMICOLON .)
    LEFTBRACKET     reduce using rule 13 (vars_lists -> data_type decla_ids_list SEMICOLON .)
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    data_type                      shift and go to state 17
    vars_lists                     shift and go to state 47

state 39

    (14) decla_ids_list -> decla_identifier COMMA . decla_ids_list
    (14) decla_ids_list -> . decla_identifier COMMA decla_ids_list
    (15) decla_ids_list -> . decla_identifier
    (16) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (17) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (18) decla_identifier -> . ID

    ID              shift and go to state 32

    decla_identifier               shift and go to state 31
    decla_ids_list                 shift and go to state 48

state 40

    (16) decla_identifier -> ID LEFTSQRBRACKET . CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (17) decla_identifier -> ID LEFTSQRBRACKET . CTEINT RIGHTSQRBRACKET

    CTEINT          shift and go to state 49


state 41

    (27) function -> MODULE return_type ID neupoint_add_function . parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (28) function -> MODULE return_type ID neupoint_add_function . parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (29) parameters_list -> . LEFTPARENTHESIS parameter RIGHTPARENTHESIS neupoint_add_parameters
    (30) parameters_list -> . LEFTPARENTHESIS RIGHTPARENTHESIS

    LEFTPARENTHESIS shift and go to state 51

    parameters_list                shift and go to state 50

state 42

    (1) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS . RIGHTPARENTHESIS block neupoint_end

    RIGHTPARENTHESIS shift and go to state 52


state 43

    (2) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS . block neupoint_end
    (49) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (50) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 46

    block                          shift and go to state 53

state 44

    (3) program -> PROGRAM ID SEMICOLON neupoint_goto_main functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS . block neupoint_end
    (49) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (50) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 46

    block                          shift and go to state 54

state 45

    (4) program -> PROGRAM ID SEMICOLON neupoint_goto_main MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block . neupoint_end
    (7) neupoint_end -> .

    $end            reduce using rule 7 (neupoint_end -> .)

    neupoint_end                   shift and go to state 55

state 46

    (49) block -> LEFTBRACKET . statutes_list RIGHTBRACKET
    (50) block -> LEFTBRACKET . RIGHTBRACKET
    (51) statutes_list -> . statute statutes_list
    (52) statutes_list -> . statute
    (53) statute -> . assignment
    (54) statute -> . function_return
    (55) statute -> . reading
    (56) statute -> . writing
    (57) statute -> . decision
    (58) statute -> . loop
    (59) statute -> . function_call_void
    (60) assignment -> . identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (61) assignment -> . identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (62) assignment -> . identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (63) assignment -> . identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (64) assignment -> . identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (79) function_return -> . RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON
    (65) reading -> . READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON
    (68) writing -> . WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON
    (73) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (74) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad
    (75) loop -> . conditional
    (76) loop -> . non_conditional
    (80) function_call_void -> . function_call SEMICOLON
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> . ID
    (77) conditional -> . WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end
    (78) non_conditional -> . FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end
    (81) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad

    RIGHTBRACKET    shift and go to state 57
    RETURN          shift and go to state 67
    READ            shift and go to state 68
    WRITE           shift and go to state 69
    IF              shift and go to state 70
    ID              shift and go to state 74
    WHILE           shift and go to state 75
    FOR             shift and go to state 76

    statutes_list                  shift and go to state 56
    statute                        shift and go to state 58
    assignment                     shift and go to state 59
    function_return                shift and go to state 60
    reading                        shift and go to state 61
    writing                        shift and go to state 62
    decision                       shift and go to state 63
    loop                           shift and go to state 64
    function_call_void             shift and go to state 65
    identifier                     shift and go to state 66
    conditional                    shift and go to state 71
    non_conditional                shift and go to state 72
    function_call                  shift and go to state 73

state 47

    (12) vars_lists -> data_type decla_ids_list SEMICOLON vars_lists .

    MAIN            reduce using rule 12 (vars_lists -> data_type decla_ids_list SEMICOLON vars_lists .)
    MODULE          reduce using rule 12 (vars_lists -> data_type decla_ids_list SEMICOLON vars_lists .)
    LEFTBRACKET     reduce using rule 12 (vars_lists -> data_type decla_ids_list SEMICOLON vars_lists .)


state 48

    (14) decla_ids_list -> decla_identifier COMMA decla_ids_list .

    SEMICOLON       reduce using rule 14 (decla_ids_list -> decla_identifier COMMA decla_ids_list .)


state 49

    (16) decla_identifier -> ID LEFTSQRBRACKET CTEINT . RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (17) decla_identifier -> ID LEFTSQRBRACKET CTEINT . RIGHTSQRBRACKET

    RIGHTSQRBRACKET shift and go to state 77


state 50

    (27) function -> MODULE return_type ID neupoint_add_function parameters_list . vars neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (28) function -> MODULE return_type ID neupoint_add_function parameters_list . neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (11) vars -> . VAR vars_lists neupoint_add_vars
    (35) neupoint_start_function -> .

    VAR             shift and go to state 9
    LEFTBRACKET     reduce using rule 35 (neupoint_start_function -> .)

    vars                           shift and go to state 78
    neupoint_start_function        shift and go to state 79

state 51

    (29) parameters_list -> LEFTPARENTHESIS . parameter RIGHTPARENTHESIS neupoint_add_parameters
    (30) parameters_list -> LEFTPARENTHESIS . RIGHTPARENTHESIS
    (31) parameter -> . data_type decla_identifier COMMA parameter
    (32) parameter -> . data_type decla_identifier
    (8) data_type -> . INT
    (9) data_type -> . FLOAT
    (10) data_type -> . CHAR

    RIGHTPARENTHESIS shift and go to state 81
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    parameter                      shift and go to state 80
    data_type                      shift and go to state 82

state 52

    (1) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS . block neupoint_end
    (49) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (50) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 46

    block                          shift and go to state 83

state 53

    (2) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block . neupoint_end
    (7) neupoint_end -> .

    $end            reduce using rule 7 (neupoint_end -> .)

    neupoint_end                   shift and go to state 84

state 54

    (3) program -> PROGRAM ID SEMICOLON neupoint_goto_main functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block . neupoint_end
    (7) neupoint_end -> .

    $end            reduce using rule 7 (neupoint_end -> .)

    neupoint_end                   shift and go to state 85

state 55

    (4) program -> PROGRAM ID SEMICOLON neupoint_goto_main MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end .

    $end            reduce using rule 4 (program -> PROGRAM ID SEMICOLON neupoint_goto_main MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end .)


state 56

    (49) block -> LEFTBRACKET statutes_list . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 86


state 57

    (50) block -> LEFTBRACKET RIGHTBRACKET .

    $end            reduce using rule 50 (block -> LEFTBRACKET RIGHTBRACKET .)
    MODULE          reduce using rule 50 (block -> LEFTBRACKET RIGHTBRACKET .)
    MAIN            reduce using rule 50 (block -> LEFTBRACKET RIGHTBRACKET .)
    ELSE            reduce using rule 50 (block -> LEFTBRACKET RIGHTBRACKET .)
    RETURN          reduce using rule 50 (block -> LEFTBRACKET RIGHTBRACKET .)
    READ            reduce using rule 50 (block -> LEFTBRACKET RIGHTBRACKET .)
    WRITE           reduce using rule 50 (block -> LEFTBRACKET RIGHTBRACKET .)
    IF              reduce using rule 50 (block -> LEFTBRACKET RIGHTBRACKET .)
    ID              reduce using rule 50 (block -> LEFTBRACKET RIGHTBRACKET .)
    WHILE           reduce using rule 50 (block -> LEFTBRACKET RIGHTBRACKET .)
    FOR             reduce using rule 50 (block -> LEFTBRACKET RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 50 (block -> LEFTBRACKET RIGHTBRACKET .)


state 58

    (51) statutes_list -> statute . statutes_list
    (52) statutes_list -> statute .
    (51) statutes_list -> . statute statutes_list
    (52) statutes_list -> . statute
    (53) statute -> . assignment
    (54) statute -> . function_return
    (55) statute -> . reading
    (56) statute -> . writing
    (57) statute -> . decision
    (58) statute -> . loop
    (59) statute -> . function_call_void
    (60) assignment -> . identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (61) assignment -> . identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (62) assignment -> . identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (63) assignment -> . identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (64) assignment -> . identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (79) function_return -> . RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON
    (65) reading -> . READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON
    (68) writing -> . WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON
    (73) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (74) decision -> . IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad
    (75) loop -> . conditional
    (76) loop -> . non_conditional
    (80) function_call_void -> . function_call SEMICOLON
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> . ID
    (77) conditional -> . WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end
    (78) non_conditional -> . FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end
    (81) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad

    RIGHTBRACKET    reduce using rule 52 (statutes_list -> statute .)
    RETURN          shift and go to state 67
    READ            shift and go to state 68
    WRITE           shift and go to state 69
    IF              shift and go to state 70
    ID              shift and go to state 74
    WHILE           shift and go to state 75
    FOR             shift and go to state 76

    statute                        shift and go to state 58
    statutes_list                  shift and go to state 87
    assignment                     shift and go to state 59
    function_return                shift and go to state 60
    reading                        shift and go to state 61
    writing                        shift and go to state 62
    decision                       shift and go to state 63
    loop                           shift and go to state 64
    function_call_void             shift and go to state 65
    identifier                     shift and go to state 66
    conditional                    shift and go to state 71
    non_conditional                shift and go to state 72
    function_call                  shift and go to state 73

state 59

    (53) statute -> assignment .

    RETURN          reduce using rule 53 (statute -> assignment .)
    READ            reduce using rule 53 (statute -> assignment .)
    WRITE           reduce using rule 53 (statute -> assignment .)
    IF              reduce using rule 53 (statute -> assignment .)
    ID              reduce using rule 53 (statute -> assignment .)
    WHILE           reduce using rule 53 (statute -> assignment .)
    FOR             reduce using rule 53 (statute -> assignment .)
    RIGHTBRACKET    reduce using rule 53 (statute -> assignment .)


state 60

    (54) statute -> function_return .

    RETURN          reduce using rule 54 (statute -> function_return .)
    READ            reduce using rule 54 (statute -> function_return .)
    WRITE           reduce using rule 54 (statute -> function_return .)
    IF              reduce using rule 54 (statute -> function_return .)
    ID              reduce using rule 54 (statute -> function_return .)
    WHILE           reduce using rule 54 (statute -> function_return .)
    FOR             reduce using rule 54 (statute -> function_return .)
    RIGHTBRACKET    reduce using rule 54 (statute -> function_return .)


state 61

    (55) statute -> reading .

    RETURN          reduce using rule 55 (statute -> reading .)
    READ            reduce using rule 55 (statute -> reading .)
    WRITE           reduce using rule 55 (statute -> reading .)
    IF              reduce using rule 55 (statute -> reading .)
    ID              reduce using rule 55 (statute -> reading .)
    WHILE           reduce using rule 55 (statute -> reading .)
    FOR             reduce using rule 55 (statute -> reading .)
    RIGHTBRACKET    reduce using rule 55 (statute -> reading .)


state 62

    (56) statute -> writing .

    RETURN          reduce using rule 56 (statute -> writing .)
    READ            reduce using rule 56 (statute -> writing .)
    WRITE           reduce using rule 56 (statute -> writing .)
    IF              reduce using rule 56 (statute -> writing .)
    ID              reduce using rule 56 (statute -> writing .)
    WHILE           reduce using rule 56 (statute -> writing .)
    FOR             reduce using rule 56 (statute -> writing .)
    RIGHTBRACKET    reduce using rule 56 (statute -> writing .)


state 63

    (57) statute -> decision .

    RETURN          reduce using rule 57 (statute -> decision .)
    READ            reduce using rule 57 (statute -> decision .)
    WRITE           reduce using rule 57 (statute -> decision .)
    IF              reduce using rule 57 (statute -> decision .)
    ID              reduce using rule 57 (statute -> decision .)
    WHILE           reduce using rule 57 (statute -> decision .)
    FOR             reduce using rule 57 (statute -> decision .)
    RIGHTBRACKET    reduce using rule 57 (statute -> decision .)


state 64

    (58) statute -> loop .

    RETURN          reduce using rule 58 (statute -> loop .)
    READ            reduce using rule 58 (statute -> loop .)
    WRITE           reduce using rule 58 (statute -> loop .)
    IF              reduce using rule 58 (statute -> loop .)
    ID              reduce using rule 58 (statute -> loop .)
    WHILE           reduce using rule 58 (statute -> loop .)
    FOR             reduce using rule 58 (statute -> loop .)
    RIGHTBRACKET    reduce using rule 58 (statute -> loop .)


state 65

    (59) statute -> function_call_void .

    RETURN          reduce using rule 59 (statute -> function_call_void .)
    READ            reduce using rule 59 (statute -> function_call_void .)
    WRITE           reduce using rule 59 (statute -> function_call_void .)
    IF              reduce using rule 59 (statute -> function_call_void .)
    ID              reduce using rule 59 (statute -> function_call_void .)
    WHILE           reduce using rule 59 (statute -> function_call_void .)
    FOR             reduce using rule 59 (statute -> function_call_void .)
    RIGHTBRACKET    reduce using rule 59 (statute -> function_call_void .)


state 66

    (60) assignment -> identifier . neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (61) assignment -> identifier . neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (62) assignment -> identifier . neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (63) assignment -> identifier . neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (64) assignment -> identifier . neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (101) neupoint_add_operand -> .

    EQUALS          reduce using rule 101 (neupoint_add_operand -> .)
    PLUSEQUALS      reduce using rule 101 (neupoint_add_operand -> .)
    SUBSTRACTEQUALS reduce using rule 101 (neupoint_add_operand -> .)
    INCREMENT       reduce using rule 101 (neupoint_add_operand -> .)
    DECREMENT       reduce using rule 101 (neupoint_add_operand -> .)

    neupoint_add_operand           shift and go to state 88

state 67

    (79) function_return -> RETURN . LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON

    LEFTPARENTHESIS shift and go to state 89


state 68

    (65) reading -> READ . LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON

    LEFTPARENTHESIS shift and go to state 90


state 69

    (68) writing -> WRITE . LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON

    LEFTPARENTHESIS shift and go to state 91


state 70

    (73) decision -> IF . LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (74) decision -> IF . LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad

    LEFTPARENTHESIS shift and go to state 92


state 71

    (75) loop -> conditional .

    RETURN          reduce using rule 75 (loop -> conditional .)
    READ            reduce using rule 75 (loop -> conditional .)
    WRITE           reduce using rule 75 (loop -> conditional .)
    IF              reduce using rule 75 (loop -> conditional .)
    ID              reduce using rule 75 (loop -> conditional .)
    WHILE           reduce using rule 75 (loop -> conditional .)
    FOR             reduce using rule 75 (loop -> conditional .)
    RIGHTBRACKET    reduce using rule 75 (loop -> conditional .)


state 72

    (76) loop -> non_conditional .

    RETURN          reduce using rule 76 (loop -> non_conditional .)
    READ            reduce using rule 76 (loop -> non_conditional .)
    WRITE           reduce using rule 76 (loop -> non_conditional .)
    IF              reduce using rule 76 (loop -> non_conditional .)
    ID              reduce using rule 76 (loop -> non_conditional .)
    WHILE           reduce using rule 76 (loop -> non_conditional .)
    FOR             reduce using rule 76 (loop -> non_conditional .)
    RIGHTBRACKET    reduce using rule 76 (loop -> non_conditional .)


state 73

    (80) function_call_void -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 93


state 74

    (19) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> ID .
    (81) function_call -> ID . neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> ID . neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (115) neupoint_validate_function -> .

    LEFTSQRBRACKET  shift and go to state 94
    EQUALS          reduce using rule 21 (identifier -> ID .)
    PLUSEQUALS      reduce using rule 21 (identifier -> ID .)
    SUBSTRACTEQUALS reduce using rule 21 (identifier -> ID .)
    INCREMENT       reduce using rule 21 (identifier -> ID .)
    DECREMENT       reduce using rule 21 (identifier -> ID .)
    LEFTPARENTHESIS reduce using rule 115 (neupoint_validate_function -> .)

    neupoint_validate_function     shift and go to state 95

state 75

    (77) conditional -> WHILE . neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end
    (113) neupoint_while_start -> .

    LEFTPARENTHESIS reduce using rule 113 (neupoint_while_start -> .)

    neupoint_while_start           shift and go to state 96

state 76

    (78) non_conditional -> FOR . ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end

    ID              shift and go to state 97


state 77

    (16) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET . LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (17) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .

    LEFTSQRBRACKET  shift and go to state 98
    COMMA           reduce using rule 17 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)
    SEMICOLON       reduce using rule 17 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)
    RIGHTPARENTHESIS reduce using rule 17 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)


state 78

    (27) function -> MODULE return_type ID neupoint_add_function parameters_list vars . neupoint_start_function block neupoint_check_for_return neupoint_end_function
    (35) neupoint_start_function -> .

    LEFTBRACKET     reduce using rule 35 (neupoint_start_function -> .)

    neupoint_start_function        shift and go to state 99

state 79

    (28) function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function . block neupoint_check_for_return neupoint_end_function
    (49) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (50) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 46

    block                          shift and go to state 100

state 80

    (29) parameters_list -> LEFTPARENTHESIS parameter . RIGHTPARENTHESIS neupoint_add_parameters

    RIGHTPARENTHESIS shift and go to state 101


state 81

    (30) parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS .

    VAR             reduce using rule 30 (parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS .)
    LEFTBRACKET     reduce using rule 30 (parameters_list -> LEFTPARENTHESIS RIGHTPARENTHESIS .)


state 82

    (31) parameter -> data_type . decla_identifier COMMA parameter
    (32) parameter -> data_type . decla_identifier
    (16) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (17) decla_identifier -> . ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET
    (18) decla_identifier -> . ID

    ID              shift and go to state 32

    decla_identifier               shift and go to state 102

state 83

    (1) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block . neupoint_end
    (7) neupoint_end -> .

    $end            reduce using rule 7 (neupoint_end -> .)

    neupoint_end                   shift and go to state 103

state 84

    (2) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end .

    $end            reduce using rule 2 (program -> PROGRAM ID SEMICOLON neupoint_goto_main vars MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end .)


state 85

    (3) program -> PROGRAM ID SEMICOLON neupoint_goto_main functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end .

    $end            reduce using rule 3 (program -> PROGRAM ID SEMICOLON neupoint_goto_main functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end .)


state 86

    (49) block -> LEFTBRACKET statutes_list RIGHTBRACKET .

    $end            reduce using rule 49 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    MODULE          reduce using rule 49 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    MAIN            reduce using rule 49 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    ELSE            reduce using rule 49 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    RETURN          reduce using rule 49 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    READ            reduce using rule 49 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    WRITE           reduce using rule 49 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    IF              reduce using rule 49 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    ID              reduce using rule 49 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    WHILE           reduce using rule 49 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    FOR             reduce using rule 49 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 49 (block -> LEFTBRACKET statutes_list RIGHTBRACKET .)


state 87

    (51) statutes_list -> statute statutes_list .

    RIGHTBRACKET    reduce using rule 51 (statutes_list -> statute statutes_list .)


state 88

    (60) assignment -> identifier neupoint_add_operand . EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (61) assignment -> identifier neupoint_add_operand . PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (62) assignment -> identifier neupoint_add_operand . SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (63) assignment -> identifier neupoint_add_operand . INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (64) assignment -> identifier neupoint_add_operand . DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON

    EQUALS          shift and go to state 104
    PLUSEQUALS      shift and go to state 105
    SUBSTRACTEQUALS shift and go to state 106
    INCREMENT       shift and go to state 107
    DECREMENT       shift and go to state 108


state 89

    (79) function_return -> RETURN LEFTPARENTHESIS . exp RIGHTPARENTHESIS SEMICOLON
    (90) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (91) exp -> . term neupoint_arithmetic_exp_quad
    (92) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (93) term -> . factor neupoint_arithmetic_term_quad
    (94) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (95) factor -> . CTEINT neupoint_add_cte_operand
    (96) factor -> . CTEFLOAT neupoint_add_cte_operand
    (97) factor -> . CTECHAR neupoint_add_cte_operand
    (98) factor -> . function_call
    (99) factor -> . identifier neupoint_add_operand
    (81) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 109
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 118

    exp                            shift and go to state 110
    term                           shift and go to state 111
    factor                         shift and go to state 112
    function_call                  shift and go to state 116
    identifier                     shift and go to state 117

state 90

    (65) reading -> READ LEFTPARENTHESIS . reading_list RIGHTPARENTHESIS SEMICOLON
    (66) reading_list -> . identifier neupoint_add_operand COMMA reading_list
    (67) reading_list -> . identifier neupoint_add_operand
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> . ID

    ID              shift and go to state 121

    reading_list                   shift and go to state 119
    identifier                     shift and go to state 120

state 91

    (68) writing -> WRITE LEFTPARENTHESIS . writing_list RIGHTPARENTHESIS SEMICOLON
    (69) writing_list -> . CTESTRING neupoint_add_cte_operand neupoint_write_quad COMMA writing_list
    (70) writing_list -> . expresion neupoint_write_quad COMMA writing_list
    (71) writing_list -> . CTESTRING neupoint_add_cte_operand neupoint_write_quad
    (72) writing_list -> . expresion neupoint_write_quad
    (85) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (86) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (87) expresion -> . exp_relational
    (88) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (89) exp_relational -> . exp
    (90) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (91) exp -> . term neupoint_arithmetic_exp_quad
    (92) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (93) term -> . factor neupoint_arithmetic_term_quad
    (94) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (95) factor -> . CTEINT neupoint_add_cte_operand
    (96) factor -> . CTEFLOAT neupoint_add_cte_operand
    (97) factor -> . CTECHAR neupoint_add_cte_operand
    (98) factor -> . function_call
    (99) factor -> . identifier neupoint_add_operand
    (81) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> . ID

    CTESTRING       shift and go to state 123
    LEFTPARENTHESIS shift and go to state 109
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 118

    writing_list                   shift and go to state 122
    expresion                      shift and go to state 124
    exp_relational                 shift and go to state 125
    exp                            shift and go to state 126
    term                           shift and go to state 111
    factor                         shift and go to state 112
    function_call                  shift and go to state 116
    identifier                     shift and go to state 117

state 92

    (73) decision -> IF LEFTPARENTHESIS . expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (74) decision -> IF LEFTPARENTHESIS . expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad
    (85) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (86) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (87) expresion -> . exp_relational
    (88) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (89) exp_relational -> . exp
    (90) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (91) exp -> . term neupoint_arithmetic_exp_quad
    (92) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (93) term -> . factor neupoint_arithmetic_term_quad
    (94) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (95) factor -> . CTEINT neupoint_add_cte_operand
    (96) factor -> . CTEFLOAT neupoint_add_cte_operand
    (97) factor -> . CTECHAR neupoint_add_cte_operand
    (98) factor -> . function_call
    (99) factor -> . identifier neupoint_add_operand
    (81) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 109
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 118

    expresion                      shift and go to state 127
    exp_relational                 shift and go to state 125
    exp                            shift and go to state 126
    term                           shift and go to state 111
    factor                         shift and go to state 112
    function_call                  shift and go to state 116
    identifier                     shift and go to state 117

state 93

    (80) function_call_void -> function_call SEMICOLON .

    RETURN          reduce using rule 80 (function_call_void -> function_call SEMICOLON .)
    READ            reduce using rule 80 (function_call_void -> function_call SEMICOLON .)
    WRITE           reduce using rule 80 (function_call_void -> function_call SEMICOLON .)
    IF              reduce using rule 80 (function_call_void -> function_call SEMICOLON .)
    ID              reduce using rule 80 (function_call_void -> function_call SEMICOLON .)
    WHILE           reduce using rule 80 (function_call_void -> function_call SEMICOLON .)
    FOR             reduce using rule 80 (function_call_void -> function_call SEMICOLON .)
    RIGHTBRACKET    reduce using rule 80 (function_call_void -> function_call SEMICOLON .)


state 94

    (19) identifier -> ID LEFTSQRBRACKET . expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> ID LEFTSQRBRACKET . expresion RIGHTSQRBRACKET
    (85) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (86) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (87) expresion -> . exp_relational
    (88) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (89) exp_relational -> . exp
    (90) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (91) exp -> . term neupoint_arithmetic_exp_quad
    (92) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (93) term -> . factor neupoint_arithmetic_term_quad
    (94) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (95) factor -> . CTEINT neupoint_add_cte_operand
    (96) factor -> . CTEFLOAT neupoint_add_cte_operand
    (97) factor -> . CTECHAR neupoint_add_cte_operand
    (98) factor -> . function_call
    (99) factor -> . identifier neupoint_add_operand
    (81) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 109
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 118

    expresion                      shift and go to state 128
    exp_relational                 shift and go to state 125
    exp                            shift and go to state 126
    term                           shift and go to state 111
    factor                         shift and go to state 112
    function_call                  shift and go to state 116
    identifier                     shift and go to state 117

state 95

    (81) function_call -> ID neupoint_validate_function . LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> ID neupoint_validate_function . LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad

    LEFTPARENTHESIS shift and go to state 129


state 96

    (77) conditional -> WHILE neupoint_while_start . LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end

    LEFTPARENTHESIS shift and go to state 130


state 97

    (78) non_conditional -> FOR ID . neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end
    (121) neupoint_add_operand_integer -> .

    EQUALS          reduce using rule 121 (neupoint_add_operand_integer -> .)

    neupoint_add_operand_integer   shift and go to state 131

state 98

    (16) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET . CTEINT RIGHTSQRBRACKET

    CTEINT          shift and go to state 132


state 99

    (27) function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function . block neupoint_check_for_return neupoint_end_function
    (49) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (50) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 46

    block                          shift and go to state 133

state 100

    (28) function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block . neupoint_check_for_return neupoint_end_function
    (36) neupoint_check_for_return -> .

    MODULE          reduce using rule 36 (neupoint_check_for_return -> .)
    MAIN            reduce using rule 36 (neupoint_check_for_return -> .)

    neupoint_check_for_return      shift and go to state 134

state 101

    (29) parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS . neupoint_add_parameters
    (34) neupoint_add_parameters -> .

    VAR             reduce using rule 34 (neupoint_add_parameters -> .)
    LEFTBRACKET     reduce using rule 34 (neupoint_add_parameters -> .)

    neupoint_add_parameters        shift and go to state 135

state 102

    (31) parameter -> data_type decla_identifier . COMMA parameter
    (32) parameter -> data_type decla_identifier .

    COMMA           shift and go to state 136
    RIGHTPARENTHESIS reduce using rule 32 (parameter -> data_type decla_identifier .)


state 103

    (1) program -> PROGRAM ID SEMICOLON neupoint_goto_main vars functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON neupoint_goto_main vars functions_list MAIN neupoint_fill_goto_main LEFTPARENTHESIS RIGHTPARENTHESIS block neupoint_end .)


state 104

    (60) assignment -> identifier neupoint_add_operand EQUALS . neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (100) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 100 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 100 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 100 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 100 (neupoint_add_operator -> .)
    ID              reduce using rule 100 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 137

state 105

    (61) assignment -> identifier neupoint_add_operand PLUSEQUALS . neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (100) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 100 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 100 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 100 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 100 (neupoint_add_operator -> .)
    ID              reduce using rule 100 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 138

state 106

    (62) assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS . neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON
    (100) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 100 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 100 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 100 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 100 (neupoint_add_operator -> .)
    ID              reduce using rule 100 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 139

state 107

    (63) assignment -> identifier neupoint_add_operand INCREMENT . neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (100) neupoint_add_operator -> .

    SEMICOLON       reduce using rule 100 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 140

state 108

    (64) assignment -> identifier neupoint_add_operand DECREMENT . neupoint_add_operator neupoint_assignment_single_quad SEMICOLON
    (100) neupoint_add_operator -> .

    SEMICOLON       reduce using rule 100 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 141

state 109

    (94) factor -> LEFTPARENTHESIS . neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (105) neupoint_add_wall -> .

    LEFTPARENTHESIS reduce using rule 105 (neupoint_add_wall -> .)
    CTEINT          reduce using rule 105 (neupoint_add_wall -> .)
    CTEFLOAT        reduce using rule 105 (neupoint_add_wall -> .)
    CTECHAR         reduce using rule 105 (neupoint_add_wall -> .)
    ID              reduce using rule 105 (neupoint_add_wall -> .)

    neupoint_add_wall              shift and go to state 142

state 110

    (79) function_return -> RETURN LEFTPARENTHESIS exp . RIGHTPARENTHESIS SEMICOLON

    RIGHTPARENTHESIS shift and go to state 143


state 111

    (90) exp -> term . neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (91) exp -> term . neupoint_arithmetic_exp_quad
    (103) neupoint_arithmetic_exp_quad -> .

    PLUS            reduce using rule 103 (neupoint_arithmetic_exp_quad -> .)
    MINUS           reduce using rule 103 (neupoint_arithmetic_exp_quad -> .)
    RIGHTPARENTHESIS reduce using rule 103 (neupoint_arithmetic_exp_quad -> .)
    COMPARISON      reduce using rule 103 (neupoint_arithmetic_exp_quad -> .)
    GREATERHANOREQUAL reduce using rule 103 (neupoint_arithmetic_exp_quad -> .)
    LESSTHANOREQUAL reduce using rule 103 (neupoint_arithmetic_exp_quad -> .)
    GREATERTHAN     reduce using rule 103 (neupoint_arithmetic_exp_quad -> .)
    LESSTHAN        reduce using rule 103 (neupoint_arithmetic_exp_quad -> .)
    DIFFERENT       reduce using rule 103 (neupoint_arithmetic_exp_quad -> .)
    AND             reduce using rule 103 (neupoint_arithmetic_exp_quad -> .)
    OR              reduce using rule 103 (neupoint_arithmetic_exp_quad -> .)
    COMMA           reduce using rule 103 (neupoint_arithmetic_exp_quad -> .)
    RIGHTSQRBRACKET reduce using rule 103 (neupoint_arithmetic_exp_quad -> .)
    SEMICOLON       reduce using rule 103 (neupoint_arithmetic_exp_quad -> .)
    TO              reduce using rule 103 (neupoint_arithmetic_exp_quad -> .)
    DO              reduce using rule 103 (neupoint_arithmetic_exp_quad -> .)

    neupoint_arithmetic_exp_quad   shift and go to state 144

state 112

    (92) term -> factor . neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (93) term -> factor . neupoint_arithmetic_term_quad
    (104) neupoint_arithmetic_term_quad -> .

    MULTIPLY        reduce using rule 104 (neupoint_arithmetic_term_quad -> .)
    DIVIDE          reduce using rule 104 (neupoint_arithmetic_term_quad -> .)
    MOD             reduce using rule 104 (neupoint_arithmetic_term_quad -> .)
    PLUS            reduce using rule 104 (neupoint_arithmetic_term_quad -> .)
    MINUS           reduce using rule 104 (neupoint_arithmetic_term_quad -> .)
    RIGHTPARENTHESIS reduce using rule 104 (neupoint_arithmetic_term_quad -> .)
    COMPARISON      reduce using rule 104 (neupoint_arithmetic_term_quad -> .)
    GREATERHANOREQUAL reduce using rule 104 (neupoint_arithmetic_term_quad -> .)
    LESSTHANOREQUAL reduce using rule 104 (neupoint_arithmetic_term_quad -> .)
    GREATERTHAN     reduce using rule 104 (neupoint_arithmetic_term_quad -> .)
    LESSTHAN        reduce using rule 104 (neupoint_arithmetic_term_quad -> .)
    DIFFERENT       reduce using rule 104 (neupoint_arithmetic_term_quad -> .)
    AND             reduce using rule 104 (neupoint_arithmetic_term_quad -> .)
    OR              reduce using rule 104 (neupoint_arithmetic_term_quad -> .)
    COMMA           reduce using rule 104 (neupoint_arithmetic_term_quad -> .)
    RIGHTSQRBRACKET reduce using rule 104 (neupoint_arithmetic_term_quad -> .)
    SEMICOLON       reduce using rule 104 (neupoint_arithmetic_term_quad -> .)
    TO              reduce using rule 104 (neupoint_arithmetic_term_quad -> .)
    DO              reduce using rule 104 (neupoint_arithmetic_term_quad -> .)

    neupoint_arithmetic_term_quad  shift and go to state 145

state 113

    (95) factor -> CTEINT . neupoint_add_cte_operand
    (102) neupoint_add_cte_operand -> .

    MULTIPLY        reduce using rule 102 (neupoint_add_cte_operand -> .)
    DIVIDE          reduce using rule 102 (neupoint_add_cte_operand -> .)
    MOD             reduce using rule 102 (neupoint_add_cte_operand -> .)
    PLUS            reduce using rule 102 (neupoint_add_cte_operand -> .)
    MINUS           reduce using rule 102 (neupoint_add_cte_operand -> .)
    RIGHTPARENTHESIS reduce using rule 102 (neupoint_add_cte_operand -> .)
    COMPARISON      reduce using rule 102 (neupoint_add_cte_operand -> .)
    GREATERHANOREQUAL reduce using rule 102 (neupoint_add_cte_operand -> .)
    LESSTHANOREQUAL reduce using rule 102 (neupoint_add_cte_operand -> .)
    GREATERTHAN     reduce using rule 102 (neupoint_add_cte_operand -> .)
    LESSTHAN        reduce using rule 102 (neupoint_add_cte_operand -> .)
    DIFFERENT       reduce using rule 102 (neupoint_add_cte_operand -> .)
    AND             reduce using rule 102 (neupoint_add_cte_operand -> .)
    OR              reduce using rule 102 (neupoint_add_cte_operand -> .)
    COMMA           reduce using rule 102 (neupoint_add_cte_operand -> .)
    RIGHTSQRBRACKET reduce using rule 102 (neupoint_add_cte_operand -> .)
    SEMICOLON       reduce using rule 102 (neupoint_add_cte_operand -> .)
    TO              reduce using rule 102 (neupoint_add_cte_operand -> .)
    DO              reduce using rule 102 (neupoint_add_cte_operand -> .)

    neupoint_add_cte_operand       shift and go to state 146

state 114

    (96) factor -> CTEFLOAT . neupoint_add_cte_operand
    (102) neupoint_add_cte_operand -> .

    MULTIPLY        reduce using rule 102 (neupoint_add_cte_operand -> .)
    DIVIDE          reduce using rule 102 (neupoint_add_cte_operand -> .)
    MOD             reduce using rule 102 (neupoint_add_cte_operand -> .)
    PLUS            reduce using rule 102 (neupoint_add_cte_operand -> .)
    MINUS           reduce using rule 102 (neupoint_add_cte_operand -> .)
    RIGHTPARENTHESIS reduce using rule 102 (neupoint_add_cte_operand -> .)
    COMPARISON      reduce using rule 102 (neupoint_add_cte_operand -> .)
    GREATERHANOREQUAL reduce using rule 102 (neupoint_add_cte_operand -> .)
    LESSTHANOREQUAL reduce using rule 102 (neupoint_add_cte_operand -> .)
    GREATERTHAN     reduce using rule 102 (neupoint_add_cte_operand -> .)
    LESSTHAN        reduce using rule 102 (neupoint_add_cte_operand -> .)
    DIFFERENT       reduce using rule 102 (neupoint_add_cte_operand -> .)
    AND             reduce using rule 102 (neupoint_add_cte_operand -> .)
    OR              reduce using rule 102 (neupoint_add_cte_operand -> .)
    COMMA           reduce using rule 102 (neupoint_add_cte_operand -> .)
    RIGHTSQRBRACKET reduce using rule 102 (neupoint_add_cte_operand -> .)
    SEMICOLON       reduce using rule 102 (neupoint_add_cte_operand -> .)
    TO              reduce using rule 102 (neupoint_add_cte_operand -> .)
    DO              reduce using rule 102 (neupoint_add_cte_operand -> .)

    neupoint_add_cte_operand       shift and go to state 147

state 115

    (97) factor -> CTECHAR . neupoint_add_cte_operand
    (102) neupoint_add_cte_operand -> .

    MULTIPLY        reduce using rule 102 (neupoint_add_cte_operand -> .)
    DIVIDE          reduce using rule 102 (neupoint_add_cte_operand -> .)
    MOD             reduce using rule 102 (neupoint_add_cte_operand -> .)
    PLUS            reduce using rule 102 (neupoint_add_cte_operand -> .)
    MINUS           reduce using rule 102 (neupoint_add_cte_operand -> .)
    RIGHTPARENTHESIS reduce using rule 102 (neupoint_add_cte_operand -> .)
    COMPARISON      reduce using rule 102 (neupoint_add_cte_operand -> .)
    GREATERHANOREQUAL reduce using rule 102 (neupoint_add_cte_operand -> .)
    LESSTHANOREQUAL reduce using rule 102 (neupoint_add_cte_operand -> .)
    GREATERTHAN     reduce using rule 102 (neupoint_add_cte_operand -> .)
    LESSTHAN        reduce using rule 102 (neupoint_add_cte_operand -> .)
    DIFFERENT       reduce using rule 102 (neupoint_add_cte_operand -> .)
    AND             reduce using rule 102 (neupoint_add_cte_operand -> .)
    OR              reduce using rule 102 (neupoint_add_cte_operand -> .)
    COMMA           reduce using rule 102 (neupoint_add_cte_operand -> .)
    RIGHTSQRBRACKET reduce using rule 102 (neupoint_add_cte_operand -> .)
    SEMICOLON       reduce using rule 102 (neupoint_add_cte_operand -> .)
    TO              reduce using rule 102 (neupoint_add_cte_operand -> .)
    DO              reduce using rule 102 (neupoint_add_cte_operand -> .)

    neupoint_add_cte_operand       shift and go to state 148

state 116

    (98) factor -> function_call .

    MULTIPLY        reduce using rule 98 (factor -> function_call .)
    DIVIDE          reduce using rule 98 (factor -> function_call .)
    MOD             reduce using rule 98 (factor -> function_call .)
    PLUS            reduce using rule 98 (factor -> function_call .)
    MINUS           reduce using rule 98 (factor -> function_call .)
    RIGHTPARENTHESIS reduce using rule 98 (factor -> function_call .)
    COMPARISON      reduce using rule 98 (factor -> function_call .)
    GREATERHANOREQUAL reduce using rule 98 (factor -> function_call .)
    LESSTHANOREQUAL reduce using rule 98 (factor -> function_call .)
    GREATERTHAN     reduce using rule 98 (factor -> function_call .)
    LESSTHAN        reduce using rule 98 (factor -> function_call .)
    DIFFERENT       reduce using rule 98 (factor -> function_call .)
    AND             reduce using rule 98 (factor -> function_call .)
    OR              reduce using rule 98 (factor -> function_call .)
    COMMA           reduce using rule 98 (factor -> function_call .)
    RIGHTSQRBRACKET reduce using rule 98 (factor -> function_call .)
    SEMICOLON       reduce using rule 98 (factor -> function_call .)
    TO              reduce using rule 98 (factor -> function_call .)
    DO              reduce using rule 98 (factor -> function_call .)


state 117

    (99) factor -> identifier . neupoint_add_operand
    (101) neupoint_add_operand -> .

    MULTIPLY        reduce using rule 101 (neupoint_add_operand -> .)
    DIVIDE          reduce using rule 101 (neupoint_add_operand -> .)
    MOD             reduce using rule 101 (neupoint_add_operand -> .)
    PLUS            reduce using rule 101 (neupoint_add_operand -> .)
    MINUS           reduce using rule 101 (neupoint_add_operand -> .)
    RIGHTPARENTHESIS reduce using rule 101 (neupoint_add_operand -> .)
    COMPARISON      reduce using rule 101 (neupoint_add_operand -> .)
    GREATERHANOREQUAL reduce using rule 101 (neupoint_add_operand -> .)
    LESSTHANOREQUAL reduce using rule 101 (neupoint_add_operand -> .)
    GREATERTHAN     reduce using rule 101 (neupoint_add_operand -> .)
    LESSTHAN        reduce using rule 101 (neupoint_add_operand -> .)
    DIFFERENT       reduce using rule 101 (neupoint_add_operand -> .)
    AND             reduce using rule 101 (neupoint_add_operand -> .)
    OR              reduce using rule 101 (neupoint_add_operand -> .)
    COMMA           reduce using rule 101 (neupoint_add_operand -> .)
    RIGHTSQRBRACKET reduce using rule 101 (neupoint_add_operand -> .)
    SEMICOLON       reduce using rule 101 (neupoint_add_operand -> .)
    TO              reduce using rule 101 (neupoint_add_operand -> .)
    DO              reduce using rule 101 (neupoint_add_operand -> .)

    neupoint_add_operand           shift and go to state 149

state 118

    (81) function_call -> ID . neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> ID . neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> ID .
    (115) neupoint_validate_function -> .

    LEFTSQRBRACKET  shift and go to state 94
    MULTIPLY        reduce using rule 21 (identifier -> ID .)
    DIVIDE          reduce using rule 21 (identifier -> ID .)
    MOD             reduce using rule 21 (identifier -> ID .)
    PLUS            reduce using rule 21 (identifier -> ID .)
    MINUS           reduce using rule 21 (identifier -> ID .)
    RIGHTPARENTHESIS reduce using rule 21 (identifier -> ID .)
    COMPARISON      reduce using rule 21 (identifier -> ID .)
    GREATERHANOREQUAL reduce using rule 21 (identifier -> ID .)
    LESSTHANOREQUAL reduce using rule 21 (identifier -> ID .)
    GREATERTHAN     reduce using rule 21 (identifier -> ID .)
    LESSTHAN        reduce using rule 21 (identifier -> ID .)
    DIFFERENT       reduce using rule 21 (identifier -> ID .)
    AND             reduce using rule 21 (identifier -> ID .)
    OR              reduce using rule 21 (identifier -> ID .)
    COMMA           reduce using rule 21 (identifier -> ID .)
    RIGHTSQRBRACKET reduce using rule 21 (identifier -> ID .)
    SEMICOLON       reduce using rule 21 (identifier -> ID .)
    TO              reduce using rule 21 (identifier -> ID .)
    DO              reduce using rule 21 (identifier -> ID .)
    LEFTPARENTHESIS reduce using rule 115 (neupoint_validate_function -> .)

    neupoint_validate_function     shift and go to state 95

state 119

    (65) reading -> READ LEFTPARENTHESIS reading_list . RIGHTPARENTHESIS SEMICOLON

    RIGHTPARENTHESIS shift and go to state 150


state 120

    (66) reading_list -> identifier . neupoint_add_operand COMMA reading_list
    (67) reading_list -> identifier . neupoint_add_operand
    (101) neupoint_add_operand -> .

    COMMA           reduce using rule 101 (neupoint_add_operand -> .)
    RIGHTPARENTHESIS reduce using rule 101 (neupoint_add_operand -> .)

    neupoint_add_operand           shift and go to state 151

state 121

    (19) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> ID . LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> ID .

    LEFTSQRBRACKET  shift and go to state 94
    COMMA           reduce using rule 21 (identifier -> ID .)
    RIGHTPARENTHESIS reduce using rule 21 (identifier -> ID .)


state 122

    (68) writing -> WRITE LEFTPARENTHESIS writing_list . RIGHTPARENTHESIS SEMICOLON

    RIGHTPARENTHESIS shift and go to state 152


state 123

    (69) writing_list -> CTESTRING . neupoint_add_cte_operand neupoint_write_quad COMMA writing_list
    (71) writing_list -> CTESTRING . neupoint_add_cte_operand neupoint_write_quad
    (102) neupoint_add_cte_operand -> .

    COMMA           reduce using rule 102 (neupoint_add_cte_operand -> .)
    RIGHTPARENTHESIS reduce using rule 102 (neupoint_add_cte_operand -> .)

    neupoint_add_cte_operand       shift and go to state 153

state 124

    (70) writing_list -> expresion . neupoint_write_quad COMMA writing_list
    (72) writing_list -> expresion . neupoint_write_quad
    (120) neupoint_write_quad -> .

    COMMA           reduce using rule 120 (neupoint_write_quad -> .)
    RIGHTPARENTHESIS reduce using rule 120 (neupoint_write_quad -> .)

    neupoint_write_quad            shift and go to state 154

state 125

    (85) expresion -> exp_relational . AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (86) expresion -> exp_relational . OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (87) expresion -> exp_relational .

    AND             shift and go to state 155
    OR              shift and go to state 156
    COMMA           reduce using rule 87 (expresion -> exp_relational .)
    RIGHTPARENTHESIS reduce using rule 87 (expresion -> exp_relational .)
    RIGHTSQRBRACKET reduce using rule 87 (expresion -> exp_relational .)
    SEMICOLON       reduce using rule 87 (expresion -> exp_relational .)


state 126

    (88) exp_relational -> exp . comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (89) exp_relational -> exp .
    (38) comparators -> . COMPARISON
    (39) comparators -> . GREATERHANOREQUAL
    (40) comparators -> . LESSTHANOREQUAL
    (41) comparators -> . GREATERTHAN
    (42) comparators -> . LESSTHAN
    (43) comparators -> . DIFFERENT

    AND             reduce using rule 89 (exp_relational -> exp .)
    OR              reduce using rule 89 (exp_relational -> exp .)
    COMMA           reduce using rule 89 (exp_relational -> exp .)
    RIGHTPARENTHESIS reduce using rule 89 (exp_relational -> exp .)
    RIGHTSQRBRACKET reduce using rule 89 (exp_relational -> exp .)
    SEMICOLON       reduce using rule 89 (exp_relational -> exp .)
    COMPARISON      shift and go to state 158
    GREATERHANOREQUAL shift and go to state 159
    LESSTHANOREQUAL shift and go to state 160
    GREATERTHAN     shift and go to state 161
    LESSTHAN        shift and go to state 162
    DIFFERENT       shift and go to state 163

    comparators                    shift and go to state 157

state 127

    (73) decision -> IF LEFTPARENTHESIS expresion . RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (74) decision -> IF LEFTPARENTHESIS expresion . RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad

    RIGHTPARENTHESIS shift and go to state 164


state 128

    (19) identifier -> ID LEFTSQRBRACKET expresion . RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> ID LEFTSQRBRACKET expresion . RIGHTSQRBRACKET

    RIGHTSQRBRACKET shift and go to state 165


state 129

    (81) function_call -> ID neupoint_validate_function LEFTPARENTHESIS . neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> ID neupoint_validate_function LEFTPARENTHESIS . neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (116) neupoint_era_quad -> .

    LEFTPARENTHESIS reduce using rule 116 (neupoint_era_quad -> .)
    CTEINT          reduce using rule 116 (neupoint_era_quad -> .)
    CTEFLOAT        reduce using rule 116 (neupoint_era_quad -> .)
    CTECHAR         reduce using rule 116 (neupoint_era_quad -> .)
    ID              reduce using rule 116 (neupoint_era_quad -> .)
    RIGHTPARENTHESIS reduce using rule 116 (neupoint_era_quad -> .)

    neupoint_era_quad              shift and go to state 166

state 130

    (77) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS . expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end
    (85) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (86) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (87) expresion -> . exp_relational
    (88) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (89) exp_relational -> . exp
    (90) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (91) exp -> . term neupoint_arithmetic_exp_quad
    (92) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (93) term -> . factor neupoint_arithmetic_term_quad
    (94) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (95) factor -> . CTEINT neupoint_add_cte_operand
    (96) factor -> . CTEFLOAT neupoint_add_cte_operand
    (97) factor -> . CTECHAR neupoint_add_cte_operand
    (98) factor -> . function_call
    (99) factor -> . identifier neupoint_add_operand
    (81) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 109
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 118

    expresion                      shift and go to state 167
    exp_relational                 shift and go to state 125
    exp                            shift and go to state 126
    term                           shift and go to state 111
    factor                         shift and go to state 112
    function_call                  shift and go to state 116
    identifier                     shift and go to state 117

state 131

    (78) non_conditional -> FOR ID neupoint_add_operand_integer . EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end

    EQUALS          shift and go to state 168


state 132

    (16) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT . RIGHTSQRBRACKET

    RIGHTSQRBRACKET shift and go to state 169


state 133

    (27) function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block . neupoint_check_for_return neupoint_end_function
    (36) neupoint_check_for_return -> .

    MODULE          reduce using rule 36 (neupoint_check_for_return -> .)
    MAIN            reduce using rule 36 (neupoint_check_for_return -> .)

    neupoint_check_for_return      shift and go to state 170

state 134

    (28) function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return . neupoint_end_function
    (37) neupoint_end_function -> .

    MODULE          reduce using rule 37 (neupoint_end_function -> .)
    MAIN            reduce using rule 37 (neupoint_end_function -> .)

    neupoint_end_function          shift and go to state 171

state 135

    (29) parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS neupoint_add_parameters .

    VAR             reduce using rule 29 (parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS neupoint_add_parameters .)
    LEFTBRACKET     reduce using rule 29 (parameters_list -> LEFTPARENTHESIS parameter RIGHTPARENTHESIS neupoint_add_parameters .)


state 136

    (31) parameter -> data_type decla_identifier COMMA . parameter
    (31) parameter -> . data_type decla_identifier COMMA parameter
    (32) parameter -> . data_type decla_identifier
    (8) data_type -> . INT
    (9) data_type -> . FLOAT
    (10) data_type -> . CHAR

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20

    data_type                      shift and go to state 82
    parameter                      shift and go to state 172

state 137

    (60) assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator . expresion neupoint_assignment_quad SEMICOLON
    (85) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (86) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (87) expresion -> . exp_relational
    (88) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (89) exp_relational -> . exp
    (90) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (91) exp -> . term neupoint_arithmetic_exp_quad
    (92) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (93) term -> . factor neupoint_arithmetic_term_quad
    (94) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (95) factor -> . CTEINT neupoint_add_cte_operand
    (96) factor -> . CTEFLOAT neupoint_add_cte_operand
    (97) factor -> . CTECHAR neupoint_add_cte_operand
    (98) factor -> . function_call
    (99) factor -> . identifier neupoint_add_operand
    (81) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 109
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 118

    identifier                     shift and go to state 117
    expresion                      shift and go to state 173
    exp_relational                 shift and go to state 125
    exp                            shift and go to state 126
    term                           shift and go to state 111
    factor                         shift and go to state 112
    function_call                  shift and go to state 116

state 138

    (61) assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator . expresion neupoint_assignment_quad SEMICOLON
    (85) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (86) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (87) expresion -> . exp_relational
    (88) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (89) exp_relational -> . exp
    (90) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (91) exp -> . term neupoint_arithmetic_exp_quad
    (92) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (93) term -> . factor neupoint_arithmetic_term_quad
    (94) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (95) factor -> . CTEINT neupoint_add_cte_operand
    (96) factor -> . CTEFLOAT neupoint_add_cte_operand
    (97) factor -> . CTECHAR neupoint_add_cte_operand
    (98) factor -> . function_call
    (99) factor -> . identifier neupoint_add_operand
    (81) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 109
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 118

    identifier                     shift and go to state 117
    expresion                      shift and go to state 174
    exp_relational                 shift and go to state 125
    exp                            shift and go to state 126
    term                           shift and go to state 111
    factor                         shift and go to state 112
    function_call                  shift and go to state 116

state 139

    (62) assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator . expresion neupoint_assignment_quad SEMICOLON
    (85) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (86) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (87) expresion -> . exp_relational
    (88) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (89) exp_relational -> . exp
    (90) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (91) exp -> . term neupoint_arithmetic_exp_quad
    (92) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (93) term -> . factor neupoint_arithmetic_term_quad
    (94) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (95) factor -> . CTEINT neupoint_add_cte_operand
    (96) factor -> . CTEFLOAT neupoint_add_cte_operand
    (97) factor -> . CTECHAR neupoint_add_cte_operand
    (98) factor -> . function_call
    (99) factor -> . identifier neupoint_add_operand
    (81) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 109
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 118

    identifier                     shift and go to state 117
    expresion                      shift and go to state 175
    exp_relational                 shift and go to state 125
    exp                            shift and go to state 126
    term                           shift and go to state 111
    factor                         shift and go to state 112
    function_call                  shift and go to state 116

state 140

    (63) assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator . neupoint_assignment_single_quad SEMICOLON
    (108) neupoint_assignment_single_quad -> .

    SEMICOLON       reduce using rule 108 (neupoint_assignment_single_quad -> .)

    neupoint_assignment_single_quad shift and go to state 176

state 141

    (64) assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator . neupoint_assignment_single_quad SEMICOLON
    (108) neupoint_assignment_single_quad -> .

    SEMICOLON       reduce using rule 108 (neupoint_assignment_single_quad -> .)

    neupoint_assignment_single_quad shift and go to state 177

state 142

    (94) factor -> LEFTPARENTHESIS neupoint_add_wall . expresion neupoint_remove_wall RIGHTPARENTHESIS
    (85) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (86) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (87) expresion -> . exp_relational
    (88) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (89) exp_relational -> . exp
    (90) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (91) exp -> . term neupoint_arithmetic_exp_quad
    (92) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (93) term -> . factor neupoint_arithmetic_term_quad
    (94) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (95) factor -> . CTEINT neupoint_add_cte_operand
    (96) factor -> . CTEFLOAT neupoint_add_cte_operand
    (97) factor -> . CTECHAR neupoint_add_cte_operand
    (98) factor -> . function_call
    (99) factor -> . identifier neupoint_add_operand
    (81) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 109
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 118

    expresion                      shift and go to state 178
    exp_relational                 shift and go to state 125
    exp                            shift and go to state 126
    term                           shift and go to state 111
    factor                         shift and go to state 112
    function_call                  shift and go to state 116
    identifier                     shift and go to state 117

state 143

    (79) function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 179


state 144

    (90) exp -> term neupoint_arithmetic_exp_quad . exp_operator neupoint_add_operator exp
    (91) exp -> term neupoint_arithmetic_exp_quad .
    (44) exp_operator -> . PLUS
    (45) exp_operator -> . MINUS

    RIGHTPARENTHESIS reduce using rule 91 (exp -> term neupoint_arithmetic_exp_quad .)
    COMPARISON      reduce using rule 91 (exp -> term neupoint_arithmetic_exp_quad .)
    GREATERHANOREQUAL reduce using rule 91 (exp -> term neupoint_arithmetic_exp_quad .)
    LESSTHANOREQUAL reduce using rule 91 (exp -> term neupoint_arithmetic_exp_quad .)
    GREATERTHAN     reduce using rule 91 (exp -> term neupoint_arithmetic_exp_quad .)
    LESSTHAN        reduce using rule 91 (exp -> term neupoint_arithmetic_exp_quad .)
    DIFFERENT       reduce using rule 91 (exp -> term neupoint_arithmetic_exp_quad .)
    AND             reduce using rule 91 (exp -> term neupoint_arithmetic_exp_quad .)
    OR              reduce using rule 91 (exp -> term neupoint_arithmetic_exp_quad .)
    COMMA           reduce using rule 91 (exp -> term neupoint_arithmetic_exp_quad .)
    RIGHTSQRBRACKET reduce using rule 91 (exp -> term neupoint_arithmetic_exp_quad .)
    SEMICOLON       reduce using rule 91 (exp -> term neupoint_arithmetic_exp_quad .)
    TO              reduce using rule 91 (exp -> term neupoint_arithmetic_exp_quad .)
    DO              reduce using rule 91 (exp -> term neupoint_arithmetic_exp_quad .)
    PLUS            shift and go to state 181
    MINUS           shift and go to state 182

    exp_operator                   shift and go to state 180

state 145

    (92) term -> factor neupoint_arithmetic_term_quad . term_operator neupoint_add_operator term
    (93) term -> factor neupoint_arithmetic_term_quad .
    (46) term_operator -> . MULTIPLY
    (47) term_operator -> . DIVIDE
    (48) term_operator -> . MOD

    PLUS            reduce using rule 93 (term -> factor neupoint_arithmetic_term_quad .)
    MINUS           reduce using rule 93 (term -> factor neupoint_arithmetic_term_quad .)
    RIGHTPARENTHESIS reduce using rule 93 (term -> factor neupoint_arithmetic_term_quad .)
    COMPARISON      reduce using rule 93 (term -> factor neupoint_arithmetic_term_quad .)
    GREATERHANOREQUAL reduce using rule 93 (term -> factor neupoint_arithmetic_term_quad .)
    LESSTHANOREQUAL reduce using rule 93 (term -> factor neupoint_arithmetic_term_quad .)
    GREATERTHAN     reduce using rule 93 (term -> factor neupoint_arithmetic_term_quad .)
    LESSTHAN        reduce using rule 93 (term -> factor neupoint_arithmetic_term_quad .)
    DIFFERENT       reduce using rule 93 (term -> factor neupoint_arithmetic_term_quad .)
    AND             reduce using rule 93 (term -> factor neupoint_arithmetic_term_quad .)
    OR              reduce using rule 93 (term -> factor neupoint_arithmetic_term_quad .)
    COMMA           reduce using rule 93 (term -> factor neupoint_arithmetic_term_quad .)
    RIGHTSQRBRACKET reduce using rule 93 (term -> factor neupoint_arithmetic_term_quad .)
    SEMICOLON       reduce using rule 93 (term -> factor neupoint_arithmetic_term_quad .)
    TO              reduce using rule 93 (term -> factor neupoint_arithmetic_term_quad .)
    DO              reduce using rule 93 (term -> factor neupoint_arithmetic_term_quad .)
    MULTIPLY        shift and go to state 184
    DIVIDE          shift and go to state 185
    MOD             shift and go to state 186

    term_operator                  shift and go to state 183

state 146

    (95) factor -> CTEINT neupoint_add_cte_operand .

    MULTIPLY        reduce using rule 95 (factor -> CTEINT neupoint_add_cte_operand .)
    DIVIDE          reduce using rule 95 (factor -> CTEINT neupoint_add_cte_operand .)
    MOD             reduce using rule 95 (factor -> CTEINT neupoint_add_cte_operand .)
    PLUS            reduce using rule 95 (factor -> CTEINT neupoint_add_cte_operand .)
    MINUS           reduce using rule 95 (factor -> CTEINT neupoint_add_cte_operand .)
    RIGHTPARENTHESIS reduce using rule 95 (factor -> CTEINT neupoint_add_cte_operand .)
    COMPARISON      reduce using rule 95 (factor -> CTEINT neupoint_add_cte_operand .)
    GREATERHANOREQUAL reduce using rule 95 (factor -> CTEINT neupoint_add_cte_operand .)
    LESSTHANOREQUAL reduce using rule 95 (factor -> CTEINT neupoint_add_cte_operand .)
    GREATERTHAN     reduce using rule 95 (factor -> CTEINT neupoint_add_cte_operand .)
    LESSTHAN        reduce using rule 95 (factor -> CTEINT neupoint_add_cte_operand .)
    DIFFERENT       reduce using rule 95 (factor -> CTEINT neupoint_add_cte_operand .)
    AND             reduce using rule 95 (factor -> CTEINT neupoint_add_cte_operand .)
    OR              reduce using rule 95 (factor -> CTEINT neupoint_add_cte_operand .)
    COMMA           reduce using rule 95 (factor -> CTEINT neupoint_add_cte_operand .)
    RIGHTSQRBRACKET reduce using rule 95 (factor -> CTEINT neupoint_add_cte_operand .)
    SEMICOLON       reduce using rule 95 (factor -> CTEINT neupoint_add_cte_operand .)
    TO              reduce using rule 95 (factor -> CTEINT neupoint_add_cte_operand .)
    DO              reduce using rule 95 (factor -> CTEINT neupoint_add_cte_operand .)


state 147

    (96) factor -> CTEFLOAT neupoint_add_cte_operand .

    MULTIPLY        reduce using rule 96 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    DIVIDE          reduce using rule 96 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    MOD             reduce using rule 96 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    PLUS            reduce using rule 96 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    MINUS           reduce using rule 96 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    RIGHTPARENTHESIS reduce using rule 96 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    COMPARISON      reduce using rule 96 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    GREATERHANOREQUAL reduce using rule 96 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    LESSTHANOREQUAL reduce using rule 96 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    GREATERTHAN     reduce using rule 96 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    LESSTHAN        reduce using rule 96 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    DIFFERENT       reduce using rule 96 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    AND             reduce using rule 96 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    OR              reduce using rule 96 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    COMMA           reduce using rule 96 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    RIGHTSQRBRACKET reduce using rule 96 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    SEMICOLON       reduce using rule 96 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    TO              reduce using rule 96 (factor -> CTEFLOAT neupoint_add_cte_operand .)
    DO              reduce using rule 96 (factor -> CTEFLOAT neupoint_add_cte_operand .)


state 148

    (97) factor -> CTECHAR neupoint_add_cte_operand .

    MULTIPLY        reduce using rule 97 (factor -> CTECHAR neupoint_add_cte_operand .)
    DIVIDE          reduce using rule 97 (factor -> CTECHAR neupoint_add_cte_operand .)
    MOD             reduce using rule 97 (factor -> CTECHAR neupoint_add_cte_operand .)
    PLUS            reduce using rule 97 (factor -> CTECHAR neupoint_add_cte_operand .)
    MINUS           reduce using rule 97 (factor -> CTECHAR neupoint_add_cte_operand .)
    RIGHTPARENTHESIS reduce using rule 97 (factor -> CTECHAR neupoint_add_cte_operand .)
    COMPARISON      reduce using rule 97 (factor -> CTECHAR neupoint_add_cte_operand .)
    GREATERHANOREQUAL reduce using rule 97 (factor -> CTECHAR neupoint_add_cte_operand .)
    LESSTHANOREQUAL reduce using rule 97 (factor -> CTECHAR neupoint_add_cte_operand .)
    GREATERTHAN     reduce using rule 97 (factor -> CTECHAR neupoint_add_cte_operand .)
    LESSTHAN        reduce using rule 97 (factor -> CTECHAR neupoint_add_cte_operand .)
    DIFFERENT       reduce using rule 97 (factor -> CTECHAR neupoint_add_cte_operand .)
    AND             reduce using rule 97 (factor -> CTECHAR neupoint_add_cte_operand .)
    OR              reduce using rule 97 (factor -> CTECHAR neupoint_add_cte_operand .)
    COMMA           reduce using rule 97 (factor -> CTECHAR neupoint_add_cte_operand .)
    RIGHTSQRBRACKET reduce using rule 97 (factor -> CTECHAR neupoint_add_cte_operand .)
    SEMICOLON       reduce using rule 97 (factor -> CTECHAR neupoint_add_cte_operand .)
    TO              reduce using rule 97 (factor -> CTECHAR neupoint_add_cte_operand .)
    DO              reduce using rule 97 (factor -> CTECHAR neupoint_add_cte_operand .)


state 149

    (99) factor -> identifier neupoint_add_operand .

    MULTIPLY        reduce using rule 99 (factor -> identifier neupoint_add_operand .)
    DIVIDE          reduce using rule 99 (factor -> identifier neupoint_add_operand .)
    MOD             reduce using rule 99 (factor -> identifier neupoint_add_operand .)
    PLUS            reduce using rule 99 (factor -> identifier neupoint_add_operand .)
    MINUS           reduce using rule 99 (factor -> identifier neupoint_add_operand .)
    RIGHTPARENTHESIS reduce using rule 99 (factor -> identifier neupoint_add_operand .)
    COMPARISON      reduce using rule 99 (factor -> identifier neupoint_add_operand .)
    GREATERHANOREQUAL reduce using rule 99 (factor -> identifier neupoint_add_operand .)
    LESSTHANOREQUAL reduce using rule 99 (factor -> identifier neupoint_add_operand .)
    GREATERTHAN     reduce using rule 99 (factor -> identifier neupoint_add_operand .)
    LESSTHAN        reduce using rule 99 (factor -> identifier neupoint_add_operand .)
    DIFFERENT       reduce using rule 99 (factor -> identifier neupoint_add_operand .)
    AND             reduce using rule 99 (factor -> identifier neupoint_add_operand .)
    OR              reduce using rule 99 (factor -> identifier neupoint_add_operand .)
    COMMA           reduce using rule 99 (factor -> identifier neupoint_add_operand .)
    RIGHTSQRBRACKET reduce using rule 99 (factor -> identifier neupoint_add_operand .)
    SEMICOLON       reduce using rule 99 (factor -> identifier neupoint_add_operand .)
    TO              reduce using rule 99 (factor -> identifier neupoint_add_operand .)
    DO              reduce using rule 99 (factor -> identifier neupoint_add_operand .)


state 150

    (65) reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 187


state 151

    (66) reading_list -> identifier neupoint_add_operand . COMMA reading_list
    (67) reading_list -> identifier neupoint_add_operand .

    COMMA           shift and go to state 188
    RIGHTPARENTHESIS reduce using rule 67 (reading_list -> identifier neupoint_add_operand .)


state 152

    (68) writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 189


state 153

    (69) writing_list -> CTESTRING neupoint_add_cte_operand . neupoint_write_quad COMMA writing_list
    (71) writing_list -> CTESTRING neupoint_add_cte_operand . neupoint_write_quad
    (120) neupoint_write_quad -> .

    COMMA           reduce using rule 120 (neupoint_write_quad -> .)
    RIGHTPARENTHESIS reduce using rule 120 (neupoint_write_quad -> .)

    neupoint_write_quad            shift and go to state 190

state 154

    (70) writing_list -> expresion neupoint_write_quad . COMMA writing_list
    (72) writing_list -> expresion neupoint_write_quad .

    COMMA           shift and go to state 191
    RIGHTPARENTHESIS reduce using rule 72 (writing_list -> expresion neupoint_write_quad .)


state 155

    (85) expresion -> exp_relational AND . neupoint_add_operator expresion neupoint_logical_relational_opt
    (100) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 100 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 100 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 100 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 100 (neupoint_add_operator -> .)
    ID              reduce using rule 100 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 192

state 156

    (86) expresion -> exp_relational OR . neupoint_add_operator expresion neupoint_logical_relational_opt
    (100) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 100 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 100 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 100 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 100 (neupoint_add_operator -> .)
    ID              reduce using rule 100 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 193

state 157

    (88) exp_relational -> exp comparators . neupoint_add_operator exp neupoint_logical_relational_opt
    (100) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 100 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 100 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 100 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 100 (neupoint_add_operator -> .)
    ID              reduce using rule 100 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 194

state 158

    (38) comparators -> COMPARISON .

    LEFTPARENTHESIS reduce using rule 38 (comparators -> COMPARISON .)
    CTEINT          reduce using rule 38 (comparators -> COMPARISON .)
    CTEFLOAT        reduce using rule 38 (comparators -> COMPARISON .)
    CTECHAR         reduce using rule 38 (comparators -> COMPARISON .)
    ID              reduce using rule 38 (comparators -> COMPARISON .)


state 159

    (39) comparators -> GREATERHANOREQUAL .

    LEFTPARENTHESIS reduce using rule 39 (comparators -> GREATERHANOREQUAL .)
    CTEINT          reduce using rule 39 (comparators -> GREATERHANOREQUAL .)
    CTEFLOAT        reduce using rule 39 (comparators -> GREATERHANOREQUAL .)
    CTECHAR         reduce using rule 39 (comparators -> GREATERHANOREQUAL .)
    ID              reduce using rule 39 (comparators -> GREATERHANOREQUAL .)


state 160

    (40) comparators -> LESSTHANOREQUAL .

    LEFTPARENTHESIS reduce using rule 40 (comparators -> LESSTHANOREQUAL .)
    CTEINT          reduce using rule 40 (comparators -> LESSTHANOREQUAL .)
    CTEFLOAT        reduce using rule 40 (comparators -> LESSTHANOREQUAL .)
    CTECHAR         reduce using rule 40 (comparators -> LESSTHANOREQUAL .)
    ID              reduce using rule 40 (comparators -> LESSTHANOREQUAL .)


state 161

    (41) comparators -> GREATERTHAN .

    LEFTPARENTHESIS reduce using rule 41 (comparators -> GREATERTHAN .)
    CTEINT          reduce using rule 41 (comparators -> GREATERTHAN .)
    CTEFLOAT        reduce using rule 41 (comparators -> GREATERTHAN .)
    CTECHAR         reduce using rule 41 (comparators -> GREATERTHAN .)
    ID              reduce using rule 41 (comparators -> GREATERTHAN .)


state 162

    (42) comparators -> LESSTHAN .

    LEFTPARENTHESIS reduce using rule 42 (comparators -> LESSTHAN .)
    CTEINT          reduce using rule 42 (comparators -> LESSTHAN .)
    CTEFLOAT        reduce using rule 42 (comparators -> LESSTHAN .)
    CTECHAR         reduce using rule 42 (comparators -> LESSTHAN .)
    ID              reduce using rule 42 (comparators -> LESSTHAN .)


state 163

    (43) comparators -> DIFFERENT .

    LEFTPARENTHESIS reduce using rule 43 (comparators -> DIFFERENT .)
    CTEINT          reduce using rule 43 (comparators -> DIFFERENT .)
    CTEFLOAT        reduce using rule 43 (comparators -> DIFFERENT .)
    CTECHAR         reduce using rule 43 (comparators -> DIFFERENT .)
    ID              reduce using rule 43 (comparators -> DIFFERENT .)


state 164

    (73) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS . neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (74) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS . neupoint_conditional_quad THEN block neupoint_end_conditional_quad
    (110) neupoint_conditional_quad -> .

    THEN            reduce using rule 110 (neupoint_conditional_quad -> .)

    neupoint_conditional_quad      shift and go to state 195

state 165

    (19) identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET . LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .

    LEFTSQRBRACKET  shift and go to state 196
    EQUALS          reduce using rule 20 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    PLUSEQUALS      reduce using rule 20 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    SUBSTRACTEQUALS reduce using rule 20 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    INCREMENT       reduce using rule 20 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DECREMENT       reduce using rule 20 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MULTIPLY        reduce using rule 20 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DIVIDE          reduce using rule 20 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MOD             reduce using rule 20 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    PLUS            reduce using rule 20 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MINUS           reduce using rule 20 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    RIGHTPARENTHESIS reduce using rule 20 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    COMMA           reduce using rule 20 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    COMPARISON      reduce using rule 20 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    GREATERHANOREQUAL reduce using rule 20 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    LESSTHANOREQUAL reduce using rule 20 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    GREATERTHAN     reduce using rule 20 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    LESSTHAN        reduce using rule 20 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DIFFERENT       reduce using rule 20 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    AND             reduce using rule 20 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    OR              reduce using rule 20 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    RIGHTSQRBRACKET reduce using rule 20 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    SEMICOLON       reduce using rule 20 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    TO              reduce using rule 20 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DO              reduce using rule 20 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)


state 166

    (81) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad . neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad . neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (105) neupoint_add_wall -> .

    LEFTPARENTHESIS reduce using rule 105 (neupoint_add_wall -> .)
    CTEINT          reduce using rule 105 (neupoint_add_wall -> .)
    CTEFLOAT        reduce using rule 105 (neupoint_add_wall -> .)
    CTECHAR         reduce using rule 105 (neupoint_add_wall -> .)
    ID              reduce using rule 105 (neupoint_add_wall -> .)
    RIGHTPARENTHESIS reduce using rule 105 (neupoint_add_wall -> .)

    neupoint_add_wall              shift and go to state 197

state 167

    (77) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion . RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end

    RIGHTPARENTHESIS shift and go to state 198


state 168

    (78) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS . neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end
    (100) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 100 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 100 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 100 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 100 (neupoint_add_operator -> .)
    ID              reduce using rule 100 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 199

state 169

    (16) decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .

    COMMA           reduce using rule 16 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)
    SEMICOLON       reduce using rule 16 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)
    RIGHTPARENTHESIS reduce using rule 16 (decla_identifier -> ID LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET LEFTSQRBRACKET CTEINT RIGHTSQRBRACKET .)


state 170

    (27) function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return . neupoint_end_function
    (37) neupoint_end_function -> .

    MODULE          reduce using rule 37 (neupoint_end_function -> .)
    MAIN            reduce using rule 37 (neupoint_end_function -> .)

    neupoint_end_function          shift and go to state 200

state 171

    (28) function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function .

    MODULE          reduce using rule 28 (function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function .)
    MAIN            reduce using rule 28 (function -> MODULE return_type ID neupoint_add_function parameters_list neupoint_start_function block neupoint_check_for_return neupoint_end_function .)


state 172

    (31) parameter -> data_type decla_identifier COMMA parameter .

    RIGHTPARENTHESIS reduce using rule 31 (parameter -> data_type decla_identifier COMMA parameter .)


state 173

    (60) assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion . neupoint_assignment_quad SEMICOLON
    (107) neupoint_assignment_quad -> .

    SEMICOLON       reduce using rule 107 (neupoint_assignment_quad -> .)

    neupoint_assignment_quad       shift and go to state 201

state 174

    (61) assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion . neupoint_assignment_quad SEMICOLON
    (107) neupoint_assignment_quad -> .

    SEMICOLON       reduce using rule 107 (neupoint_assignment_quad -> .)

    neupoint_assignment_quad       shift and go to state 202

state 175

    (62) assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion . neupoint_assignment_quad SEMICOLON
    (107) neupoint_assignment_quad -> .

    SEMICOLON       reduce using rule 107 (neupoint_assignment_quad -> .)

    neupoint_assignment_quad       shift and go to state 203

state 176

    (63) assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad . SEMICOLON

    SEMICOLON       shift and go to state 204


state 177

    (64) assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad . SEMICOLON

    SEMICOLON       shift and go to state 205


state 178

    (94) factor -> LEFTPARENTHESIS neupoint_add_wall expresion . neupoint_remove_wall RIGHTPARENTHESIS
    (106) neupoint_remove_wall -> .

    RIGHTPARENTHESIS reduce using rule 106 (neupoint_remove_wall -> .)

    neupoint_remove_wall           shift and go to state 206

state 179

    (79) function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .

    RETURN          reduce using rule 79 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    READ            reduce using rule 79 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    WRITE           reduce using rule 79 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    IF              reduce using rule 79 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    ID              reduce using rule 79 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 79 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    FOR             reduce using rule 79 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 79 (function_return -> RETURN LEFTPARENTHESIS exp RIGHTPARENTHESIS SEMICOLON .)


state 180

    (90) exp -> term neupoint_arithmetic_exp_quad exp_operator . neupoint_add_operator exp
    (100) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 100 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 100 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 100 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 100 (neupoint_add_operator -> .)
    ID              reduce using rule 100 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 207

state 181

    (44) exp_operator -> PLUS .

    LEFTPARENTHESIS reduce using rule 44 (exp_operator -> PLUS .)
    CTEINT          reduce using rule 44 (exp_operator -> PLUS .)
    CTEFLOAT        reduce using rule 44 (exp_operator -> PLUS .)
    CTECHAR         reduce using rule 44 (exp_operator -> PLUS .)
    ID              reduce using rule 44 (exp_operator -> PLUS .)


state 182

    (45) exp_operator -> MINUS .

    LEFTPARENTHESIS reduce using rule 45 (exp_operator -> MINUS .)
    CTEINT          reduce using rule 45 (exp_operator -> MINUS .)
    CTEFLOAT        reduce using rule 45 (exp_operator -> MINUS .)
    CTECHAR         reduce using rule 45 (exp_operator -> MINUS .)
    ID              reduce using rule 45 (exp_operator -> MINUS .)


state 183

    (92) term -> factor neupoint_arithmetic_term_quad term_operator . neupoint_add_operator term
    (100) neupoint_add_operator -> .

    LEFTPARENTHESIS reduce using rule 100 (neupoint_add_operator -> .)
    CTEINT          reduce using rule 100 (neupoint_add_operator -> .)
    CTEFLOAT        reduce using rule 100 (neupoint_add_operator -> .)
    CTECHAR         reduce using rule 100 (neupoint_add_operator -> .)
    ID              reduce using rule 100 (neupoint_add_operator -> .)

    neupoint_add_operator          shift and go to state 208

state 184

    (46) term_operator -> MULTIPLY .

    LEFTPARENTHESIS reduce using rule 46 (term_operator -> MULTIPLY .)
    CTEINT          reduce using rule 46 (term_operator -> MULTIPLY .)
    CTEFLOAT        reduce using rule 46 (term_operator -> MULTIPLY .)
    CTECHAR         reduce using rule 46 (term_operator -> MULTIPLY .)
    ID              reduce using rule 46 (term_operator -> MULTIPLY .)


state 185

    (47) term_operator -> DIVIDE .

    LEFTPARENTHESIS reduce using rule 47 (term_operator -> DIVIDE .)
    CTEINT          reduce using rule 47 (term_operator -> DIVIDE .)
    CTEFLOAT        reduce using rule 47 (term_operator -> DIVIDE .)
    CTECHAR         reduce using rule 47 (term_operator -> DIVIDE .)
    ID              reduce using rule 47 (term_operator -> DIVIDE .)


state 186

    (48) term_operator -> MOD .

    LEFTPARENTHESIS reduce using rule 48 (term_operator -> MOD .)
    CTEINT          reduce using rule 48 (term_operator -> MOD .)
    CTEFLOAT        reduce using rule 48 (term_operator -> MOD .)
    CTECHAR         reduce using rule 48 (term_operator -> MOD .)
    ID              reduce using rule 48 (term_operator -> MOD .)


state 187

    (65) reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .

    RETURN          reduce using rule 65 (reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .)
    READ            reduce using rule 65 (reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .)
    WRITE           reduce using rule 65 (reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .)
    IF              reduce using rule 65 (reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .)
    ID              reduce using rule 65 (reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 65 (reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .)
    FOR             reduce using rule 65 (reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 65 (reading -> READ LEFTPARENTHESIS reading_list RIGHTPARENTHESIS SEMICOLON .)


state 188

    (66) reading_list -> identifier neupoint_add_operand COMMA . reading_list
    (66) reading_list -> . identifier neupoint_add_operand COMMA reading_list
    (67) reading_list -> . identifier neupoint_add_operand
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> . ID

    ID              shift and go to state 121

    identifier                     shift and go to state 120
    reading_list                   shift and go to state 209

state 189

    (68) writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .

    RETURN          reduce using rule 68 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    READ            reduce using rule 68 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    WRITE           reduce using rule 68 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    IF              reduce using rule 68 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    ID              reduce using rule 68 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 68 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    FOR             reduce using rule 68 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)
    RIGHTBRACKET    reduce using rule 68 (writing -> WRITE LEFTPARENTHESIS writing_list RIGHTPARENTHESIS SEMICOLON .)


state 190

    (69) writing_list -> CTESTRING neupoint_add_cte_operand neupoint_write_quad . COMMA writing_list
    (71) writing_list -> CTESTRING neupoint_add_cte_operand neupoint_write_quad .

    COMMA           shift and go to state 210
    RIGHTPARENTHESIS reduce using rule 71 (writing_list -> CTESTRING neupoint_add_cte_operand neupoint_write_quad .)


state 191

    (70) writing_list -> expresion neupoint_write_quad COMMA . writing_list
    (69) writing_list -> . CTESTRING neupoint_add_cte_operand neupoint_write_quad COMMA writing_list
    (70) writing_list -> . expresion neupoint_write_quad COMMA writing_list
    (71) writing_list -> . CTESTRING neupoint_add_cte_operand neupoint_write_quad
    (72) writing_list -> . expresion neupoint_write_quad
    (85) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (86) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (87) expresion -> . exp_relational
    (88) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (89) exp_relational -> . exp
    (90) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (91) exp -> . term neupoint_arithmetic_exp_quad
    (92) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (93) term -> . factor neupoint_arithmetic_term_quad
    (94) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (95) factor -> . CTEINT neupoint_add_cte_operand
    (96) factor -> . CTEFLOAT neupoint_add_cte_operand
    (97) factor -> . CTECHAR neupoint_add_cte_operand
    (98) factor -> . function_call
    (99) factor -> . identifier neupoint_add_operand
    (81) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> . ID

    CTESTRING       shift and go to state 123
    LEFTPARENTHESIS shift and go to state 109
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 118

    expresion                      shift and go to state 124
    writing_list                   shift and go to state 211
    exp_relational                 shift and go to state 125
    exp                            shift and go to state 126
    term                           shift and go to state 111
    factor                         shift and go to state 112
    function_call                  shift and go to state 116
    identifier                     shift and go to state 117

state 192

    (85) expresion -> exp_relational AND neupoint_add_operator . expresion neupoint_logical_relational_opt
    (85) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (86) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (87) expresion -> . exp_relational
    (88) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (89) exp_relational -> . exp
    (90) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (91) exp -> . term neupoint_arithmetic_exp_quad
    (92) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (93) term -> . factor neupoint_arithmetic_term_quad
    (94) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (95) factor -> . CTEINT neupoint_add_cte_operand
    (96) factor -> . CTEFLOAT neupoint_add_cte_operand
    (97) factor -> . CTECHAR neupoint_add_cte_operand
    (98) factor -> . function_call
    (99) factor -> . identifier neupoint_add_operand
    (81) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 109
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 118

    exp_relational                 shift and go to state 125
    expresion                      shift and go to state 212
    exp                            shift and go to state 126
    term                           shift and go to state 111
    factor                         shift and go to state 112
    function_call                  shift and go to state 116
    identifier                     shift and go to state 117

state 193

    (86) expresion -> exp_relational OR neupoint_add_operator . expresion neupoint_logical_relational_opt
    (85) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (86) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (87) expresion -> . exp_relational
    (88) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (89) exp_relational -> . exp
    (90) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (91) exp -> . term neupoint_arithmetic_exp_quad
    (92) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (93) term -> . factor neupoint_arithmetic_term_quad
    (94) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (95) factor -> . CTEINT neupoint_add_cte_operand
    (96) factor -> . CTEFLOAT neupoint_add_cte_operand
    (97) factor -> . CTECHAR neupoint_add_cte_operand
    (98) factor -> . function_call
    (99) factor -> . identifier neupoint_add_operand
    (81) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 109
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 118

    exp_relational                 shift and go to state 125
    expresion                      shift and go to state 213
    exp                            shift and go to state 126
    term                           shift and go to state 111
    factor                         shift and go to state 112
    function_call                  shift and go to state 116
    identifier                     shift and go to state 117

state 194

    (88) exp_relational -> exp comparators neupoint_add_operator . exp neupoint_logical_relational_opt
    (90) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (91) exp -> . term neupoint_arithmetic_exp_quad
    (92) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (93) term -> . factor neupoint_arithmetic_term_quad
    (94) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (95) factor -> . CTEINT neupoint_add_cte_operand
    (96) factor -> . CTEFLOAT neupoint_add_cte_operand
    (97) factor -> . CTECHAR neupoint_add_cte_operand
    (98) factor -> . function_call
    (99) factor -> . identifier neupoint_add_operand
    (81) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 109
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 118

    exp                            shift and go to state 214
    term                           shift and go to state 111
    factor                         shift and go to state 112
    function_call                  shift and go to state 116
    identifier                     shift and go to state 117

state 195

    (73) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad . THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (74) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad . THEN block neupoint_end_conditional_quad

    THEN            shift and go to state 215


state 196

    (19) identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET . expresion RIGHTSQRBRACKET
    (85) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (86) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (87) expresion -> . exp_relational
    (88) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (89) exp_relational -> . exp
    (90) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (91) exp -> . term neupoint_arithmetic_exp_quad
    (92) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (93) term -> . factor neupoint_arithmetic_term_quad
    (94) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (95) factor -> . CTEINT neupoint_add_cte_operand
    (96) factor -> . CTEFLOAT neupoint_add_cte_operand
    (97) factor -> . CTECHAR neupoint_add_cte_operand
    (98) factor -> . function_call
    (99) factor -> . identifier neupoint_add_operand
    (81) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 109
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 118

    expresion                      shift and go to state 216
    exp_relational                 shift and go to state 125
    exp                            shift and go to state 126
    term                           shift and go to state 111
    factor                         shift and go to state 112
    function_call                  shift and go to state 116
    identifier                     shift and go to state 117

state 197

    (81) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall . ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall . neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (83) ags_list -> . expresion neupoint_validate_args COMMA ags_list
    (84) ags_list -> . expresion neupoint_validate_args
    (118) neupoint_validate_num_args -> .
    (85) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (86) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (87) expresion -> . exp_relational
    (88) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (89) exp_relational -> . exp
    (90) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (91) exp -> . term neupoint_arithmetic_exp_quad
    (92) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (93) term -> . factor neupoint_arithmetic_term_quad
    (94) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (95) factor -> . CTEINT neupoint_add_cte_operand
    (96) factor -> . CTEFLOAT neupoint_add_cte_operand
    (97) factor -> . CTECHAR neupoint_add_cte_operand
    (98) factor -> . function_call
    (99) factor -> . identifier neupoint_add_operand
    (81) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> . ID

    RIGHTPARENTHESIS reduce using rule 118 (neupoint_validate_num_args -> .)
    LEFTPARENTHESIS shift and go to state 109
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 118

    ags_list                       shift and go to state 217
    neupoint_validate_num_args     shift and go to state 218
    expresion                      shift and go to state 219
    exp_relational                 shift and go to state 125
    exp                            shift and go to state 126
    term                           shift and go to state 111
    factor                         shift and go to state 112
    function_call                  shift and go to state 116
    identifier                     shift and go to state 117

state 198

    (77) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS . neupoint_conditional_quad DO block neupoint_while_end
    (110) neupoint_conditional_quad -> .

    DO              reduce using rule 110 (neupoint_conditional_quad -> .)

    neupoint_conditional_quad      shift and go to state 220

state 199

    (78) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator . exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end
    (90) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (91) exp -> . term neupoint_arithmetic_exp_quad
    (92) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (93) term -> . factor neupoint_arithmetic_term_quad
    (94) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (95) factor -> . CTEINT neupoint_add_cte_operand
    (96) factor -> . CTEFLOAT neupoint_add_cte_operand
    (97) factor -> . CTECHAR neupoint_add_cte_operand
    (98) factor -> . function_call
    (99) factor -> . identifier neupoint_add_operand
    (81) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 109
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 118

    exp                            shift and go to state 221
    term                           shift and go to state 111
    factor                         shift and go to state 112
    function_call                  shift and go to state 116
    identifier                     shift and go to state 117

state 200

    (27) function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function .

    MODULE          reduce using rule 27 (function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function .)
    MAIN            reduce using rule 27 (function -> MODULE return_type ID neupoint_add_function parameters_list vars neupoint_start_function block neupoint_check_for_return neupoint_end_function .)


state 201

    (60) assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad . SEMICOLON

    SEMICOLON       shift and go to state 222


state 202

    (61) assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad . SEMICOLON

    SEMICOLON       shift and go to state 223


state 203

    (62) assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad . SEMICOLON

    SEMICOLON       shift and go to state 224


state 204

    (63) assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .

    RETURN          reduce using rule 63 (assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    READ            reduce using rule 63 (assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    WRITE           reduce using rule 63 (assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    IF              reduce using rule 63 (assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    ID              reduce using rule 63 (assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    WHILE           reduce using rule 63 (assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    FOR             reduce using rule 63 (assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    RIGHTBRACKET    reduce using rule 63 (assignment -> identifier neupoint_add_operand INCREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)


state 205

    (64) assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .

    RETURN          reduce using rule 64 (assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    READ            reduce using rule 64 (assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    WRITE           reduce using rule 64 (assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    IF              reduce using rule 64 (assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    ID              reduce using rule 64 (assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    WHILE           reduce using rule 64 (assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    FOR             reduce using rule 64 (assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)
    RIGHTBRACKET    reduce using rule 64 (assignment -> identifier neupoint_add_operand DECREMENT neupoint_add_operator neupoint_assignment_single_quad SEMICOLON .)


state 206

    (94) factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall . RIGHTPARENTHESIS

    RIGHTPARENTHESIS shift and go to state 225


state 207

    (90) exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator . exp
    (90) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (91) exp -> . term neupoint_arithmetic_exp_quad
    (92) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (93) term -> . factor neupoint_arithmetic_term_quad
    (94) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (95) factor -> . CTEINT neupoint_add_cte_operand
    (96) factor -> . CTEFLOAT neupoint_add_cte_operand
    (97) factor -> . CTECHAR neupoint_add_cte_operand
    (98) factor -> . function_call
    (99) factor -> . identifier neupoint_add_operand
    (81) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 109
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 118

    term                           shift and go to state 111
    exp                            shift and go to state 226
    factor                         shift and go to state 112
    function_call                  shift and go to state 116
    identifier                     shift and go to state 117

state 208

    (92) term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator . term
    (92) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (93) term -> . factor neupoint_arithmetic_term_quad
    (94) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (95) factor -> . CTEINT neupoint_add_cte_operand
    (96) factor -> . CTEFLOAT neupoint_add_cte_operand
    (97) factor -> . CTECHAR neupoint_add_cte_operand
    (98) factor -> . function_call
    (99) factor -> . identifier neupoint_add_operand
    (81) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 109
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 118

    factor                         shift and go to state 112
    term                           shift and go to state 227
    function_call                  shift and go to state 116
    identifier                     shift and go to state 117

state 209

    (66) reading_list -> identifier neupoint_add_operand COMMA reading_list .

    RIGHTPARENTHESIS reduce using rule 66 (reading_list -> identifier neupoint_add_operand COMMA reading_list .)


state 210

    (69) writing_list -> CTESTRING neupoint_add_cte_operand neupoint_write_quad COMMA . writing_list
    (69) writing_list -> . CTESTRING neupoint_add_cte_operand neupoint_write_quad COMMA writing_list
    (70) writing_list -> . expresion neupoint_write_quad COMMA writing_list
    (71) writing_list -> . CTESTRING neupoint_add_cte_operand neupoint_write_quad
    (72) writing_list -> . expresion neupoint_write_quad
    (85) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (86) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (87) expresion -> . exp_relational
    (88) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (89) exp_relational -> . exp
    (90) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (91) exp -> . term neupoint_arithmetic_exp_quad
    (92) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (93) term -> . factor neupoint_arithmetic_term_quad
    (94) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (95) factor -> . CTEINT neupoint_add_cte_operand
    (96) factor -> . CTEFLOAT neupoint_add_cte_operand
    (97) factor -> . CTECHAR neupoint_add_cte_operand
    (98) factor -> . function_call
    (99) factor -> . identifier neupoint_add_operand
    (81) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> . ID

    CTESTRING       shift and go to state 123
    LEFTPARENTHESIS shift and go to state 109
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 118

    writing_list                   shift and go to state 228
    expresion                      shift and go to state 124
    exp_relational                 shift and go to state 125
    exp                            shift and go to state 126
    term                           shift and go to state 111
    factor                         shift and go to state 112
    function_call                  shift and go to state 116
    identifier                     shift and go to state 117

state 211

    (70) writing_list -> expresion neupoint_write_quad COMMA writing_list .

    RIGHTPARENTHESIS reduce using rule 70 (writing_list -> expresion neupoint_write_quad COMMA writing_list .)


state 212

    (85) expresion -> exp_relational AND neupoint_add_operator expresion . neupoint_logical_relational_opt
    (109) neupoint_logical_relational_opt -> .

    COMMA           reduce using rule 109 (neupoint_logical_relational_opt -> .)
    RIGHTPARENTHESIS reduce using rule 109 (neupoint_logical_relational_opt -> .)
    RIGHTSQRBRACKET reduce using rule 109 (neupoint_logical_relational_opt -> .)
    SEMICOLON       reduce using rule 109 (neupoint_logical_relational_opt -> .)

    neupoint_logical_relational_opt shift and go to state 229

state 213

    (86) expresion -> exp_relational OR neupoint_add_operator expresion . neupoint_logical_relational_opt
    (109) neupoint_logical_relational_opt -> .

    COMMA           reduce using rule 109 (neupoint_logical_relational_opt -> .)
    RIGHTPARENTHESIS reduce using rule 109 (neupoint_logical_relational_opt -> .)
    RIGHTSQRBRACKET reduce using rule 109 (neupoint_logical_relational_opt -> .)
    SEMICOLON       reduce using rule 109 (neupoint_logical_relational_opt -> .)

    neupoint_logical_relational_opt shift and go to state 230

state 214

    (88) exp_relational -> exp comparators neupoint_add_operator exp . neupoint_logical_relational_opt
    (109) neupoint_logical_relational_opt -> .

    AND             reduce using rule 109 (neupoint_logical_relational_opt -> .)
    OR              reduce using rule 109 (neupoint_logical_relational_opt -> .)
    COMMA           reduce using rule 109 (neupoint_logical_relational_opt -> .)
    RIGHTPARENTHESIS reduce using rule 109 (neupoint_logical_relational_opt -> .)
    RIGHTSQRBRACKET reduce using rule 109 (neupoint_logical_relational_opt -> .)
    SEMICOLON       reduce using rule 109 (neupoint_logical_relational_opt -> .)

    neupoint_logical_relational_opt shift and go to state 231

state 215

    (73) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN . block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (74) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN . block neupoint_end_conditional_quad
    (49) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (50) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 46

    block                          shift and go to state 232

state 216

    (19) identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion . RIGHTSQRBRACKET

    RIGHTSQRBRACKET shift and go to state 233


state 217

    (81) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list . neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (118) neupoint_validate_num_args -> .

    RIGHTPARENTHESIS reduce using rule 118 (neupoint_validate_num_args -> .)

    neupoint_validate_num_args     shift and go to state 234

state 218

    (82) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args . RIGHTPARENTHESIS neupoint_gosub_quad

    RIGHTPARENTHESIS shift and go to state 235


state 219

    (83) ags_list -> expresion . neupoint_validate_args COMMA ags_list
    (84) ags_list -> expresion . neupoint_validate_args
    (117) neupoint_validate_args -> .

    COMMA           reduce using rule 117 (neupoint_validate_args -> .)
    RIGHTPARENTHESIS reduce using rule 117 (neupoint_validate_args -> .)

    neupoint_validate_args         shift and go to state 236

state 220

    (77) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad . DO block neupoint_while_end

    DO              shift and go to state 237


state 221

    (78) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp . neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end
    (107) neupoint_assignment_quad -> .

    TO              reduce using rule 107 (neupoint_assignment_quad -> .)

    neupoint_assignment_quad       shift and go to state 238

state 222

    (60) assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .

    RETURN          reduce using rule 60 (assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    READ            reduce using rule 60 (assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    WRITE           reduce using rule 60 (assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    IF              reduce using rule 60 (assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    ID              reduce using rule 60 (assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    WHILE           reduce using rule 60 (assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    FOR             reduce using rule 60 (assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    RIGHTBRACKET    reduce using rule 60 (assignment -> identifier neupoint_add_operand EQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)


state 223

    (61) assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .

    RETURN          reduce using rule 61 (assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    READ            reduce using rule 61 (assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    WRITE           reduce using rule 61 (assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    IF              reduce using rule 61 (assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    ID              reduce using rule 61 (assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    WHILE           reduce using rule 61 (assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    FOR             reduce using rule 61 (assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    RIGHTBRACKET    reduce using rule 61 (assignment -> identifier neupoint_add_operand PLUSEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)


state 224

    (62) assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .

    RETURN          reduce using rule 62 (assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    READ            reduce using rule 62 (assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    WRITE           reduce using rule 62 (assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    IF              reduce using rule 62 (assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    ID              reduce using rule 62 (assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    WHILE           reduce using rule 62 (assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    FOR             reduce using rule 62 (assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)
    RIGHTBRACKET    reduce using rule 62 (assignment -> identifier neupoint_add_operand SUBSTRACTEQUALS neupoint_add_operator expresion neupoint_assignment_quad SEMICOLON .)


state 225

    (94) factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .

    MULTIPLY        reduce using rule 94 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    DIVIDE          reduce using rule 94 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    MOD             reduce using rule 94 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    PLUS            reduce using rule 94 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    MINUS           reduce using rule 94 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    RIGHTPARENTHESIS reduce using rule 94 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    COMPARISON      reduce using rule 94 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    GREATERHANOREQUAL reduce using rule 94 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    LESSTHANOREQUAL reduce using rule 94 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    GREATERTHAN     reduce using rule 94 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    LESSTHAN        reduce using rule 94 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    DIFFERENT       reduce using rule 94 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    AND             reduce using rule 94 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    OR              reduce using rule 94 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    COMMA           reduce using rule 94 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    RIGHTSQRBRACKET reduce using rule 94 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    SEMICOLON       reduce using rule 94 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    TO              reduce using rule 94 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)
    DO              reduce using rule 94 (factor -> LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS .)


state 226

    (90) exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .

    RIGHTPARENTHESIS reduce using rule 90 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    COMPARISON      reduce using rule 90 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    GREATERHANOREQUAL reduce using rule 90 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    LESSTHANOREQUAL reduce using rule 90 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    GREATERTHAN     reduce using rule 90 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    LESSTHAN        reduce using rule 90 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    DIFFERENT       reduce using rule 90 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    AND             reduce using rule 90 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    OR              reduce using rule 90 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    COMMA           reduce using rule 90 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    RIGHTSQRBRACKET reduce using rule 90 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    SEMICOLON       reduce using rule 90 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    TO              reduce using rule 90 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)
    DO              reduce using rule 90 (exp -> term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp .)


state 227

    (92) term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .

    PLUS            reduce using rule 92 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    MINUS           reduce using rule 92 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    RIGHTPARENTHESIS reduce using rule 92 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    COMPARISON      reduce using rule 92 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    GREATERHANOREQUAL reduce using rule 92 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    LESSTHANOREQUAL reduce using rule 92 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    GREATERTHAN     reduce using rule 92 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    LESSTHAN        reduce using rule 92 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    DIFFERENT       reduce using rule 92 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    AND             reduce using rule 92 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    OR              reduce using rule 92 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    COMMA           reduce using rule 92 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    RIGHTSQRBRACKET reduce using rule 92 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    SEMICOLON       reduce using rule 92 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    TO              reduce using rule 92 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)
    DO              reduce using rule 92 (term -> factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term .)


state 228

    (69) writing_list -> CTESTRING neupoint_add_cte_operand neupoint_write_quad COMMA writing_list .

    RIGHTPARENTHESIS reduce using rule 69 (writing_list -> CTESTRING neupoint_add_cte_operand neupoint_write_quad COMMA writing_list .)


state 229

    (85) expresion -> exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt .

    COMMA           reduce using rule 85 (expresion -> exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt .)
    RIGHTPARENTHESIS reduce using rule 85 (expresion -> exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt .)
    RIGHTSQRBRACKET reduce using rule 85 (expresion -> exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt .)
    SEMICOLON       reduce using rule 85 (expresion -> exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt .)


state 230

    (86) expresion -> exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt .

    COMMA           reduce using rule 86 (expresion -> exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt .)
    RIGHTPARENTHESIS reduce using rule 86 (expresion -> exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt .)
    RIGHTSQRBRACKET reduce using rule 86 (expresion -> exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt .)
    SEMICOLON       reduce using rule 86 (expresion -> exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt .)


state 231

    (88) exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .

    AND             reduce using rule 88 (exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .)
    OR              reduce using rule 88 (exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .)
    COMMA           reduce using rule 88 (exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .)
    RIGHTPARENTHESIS reduce using rule 88 (exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .)
    RIGHTSQRBRACKET reduce using rule 88 (exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .)
    SEMICOLON       reduce using rule 88 (exp_relational -> exp comparators neupoint_add_operator exp neupoint_logical_relational_opt .)


state 232

    (73) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block . ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (74) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block . neupoint_end_conditional_quad
    (112) neupoint_end_conditional_quad -> .

    ELSE            shift and go to state 239
    RETURN          reduce using rule 112 (neupoint_end_conditional_quad -> .)
    READ            reduce using rule 112 (neupoint_end_conditional_quad -> .)
    WRITE           reduce using rule 112 (neupoint_end_conditional_quad -> .)
    IF              reduce using rule 112 (neupoint_end_conditional_quad -> .)
    ID              reduce using rule 112 (neupoint_end_conditional_quad -> .)
    WHILE           reduce using rule 112 (neupoint_end_conditional_quad -> .)
    FOR             reduce using rule 112 (neupoint_end_conditional_quad -> .)
    RIGHTBRACKET    reduce using rule 112 (neupoint_end_conditional_quad -> .)

    neupoint_end_conditional_quad  shift and go to state 240

state 233

    (19) identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .

    EQUALS          reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    PLUSEQUALS      reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    SUBSTRACTEQUALS reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    INCREMENT       reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DECREMENT       reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MULTIPLY        reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DIVIDE          reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MOD             reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    PLUS            reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    MINUS           reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    RIGHTPARENTHESIS reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    COMMA           reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    COMPARISON      reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    GREATERHANOREQUAL reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    LESSTHANOREQUAL reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    GREATERTHAN     reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    LESSTHAN        reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DIFFERENT       reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    AND             reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    OR              reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    RIGHTSQRBRACKET reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    SEMICOLON       reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    TO              reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)
    DO              reduce using rule 19 (identifier -> ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET .)


state 234

    (81) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args . RIGHTPARENTHESIS neupoint_gosub_quad

    RIGHTPARENTHESIS shift and go to state 241


state 235

    (82) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS . neupoint_gosub_quad
    (119) neupoint_gosub_quad -> .

    SEMICOLON       reduce using rule 119 (neupoint_gosub_quad -> .)
    MULTIPLY        reduce using rule 119 (neupoint_gosub_quad -> .)
    DIVIDE          reduce using rule 119 (neupoint_gosub_quad -> .)
    MOD             reduce using rule 119 (neupoint_gosub_quad -> .)
    PLUS            reduce using rule 119 (neupoint_gosub_quad -> .)
    MINUS           reduce using rule 119 (neupoint_gosub_quad -> .)
    RIGHTPARENTHESIS reduce using rule 119 (neupoint_gosub_quad -> .)
    COMPARISON      reduce using rule 119 (neupoint_gosub_quad -> .)
    GREATERHANOREQUAL reduce using rule 119 (neupoint_gosub_quad -> .)
    LESSTHANOREQUAL reduce using rule 119 (neupoint_gosub_quad -> .)
    GREATERTHAN     reduce using rule 119 (neupoint_gosub_quad -> .)
    LESSTHAN        reduce using rule 119 (neupoint_gosub_quad -> .)
    DIFFERENT       reduce using rule 119 (neupoint_gosub_quad -> .)
    AND             reduce using rule 119 (neupoint_gosub_quad -> .)
    OR              reduce using rule 119 (neupoint_gosub_quad -> .)
    COMMA           reduce using rule 119 (neupoint_gosub_quad -> .)
    RIGHTSQRBRACKET reduce using rule 119 (neupoint_gosub_quad -> .)
    TO              reduce using rule 119 (neupoint_gosub_quad -> .)
    DO              reduce using rule 119 (neupoint_gosub_quad -> .)

    neupoint_gosub_quad            shift and go to state 242

state 236

    (83) ags_list -> expresion neupoint_validate_args . COMMA ags_list
    (84) ags_list -> expresion neupoint_validate_args .

    COMMA           shift and go to state 243
    RIGHTPARENTHESIS reduce using rule 84 (ags_list -> expresion neupoint_validate_args .)


state 237

    (77) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO . block neupoint_while_end
    (49) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (50) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 46

    block                          shift and go to state 244

state 238

    (78) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad . neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end
    (122) neupoint_add_operand_for -> .

    TO              reduce using rule 122 (neupoint_add_operand_for -> .)

    neupoint_add_operand_for       shift and go to state 245

state 239

    (73) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE . neupoint_else_conditional_quad block neupoint_end_conditional_quad
    (111) neupoint_else_conditional_quad -> .

    LEFTBRACKET     reduce using rule 111 (neupoint_else_conditional_quad -> .)

    neupoint_else_conditional_quad shift and go to state 246

state 240

    (74) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .

    RETURN          reduce using rule 74 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    READ            reduce using rule 74 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    WRITE           reduce using rule 74 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    IF              reduce using rule 74 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    ID              reduce using rule 74 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    WHILE           reduce using rule 74 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    FOR             reduce using rule 74 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)
    RIGHTBRACKET    reduce using rule 74 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block neupoint_end_conditional_quad .)


state 241

    (81) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS . neupoint_gosub_quad
    (119) neupoint_gosub_quad -> .

    SEMICOLON       reduce using rule 119 (neupoint_gosub_quad -> .)
    MULTIPLY        reduce using rule 119 (neupoint_gosub_quad -> .)
    DIVIDE          reduce using rule 119 (neupoint_gosub_quad -> .)
    MOD             reduce using rule 119 (neupoint_gosub_quad -> .)
    PLUS            reduce using rule 119 (neupoint_gosub_quad -> .)
    MINUS           reduce using rule 119 (neupoint_gosub_quad -> .)
    RIGHTPARENTHESIS reduce using rule 119 (neupoint_gosub_quad -> .)
    COMPARISON      reduce using rule 119 (neupoint_gosub_quad -> .)
    GREATERHANOREQUAL reduce using rule 119 (neupoint_gosub_quad -> .)
    LESSTHANOREQUAL reduce using rule 119 (neupoint_gosub_quad -> .)
    GREATERTHAN     reduce using rule 119 (neupoint_gosub_quad -> .)
    LESSTHAN        reduce using rule 119 (neupoint_gosub_quad -> .)
    DIFFERENT       reduce using rule 119 (neupoint_gosub_quad -> .)
    AND             reduce using rule 119 (neupoint_gosub_quad -> .)
    OR              reduce using rule 119 (neupoint_gosub_quad -> .)
    COMMA           reduce using rule 119 (neupoint_gosub_quad -> .)
    RIGHTSQRBRACKET reduce using rule 119 (neupoint_gosub_quad -> .)
    TO              reduce using rule 119 (neupoint_gosub_quad -> .)
    DO              reduce using rule 119 (neupoint_gosub_quad -> .)

    neupoint_gosub_quad            shift and go to state 247

state 242

    (82) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .

    SEMICOLON       reduce using rule 82 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    MULTIPLY        reduce using rule 82 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    DIVIDE          reduce using rule 82 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    MOD             reduce using rule 82 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    PLUS            reduce using rule 82 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    MINUS           reduce using rule 82 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    RIGHTPARENTHESIS reduce using rule 82 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    COMPARISON      reduce using rule 82 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    GREATERHANOREQUAL reduce using rule 82 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    LESSTHANOREQUAL reduce using rule 82 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    GREATERTHAN     reduce using rule 82 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    LESSTHAN        reduce using rule 82 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    DIFFERENT       reduce using rule 82 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    AND             reduce using rule 82 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    OR              reduce using rule 82 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    COMMA           reduce using rule 82 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    RIGHTSQRBRACKET reduce using rule 82 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    TO              reduce using rule 82 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    DO              reduce using rule 82 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)


state 243

    (83) ags_list -> expresion neupoint_validate_args COMMA . ags_list
    (83) ags_list -> . expresion neupoint_validate_args COMMA ags_list
    (84) ags_list -> . expresion neupoint_validate_args
    (85) expresion -> . exp_relational AND neupoint_add_operator expresion neupoint_logical_relational_opt
    (86) expresion -> . exp_relational OR neupoint_add_operator expresion neupoint_logical_relational_opt
    (87) expresion -> . exp_relational
    (88) exp_relational -> . exp comparators neupoint_add_operator exp neupoint_logical_relational_opt
    (89) exp_relational -> . exp
    (90) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (91) exp -> . term neupoint_arithmetic_exp_quad
    (92) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (93) term -> . factor neupoint_arithmetic_term_quad
    (94) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (95) factor -> . CTEINT neupoint_add_cte_operand
    (96) factor -> . CTEFLOAT neupoint_add_cte_operand
    (97) factor -> . CTECHAR neupoint_add_cte_operand
    (98) factor -> . function_call
    (99) factor -> . identifier neupoint_add_operand
    (81) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 109
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 118

    expresion                      shift and go to state 219
    ags_list                       shift and go to state 248
    exp_relational                 shift and go to state 125
    exp                            shift and go to state 126
    term                           shift and go to state 111
    factor                         shift and go to state 112
    function_call                  shift and go to state 116
    identifier                     shift and go to state 117

state 244

    (77) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block . neupoint_while_end
    (114) neupoint_while_end -> .

    RETURN          reduce using rule 114 (neupoint_while_end -> .)
    READ            reduce using rule 114 (neupoint_while_end -> .)
    WRITE           reduce using rule 114 (neupoint_while_end -> .)
    IF              reduce using rule 114 (neupoint_while_end -> .)
    ID              reduce using rule 114 (neupoint_while_end -> .)
    WHILE           reduce using rule 114 (neupoint_while_end -> .)
    FOR             reduce using rule 114 (neupoint_while_end -> .)
    RIGHTBRACKET    reduce using rule 114 (neupoint_while_end -> .)

    neupoint_while_end             shift and go to state 249

state 245

    (78) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for . TO exp neupoint_comparison_quad DO block neupoint_for_end

    TO              shift and go to state 250


state 246

    (73) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad . block neupoint_end_conditional_quad
    (49) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (50) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 46

    block                          shift and go to state 251

state 247

    (81) function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .

    SEMICOLON       reduce using rule 81 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    MULTIPLY        reduce using rule 81 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    DIVIDE          reduce using rule 81 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    MOD             reduce using rule 81 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    PLUS            reduce using rule 81 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    MINUS           reduce using rule 81 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    RIGHTPARENTHESIS reduce using rule 81 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    COMPARISON      reduce using rule 81 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    GREATERHANOREQUAL reduce using rule 81 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    LESSTHANOREQUAL reduce using rule 81 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    GREATERTHAN     reduce using rule 81 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    LESSTHAN        reduce using rule 81 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    DIFFERENT       reduce using rule 81 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    AND             reduce using rule 81 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    OR              reduce using rule 81 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    COMMA           reduce using rule 81 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    RIGHTSQRBRACKET reduce using rule 81 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    TO              reduce using rule 81 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)
    DO              reduce using rule 81 (function_call -> ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad .)


state 248

    (83) ags_list -> expresion neupoint_validate_args COMMA ags_list .

    RIGHTPARENTHESIS reduce using rule 83 (ags_list -> expresion neupoint_validate_args COMMA ags_list .)


state 249

    (77) conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .

    RETURN          reduce using rule 77 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    READ            reduce using rule 77 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    WRITE           reduce using rule 77 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    IF              reduce using rule 77 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    ID              reduce using rule 77 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    WHILE           reduce using rule 77 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    FOR             reduce using rule 77 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)
    RIGHTBRACKET    reduce using rule 77 (conditional -> WHILE neupoint_while_start LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad DO block neupoint_while_end .)


state 250

    (78) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO . exp neupoint_comparison_quad DO block neupoint_for_end
    (90) exp -> . term neupoint_arithmetic_exp_quad exp_operator neupoint_add_operator exp
    (91) exp -> . term neupoint_arithmetic_exp_quad
    (92) term -> . factor neupoint_arithmetic_term_quad term_operator neupoint_add_operator term
    (93) term -> . factor neupoint_arithmetic_term_quad
    (94) factor -> . LEFTPARENTHESIS neupoint_add_wall expresion neupoint_remove_wall RIGHTPARENTHESIS
    (95) factor -> . CTEINT neupoint_add_cte_operand
    (96) factor -> . CTEFLOAT neupoint_add_cte_operand
    (97) factor -> . CTECHAR neupoint_add_cte_operand
    (98) factor -> . function_call
    (99) factor -> . identifier neupoint_add_operand
    (81) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall ags_list neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (82) function_call -> . ID neupoint_validate_function LEFTPARENTHESIS neupoint_era_quad neupoint_add_wall neupoint_validate_num_args RIGHTPARENTHESIS neupoint_gosub_quad
    (19) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (20) identifier -> . ID LEFTSQRBRACKET expresion RIGHTSQRBRACKET
    (21) identifier -> . ID

    LEFTPARENTHESIS shift and go to state 109
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 118

    exp                            shift and go to state 252
    term                           shift and go to state 111
    factor                         shift and go to state 112
    function_call                  shift and go to state 116
    identifier                     shift and go to state 117

state 251

    (73) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block . neupoint_end_conditional_quad
    (112) neupoint_end_conditional_quad -> .

    RETURN          reduce using rule 112 (neupoint_end_conditional_quad -> .)
    READ            reduce using rule 112 (neupoint_end_conditional_quad -> .)
    WRITE           reduce using rule 112 (neupoint_end_conditional_quad -> .)
    IF              reduce using rule 112 (neupoint_end_conditional_quad -> .)
    ID              reduce using rule 112 (neupoint_end_conditional_quad -> .)
    WHILE           reduce using rule 112 (neupoint_end_conditional_quad -> .)
    FOR             reduce using rule 112 (neupoint_end_conditional_quad -> .)
    RIGHTBRACKET    reduce using rule 112 (neupoint_end_conditional_quad -> .)

    neupoint_end_conditional_quad  shift and go to state 253

state 252

    (78) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp . neupoint_comparison_quad DO block neupoint_for_end
    (123) neupoint_comparison_quad -> .

    DO              reduce using rule 123 (neupoint_comparison_quad -> .)

    neupoint_comparison_quad       shift and go to state 254

state 253

    (73) decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .

    RETURN          reduce using rule 73 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    READ            reduce using rule 73 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    WRITE           reduce using rule 73 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    IF              reduce using rule 73 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    ID              reduce using rule 73 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    WHILE           reduce using rule 73 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    FOR             reduce using rule 73 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)
    RIGHTBRACKET    reduce using rule 73 (decision -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS neupoint_conditional_quad THEN block ELSE neupoint_else_conditional_quad block neupoint_end_conditional_quad .)


state 254

    (78) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad . DO block neupoint_for_end

    DO              shift and go to state 255


state 255

    (78) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO . block neupoint_for_end
    (49) block -> . LEFTBRACKET statutes_list RIGHTBRACKET
    (50) block -> . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET     shift and go to state 46

    block                          shift and go to state 256

state 256

    (78) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block . neupoint_for_end
    (124) neupoint_for_end -> .

    RETURN          reduce using rule 124 (neupoint_for_end -> .)
    READ            reduce using rule 124 (neupoint_for_end -> .)
    WRITE           reduce using rule 124 (neupoint_for_end -> .)
    IF              reduce using rule 124 (neupoint_for_end -> .)
    ID              reduce using rule 124 (neupoint_for_end -> .)
    WHILE           reduce using rule 124 (neupoint_for_end -> .)
    FOR             reduce using rule 124 (neupoint_for_end -> .)
    RIGHTBRACKET    reduce using rule 124 (neupoint_for_end -> .)

    neupoint_for_end               shift and go to state 257

state 257

    (78) non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .

    RETURN          reduce using rule 78 (non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .)
    READ            reduce using rule 78 (non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .)
    WRITE           reduce using rule 78 (non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .)
    IF              reduce using rule 78 (non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .)
    ID              reduce using rule 78 (non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .)
    WHILE           reduce using rule 78 (non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .)
    FOR             reduce using rule 78 (non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .)
    RIGHTBRACKET    reduce using rule 78 (non_conditional -> FOR ID neupoint_add_operand_integer EQUALS neupoint_add_operator exp neupoint_assignment_quad neupoint_add_operand_for TO exp neupoint_comparison_quad DO block neupoint_for_end .)

